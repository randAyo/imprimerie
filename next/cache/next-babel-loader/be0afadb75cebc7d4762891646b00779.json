{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport classes from './Cards.module.scss';\nimport details from '../../utils/sample-data';\nimport SvgHolder from '../svg/SvgHolder';\nimport Card from '../Card/Card';\nimport useWindowDimensions from '../../hoc/useWindow';\nvar cards = classes.cards,\n    carda = classes.carda,\n    colCard = classes.colCard,\n    indicatorContainer = classes.indicatorContainer,\n    indicatorItem = classes.indicatorItem,\n    rightCardBtn = classes.rightCardBtn,\n    leftCardBtn = classes.leftCardBtn;\n\nvar Cards = function Cards() {\n  if (true) {\n    var _useWindowDimensions = useWindowDimensions(),\n        width = _useWindowDimensions.width;\n  }\n\n  var _useState = useState(0),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var onNext = function onNext() {\n    if (index < details.length - 1) {\n      setIndex(index + 1);\n    } else {\n      setIndex(0);\n    }\n  };\n\n  var onPrev = function onPrev() {\n    if (index > 0) {\n      setIndex(index - 1);\n    } else {\n      setIndex(details.length - 1);\n    }\n  };\n\n  var multiplier;\n\n  if (width > 0) {\n    multiplier = -(100 * index);\n  } else if (width > 600) {\n    multiplier = 60 - 100 * index;\n  } else if (width > 960) {\n    multiplier = 90 - 100 * index;\n  } else if (width > 1280) {\n    multiplier = 120 - 100 * index;\n  } else if (width > 1920) {\n    multiplier = 140 * index;\n  }\n\n  var mappedCards = details.map(function (ex) {\n    console.log(' rendered');\n    return __jsx(\"div\", {\n      style: {\n        transform: \"translateX(\".concat(multiplier, \"%)\")\n      },\n      className: index === ex.id ? \"\".concat(colCard, \" card-active-\").concat(index, \"s\") : colCard,\n      key: ex.id\n    }, __jsx(Card // @ts-ignore\n    , {\n      cardId: ex.id,\n      title: ex.name,\n      src: ex.src,\n      content: ex.content.description,\n      setIndex: setIndex\n    }));\n  });\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: onPrev,\n    className: leftCardBtn\n  }, __jsx(SvgHolder, {\n    fill: \"#CF5600\",\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\"\n  }, __jsx(\"path\", {\n    d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n  }))), __jsx(\"button\", {\n    onClick: onNext,\n    className: rightCardBtn\n  }, __jsx(SvgHolder, {\n    fill: \"#CF5600\",\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\"\n  }, __jsx(\"path\", {\n    d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n  }))), __jsx(\"div\", {\n    className: cards\n  }, __jsx(\"div\", {\n    className: carda\n  }, mappedCards), __jsx(\"div\", {\n    className: indicatorContainer\n  }, details.map(function (ex) {\n    return __jsx(\"div\", {\n      onClick: function onClick() {\n        return setIndex(ex.id);\n      },\n      key: ex.id,\n      className: index === ex.id ? \"\".concat(indicatorItem, \" indicator-item-active-\").concat(index, \"s\") : indicatorItem\n    });\n  }))));\n};\n\nexport default React.memo(Cards);","map":null,"metadata":{},"sourceType":"module"}