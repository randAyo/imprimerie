{"ast":null,"code":"var _jsxFileName = \"/home/youpix/Desktop/work/print/Print-Ts/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport Head from 'next/head';\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, __jsx(\"link\", {\n      rel: \"preload\",\n      as: \"style\",\n      onLoad: \"this.onload=null;this.rel='stylesheet'\",\n      href: \"../scss/styles.scss\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    })), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    })));\n  }\n\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext: AppContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/home/youpix/Desktop/work/print/Print-Ts/pages/_app.tsx"],"names":["App","Head","MyApp","render","Component","pageProps","props"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,KAAN,SAAoBF,GAApB,CAAqC;AACnCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,GAAG,EAAC,SAAV;AAAoB,MAAA,EAAE,EAAC,OAAvB;AAA+B,MAAA,MAAM,EAAC,wCAAtC;AAA+E,MAAA,IAAI,EAAC,qBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,CADF;AAQD;;AAXkC,C,CAcrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,eAAeH,KAAf","sourcesContent":["import App from 'next/app'\nimport Head from 'next/head';\n\n\nclass MyApp extends App<any, {}, {}> {\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <>\n        <Head>\n          <link rel=\"preload\" as=\"style\" onLoad=\"this.onload=null;this.rel='stylesheet'\" href=\"../scss/styles.scss\" />\n        </Head>\n        <Component {...pageProps} />\n      </>\n    )\n  }\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext: AppContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n\n//   return { ...appProps }\n// }\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}