{"ast":null,"code":"import details from '../../../utils/sample-data';\nexport default function getProduct(req, res) {\n  if (req.method !== 'GET') {\n    res.status(500).json({\n      message: 'Sorry we only support Get'\n    });\n  }\n\n  const quer = req.query.id.toString().toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  const product = details.find(ex => ex.name.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") === quer);\n\n  if (typeof product === 'undefined') {\n    res.json({\n      message: 'product Not Found'\n    });\n  } else {\n    const {\n      name,\n      id,\n      src,\n      obj,\n      content\n    } = product;\n    const {\n      description,\n      accordion\n    } = content;\n    const nameList = [];\n    Object.values(details).map(ex => nameList.push({\n      name: ex.name,\n      id: ex.id\n    }));\n    res.json({\n      name,\n      id,\n      src,\n      description,\n      accordion,\n      minPrice: obj.minPrice,\n      nameList\n    });\n  }\n}","map":{"version":3,"sources":["/home/youpix/Desktop/work/print/Print-Ts/pages/api/product/[id].ts"],"names":["details","getProduct","req","res","method","status","json","message","quer","query","id","toString","toLowerCase","normalize","replace","product","find","ex","name","src","obj","content","description","accordion","nameList","Object","values","map","push","minPrice"],"mappings":"AACA,OAAOA,OAAP,MAAoB,4BAApB;AAGA,eAAe,SAASC,UAAT,CAAoBC,GAApB,EAAyCC,GAAzC,EAA+D;AAC1E,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACtBD,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACH;;AACD,QAAMC,IAAI,GAAGN,GAAG,CAACO,KAAJ,CAAUC,EAAV,CAAaC,QAAb,GAAwBC,WAAxB,GAAsCC,SAAtC,CAAgD,KAAhD,EAAuDC,OAAvD,CAA+D,kBAA/D,EAAmF,EAAnF,CAAb;AACA,QAAMC,OAAO,GAAGf,OAAO,CAACgB,IAAR,CAAaC,EAAE,IAAIA,EAAE,CAACC,IAAH,CAAQN,WAAR,GAAsBC,SAAtB,CAAgC,KAAhC,EAAuCC,OAAvC,CAA+C,kBAA/C,EAAmE,EAAnE,MAA2EN,IAA9F,CAAhB;;AACA,MAAI,OAAOO,OAAP,KAAmB,WAAvB,EAAoC;AAChCZ,IAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AAEH,GAHD,MAGO;AAEH,UAAM;AAAEW,MAAAA,IAAF;AAAQR,MAAAA,EAAR;AAAYS,MAAAA,GAAZ;AAAiBC,MAAAA,GAAjB;AAAsBC,MAAAA;AAAtB,QAAkCN,OAAxC;AACA,UAAM;AAAEO,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA6BF,OAAnC;AACA,UAAMG,QAAoB,GAAG,EAA7B;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAc1B,OAAd,EAAuB2B,GAAvB,CAA2BV,EAAE,IAAIO,QAAQ,CAACI,IAAT,CAAc;AAAEV,MAAAA,IAAI,EAAED,EAAE,CAACC,IAAX;AAAiBR,MAAAA,EAAE,EAAEO,EAAE,CAACP;AAAxB,KAAd,CAAjC;AACAP,IAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEY,MAAAA,IAAF;AAAQR,MAAAA,EAAR;AAAYS,MAAAA,GAAZ;AAAiBG,MAAAA,WAAjB;AAA8BC,MAAAA,SAA9B;AAAyCM,MAAAA,QAAQ,EAAET,GAAG,CAACS,QAAvD;AAAiEL,MAAAA;AAAjE,KAAT;AACH;AACJ","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport details from '../../../utils/sample-data'\nimport { NameList } from '../../../interfaces/index'\n\nexport default function getProduct(req: NextApiRequest, res: NextApiResponse) {\n    if (req.method !== 'GET') {\n        res.status(500).json({ message: 'Sorry we only support Get' })\n    }\n    const quer = req.query.id.toString().toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const product = details.find(ex => ex.name.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") === quer);\n    if (typeof product === 'undefined') {\n        res.json({ message: 'product Not Found' })\n\n    } else {\n\n        const { name, id, src, obj, content } = product!;\n        const { description, accordion } = content;\n        const nameList: NameList[] = []\n        Object.values(details).map(ex => nameList.push({ name: ex.name, id: ex.id }))\n        res.json({ name, id, src, description, accordion, minPrice: obj.minPrice, nameList })\n    }\n}"]},"metadata":{},"sourceType":"module"}