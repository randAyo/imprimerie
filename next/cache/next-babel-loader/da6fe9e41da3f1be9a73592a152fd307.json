{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/youpix/Desktop/work/print/Print-Ts/components/Accordion/Accordion.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport classes from './Accordion.module.scss';\nimport { Chevron } from '../svg/Chevron';\nexport var Accordion = function Accordion(_ref) {\n  _s();\n\n  var answer = _ref.answer,\n      title = _ref.title;\n  var accordion = classes.accordion,\n      accordionSection = classes.accordionSection,\n      accordionTitle = classes.accordionTitle,\n      accordionContent = classes.accordionContent,\n      active = classes.active,\n      accordionIcon = classes.accordionIcon,\n      rotate = classes.rotate,\n      accordiontext = classes.accordiontext;\n\n  var _useState = useState(\"\"),\n      setActive = _useState[0],\n      setActiveState = _useState[1];\n\n  var _useState2 = useState(\"0px\"),\n      setHeight = _useState2[0],\n      setHeightState = _useState2[1];\n\n  var _useState3 = useState(accordionIcon),\n      setRotate = _useState3[0],\n      setRotateState = _useState3[1];\n\n  var _useState4 = useState(false),\n      setId = _useState4[0],\n      setChangeId = _useState4[1];\n\n  var contents = useRef(null);\n\n  function toggleAccordion() {\n    setChangeId(!setId);\n    setActiveState(setActive === \"\" ? active : \"\");\n    setHeightState( //@ts-ignore\n    setActive === active ? \"0px\" : \"\".concat(contents.current.scrollHeight, \"px\"));\n    setRotateState(setActive === active ? accordionIcon : [accordionIcon, rotate].join(' '));\n  }\n\n  return __jsx(\"div\", {\n    className: accordionSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: toggleAccordion,\n    className: [accordion, setActive].join(' '),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: accordionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, title), __jsx(Chevron, {\n    className: \"\".concat(setRotate),\n    width: 10,\n    fill: \"#003459\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: accordionContent,\n    ref: contents,\n    style: {\n      maxHeight: \"\".concat(setHeight)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: accordiontext,\n    dangerouslySetInnerHTML: {\n      __html: answer\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(Accordion, \"TDmFc2hZ8GIBuC2aPfp3HPSA6cc=\");\n\n_c = Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/home/youpix/Desktop/work/print/Print-Ts/components/Accordion/Accordion.tsx"],"names":["React","useState","useRef","classes","Chevron","Accordion","answer","title","accordion","accordionSection","accordionTitle","accordionContent","active","accordionIcon","rotate","accordiontext","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","setId","setChangeId","contents","toggleAccordion","current","scrollHeight","join","maxHeight","__html"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport classes from './Accordion.module.scss'\nimport { Chevron } from '../svg/Chevron';\n\ninterface AccordionProps {\n    title: string\n    answer: string\n}\n\nexport const Accordion: React.FC<AccordionProps> = ({ answer, title }) => {\n    const { accordion, accordionSection, accordionTitle, accordionContent, active, accordionIcon, rotate, accordiontext } = classes;\n    const [setActive, setActiveState] = useState(\"\");\n    const [setHeight, setHeightState] = useState(\"0px\");\n    const [setRotate, setRotateState] = useState(accordionIcon);\n    const [setId, setChangeId] = useState(false);\n    const contents = useRef(null)\n    function toggleAccordion() {\n        setChangeId(!setId);\n        setActiveState(setActive === \"\" ? active : \"\");\n        setHeightState(\n            //@ts-ignore\n            setActive === active ? \"0px\" : `${contents.current.scrollHeight}px`\n        );\n        setRotateState(\n            setActive === active ? accordionIcon : [accordionIcon, rotate].join(' ')\n        );\n    }\n\n    return (\n        <div className={accordionSection}>\n            <button onClick={toggleAccordion} className={[accordion, setActive].join(' ')}>\n                <p className={accordionTitle}>{title}</p>\n                <Chevron className={`${setRotate}`} width={10} fill={\"#003459\"} />\n            </button>\n            <div className={accordionContent} ref={contents} style={{ maxHeight: `${setHeight}` }}>\n                <div className={accordiontext}\n                    dangerouslySetInnerHTML={{ __html: answer }}\n                ></div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}