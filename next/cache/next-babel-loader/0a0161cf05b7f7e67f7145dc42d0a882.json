{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/Layout';\nimport { server } from '../../../config';\nimport useWindowDimensions from '../../../hoc/useWindow';\nimport ServiceWrapper from '../../../components/ServiceWrapper/ServiceWrapper';\nimport SideNav from '../../../components/SideNav/SideNav';\nimport ServiceContent from '../../../components/ServiceContent/ServiceContent'; // import dynamic from 'next/dynamic'\n// const SideNav = dynamic(() => import('../../../components/SideNav/SideNav'));\n// const ServiceContent = dynamic(() => import('../../../components/ServiceContent/ServiceContent'));\n// const ServiceWrapper = dynamic(() => import('../../../components/ServiceWrapper/ServiceWrapper'));\n\nvar Product = function Product(_ref) {\n  var name = _ref.name,\n      accordion = _ref.accordion,\n      nameList = _ref.nameList,\n      src = _ref.src,\n      description = _ref.description,\n      minPrice = _ref.minPrice;\n\n  if (typeof name === 'undefined') {\n    return __jsx(\"h1\", null, \" Error \");\n  }\n\n  if (true) {\n    var _useWindowDimensions = useWindowDimensions(),\n        width = _useWindowDimensions.width;\n  }\n\n  return __jsx(Layout, {\n    title: \"Express Imprimerie Services\"\n  }, __jsx(ServiceWrapper, null, width > 900 && __jsx(SideNav, {\n    nameList: nameList\n  }), __jsx(ServiceContent, {\n    accordionArray: accordion,\n    name: name,\n    src: src,\n    minPrice: minPrice,\n    description: description\n  })));\n};\n\nProduct.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, res, post;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            _context.next = 3;\n            return fetch(\"\".concat(server, \"/api/product/\").concat(query.id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            post = _context.sent;\n            return _context.abrupt(\"return\", post);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}