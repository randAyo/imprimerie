{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport classes from './Header.module.scss';\nimport { Logo } from './Logo';\nimport Link from 'next/link';\nimport { DropDown } from '../DropDown/DropDown';\nimport details from '../../utils/sample-data';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Burger = () => __jsx(React.Fragment, null, __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null));\n\nconst {\n  bubble,\n  headerStyle,\n  Nav,\n  navbarContentList,\n  navbarAnchor,\n  dropdown,\n  blue,\n  orange,\n  burger,\n  burgerX\n} = classes;\nexport const Header = ({\n  height\n}) => {\n  const {\n    0: isNavVisible,\n    1: setIsNavVisible\n  } = useState(false);\n  const {\n    0: isSmallScreen,\n    1: setisSmallScreen\n  } = useState(false);\n  const {\n    0: isDropVisible,\n    1: setisDropVisible\n  } = useState(false); //change color on scroll\n\n  useEffect(() => {\n    if (height) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n\n    return function cleanup() {\n      if (height) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 900px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n    return () => {\n      mediaQuery.removeEventListener(\"change\", handleMediaQueryChange);\n    };\n  }, []);\n\n  const handleMediaQueryChange = mediaQuery => {\n    return mediaQuery.matches ? setisSmallScreen(false) : setisSmallScreen(true);\n  };\n\n  const headerColorChange = () => {\n    const pageHeight = window.pageYOffset;\n    const element = document.querySelector(\"header\");\n\n    if (pageHeight > height) {\n      element.style.backgroundColor = blue;\n    } else {\n      element.style.backgroundColor = orange;\n    }\n  };\n\n  const toggleNav = () => {\n    setIsNavVisible(!isNavVisible);\n  };\n\n  const toggleDropDown = () => {\n    // onOneHover(0)\n    setisDropVisible(!isDropVisible);\n  };\n\n  const onOneHover = id => {\n    const styl = document.querySelector(`.${bubble}`);\n\n    if (id === 0) {\n      styl.style.width = '0px';\n      styl.style.height = '0px';\n    } else {\n      const elem = document.getElementsByClassName(`${navbarAnchor}`)[id];\n      const firstElem = elem.getBoundingClientRect();\n      const left = elem.offsetLeft;\n      styl.style.left = `${left}px`;\n      styl.style.width = `${firstElem.width}px`;\n      styl.style.height = `${firstElem.height / 4}px`;\n    }\n  };\n\n  const nameList = [];\n  Object.values(details).map(ex => nameList.push(ex.name));\n  return __jsx(\"header\", {\n    className: headerStyle\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(Logo, {\n    colors: {\n      stroke: \"#fdfffc\",\n      fill: \"none\"\n    },\n    width: \"250\",\n    height: \"60\",\n    className: \"logo-svg\"\n  }))), __jsx(CSSTransition, {\n    in: isSmallScreen || isNavVisible,\n    timeout: 350,\n    classNames: \"NavAnimation\",\n    unmountOnExit: true\n  }, __jsx(\"nav\", {\n    className: Nav\n  }, __jsx(\"ul\", {\n    className: navbarContentList\n  }, __jsx(\"li\", {\n    onClick: () => isDropVisible ? null : toggleDropDown(),\n    onMouseEnter: () => isDropVisible ? null : toggleDropDown(),\n    className: dropdown\n  }, __jsx(\"a\", {\n    onMouseOver: () => onOneHover(0),\n    className: [navbarAnchor].join()\n  }, \"SERVICES\"), __jsx(CSSTransition, {\n    in: isDropVisible,\n    timeout: 350,\n    classNames: \"DropAnimation\",\n    unmountOnExit: true\n  }, __jsx(DropDown, {\n    toggleDropDown: toggleDropDown,\n    toggleNav: toggleNav,\n    content: nameList\n  }))), __jsx(\"li\", null, __jsx(\"a\", {\n    onMouseOver: () => onOneHover(1),\n    className: navbarAnchor,\n    href: \"/#section-about\"\n  }, \"Pourquoi Nous?\")), __jsx(\"li\", null, __jsx(\"a\", {\n    onMouseOver: () => onOneHover(2),\n    className: navbarAnchor,\n    href: \"/#section-contact\"\n  }, \"Contact\")), __jsx(\"div\", {\n    className: bubble\n  })))), __jsx(\"div\", {\n    onClick: toggleNav,\n    className: !isNavVisible ? burger : [burger, burgerX].join(' ')\n  }, __jsx(Burger, null)));\n};","map":null,"metadata":{},"sourceType":"module"}