{"ast":null,"code":"var _jsxFileName = \"/home/youpix/Desktop/work/print/Print-Ts/components/Cards/Cards.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport classes from './Cards.module.scss';\nimport details from '../../utils/sample-data';\nimport { SvgHolder } from '../svg/SvgHolder';\nimport { Card } from '../Card/Card';\nimport useWindowDimensions from '../../hoc/useWindow';\nconst {\n  cards,\n  carda,\n  colCard,\n  indicatorContainer,\n  indicatorItem,\n  rightCardBtn,\n  leftCardBtn\n} = classes;\n\nconst Cards = () => {\n  if (false) {\n    var {\n      width\n    } = useWindowDimensions();\n  }\n\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n\n  const onNext = () => {\n    if (index < details.length - 1) {\n      setIndex(index + 1);\n    } else {\n      setIndex(0);\n    }\n  };\n\n  const onPrev = () => {\n    if (index > 0) {\n      setIndex(index - 1);\n    } else {\n      setIndex(details.length - 1);\n    }\n  };\n\n  let multiplier;\n\n  if (width > 0) {\n    multiplier = -(100 * index);\n  } else if (width > 600) {\n    multiplier = 60 - 100 * index;\n  } else if (width > 960) {\n    multiplier = 90 - 100 * index;\n  } else if (width > 1280) {\n    multiplier = 120 - 100 * index;\n  } else if (width > 1920) {\n    multiplier = 140 * index;\n  }\n\n  const mappedCards = details.map(ex => {\n    console.log(' rendered');\n    return __jsx(\"div\", {\n      style: {\n        transform: `translateX(${multiplier}%)`\n      },\n      className: index === ex.id ? `${colCard} card-active-${index}s` : colCard,\n      key: ex.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, __jsx(Card // @ts-ignore\n    , {\n      cardId: ex.id,\n      title: ex.name,\n      src: ex.src,\n      content: ex.content.description,\n      setIndex: setIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  });\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: onPrev,\n    className: leftCardBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(SvgHolder, {\n    fill: \"#CF5600\",\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"path\", {\n    d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))), __jsx(\"button\", {\n    onClick: onNext,\n    className: rightCardBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(SvgHolder, {\n    fill: \"#CF5600\",\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"path\", {\n    d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: carda,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, mappedCards), __jsx(\"div\", {\n    className: indicatorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, details.map(ex => __jsx(\"div\", {\n    onClick: () => setIndex(ex.id),\n    key: ex.id,\n    className: index === ex.id ? `${indicatorItem} indicator-item-active-${index}s` : indicatorItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }\n  })))));\n};\n\nexport default React.memo(Cards);","map":{"version":3,"sources":["/home/youpix/Desktop/work/print/Print-Ts/components/Cards/Cards.tsx"],"names":["React","useState","classes","details","SvgHolder","Card","useWindowDimensions","cards","carda","colCard","indicatorContainer","indicatorItem","rightCardBtn","leftCardBtn","Cards","width","index","setIndex","onNext","length","onPrev","multiplier","mappedCards","map","ex","console","log","transform","id","name","src","content","description","memo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport classes from './Cards.module.scss'\nimport details from '../../utils/sample-data'\nimport { SvgHolder } from '../svg/SvgHolder';\nimport { Card } from '../Card/Card'\nimport useWindowDimensions from '../../hoc/useWindow';\nconst { cards, carda, colCard, indicatorContainer, indicatorItem, rightCardBtn, leftCardBtn } = classes;\n\nconst Cards: React.FC = () => {\n  if (process.browser) {\n    var { width } = useWindowDimensions();\n  }\n  const [index, setIndex] = useState<number>(0);\n  const onNext = () => {\n    if (index < details.length - 1) {\n      setIndex(index + 1)\n    } else {\n      setIndex(0)\n    }\n  }\n  const onPrev = () => {\n    if (index > 0) {\n      setIndex(index - 1)\n    } else {\n      setIndex(details.length - 1)\n    }\n  }\n  let multiplier: number;\n  if (width > 0) {\n    multiplier = -(100 * index);\n  } else if (width > 600) {\n    multiplier = (60 - 100 * index);\n  } else if (width > 960) {\n    multiplier = (90 - 100 * index);\n  } else if (width > 1280) {\n    multiplier = (120 - 100 * index);\n  } else if (width > 1920) {\n    multiplier = (140 * index);\n  }\n  const mappedCards = details.map(ex => {\n    console.log(' rendered')\n    return (\n      <div\n        style={{ transform: `translateX(${multiplier}%)` }} className={index === ex.id ? `${colCard} card-active-${index}s` : colCard} key={ex.id}  >\n        <Card\n          // @ts-ignore\n          cardId={ex.id}\n          title={ex.name}\n          src={ex.src}\n          content={ex.content.description}\n          setIndex={setIndex}\n        />\n      </div>)\n  })\n  return (\n    <>\n      <button onClick={onPrev} className={leftCardBtn}>\n        <SvgHolder\n          fill=\"#CF5600\"\n          width=\"100%\"\n          height=\"100%\"\n          viewBox=\"0 0 24 24\">\n          <path d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"></path>\n        </SvgHolder>\n      </button>\n      <button onClick={onNext} className={rightCardBtn}>\n        <SvgHolder\n          fill=\"#CF5600\"\n          width=\"100%\"\n          height=\"100%\"\n          viewBox=\"0 0 24 24\">\n          <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path>\n        </SvgHolder>\n      </button>\n      <div className={cards}>\n        <div className={carda}>{mappedCards}</div>\n        <div className={indicatorContainer}>\n          {details.map(ex => <div\n            onClick={() => setIndex(ex.id)}\n            key={ex.id}\n            className={index === ex.id ? `${indicatorItem} indicator-item-active-${index}s` : indicatorItem}\n          ></div>)}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default React.memo(Cards);"]},"metadata":{},"sourceType":"module"}