module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../ssr-module-cache.js');
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ({

/***/ "/jkW":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string

const TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

/***/ }),

/***/ "0Bsm":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__("TqRt");

exports.__esModule = true;
exports.default = withRouter;

var _react = _interopRequireDefault(__webpack_require__("cDcd"));

var _router = __webpack_require__("nOHt");

function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react.default.createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }

  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

  if (false) {}

  return WithRouterWrapper;
}

/***/ }),

/***/ "1N5A":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WhatsApp; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("cDcd");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _SvgHolder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("SQJ2");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;


const WhatsApp = () => {
  return __jsx(_SvgHolder__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"], {
    viewBox: "0 0 24 24",
    width: "20px",
    height: "20px"
  }, __jsx("path", {
    d: "M16.75 13.96c.25.13.41.2.46.3.06.11.04.61-.21 1.18-.2.56-1.24 1.1-1.7 1.12-.46.02-.47.36-2.96-.73-2.49-1.09-3.99-3.75-4.11-3.92-.12-.17-.96-1.38-.92-2.61.05-1.22.69-1.8.95-2.04.24-.26.51-.29.68-.26h.47c.15 0 .36-.06.55.45l.69 1.87c.06.13.1.28.01.44l-.27.41-.39.42c-.12.12-.26.25-.12.5.12.26.62 1.09 1.32 1.78.91.88 1.71 1.17 1.95 1.3.24.14.39.12.54-.04l.81-.94c.19-.25.35-.19.58-.11l1.67.88M12 2a10 10 0 0 1 10 10 10 10 0 0 1-10 10c-1.97 0-3.8-.57-5.35-1.55L2 22l1.55-4.65A9.969 9.969 0 0 1 2 12 10 10 0 0 1 12 2m0 2a8 8 0 0 0-8 8c0 1.72.54 3.31 1.46 4.61L4.5 19.5l2.89-.96A7.95 7.95 0 0 0 12 20a8 8 0 0 0 8-8 8 8 0 0 0-8-8z"
  }));
};

/***/ }),

/***/ 2:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("23aj");


/***/ }),

/***/ "23aj":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__("cDcd");
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: ./components/Layout.tsx + 5 modules
var Layout = __webpack_require__("apO0");

// EXTERNAL MODULE: ./components/Hero/Hero.module.scss
var Hero_module = __webpack_require__("Tu/p");
var Hero_module_default = /*#__PURE__*/__webpack_require__.n(Hero_module);

// CONCATENATED MODULE: ./components/svg/HeroSvg.tsx
var __jsx = external_react_default.a.createElement;

const HeroSvg = ({
  blue,
  orange,
  className
}) => {
  const {
    letters1,
    letters2,
    letters3,
    letters4,
    letters5,
    letters6,
    letters7,
    letters9,
    letters8,
    letters10,
    letters11,
    letters12
  } = className;
  return __jsx("svg", {
    width: "50%",
    height: "2192",
    viewBox: "0 0 3082 2192"
  }, __jsx("path", {
    className: "Vector",
    opacity: "0.1",
    d: "M1790.66 340.09C1593.08 333.222 1404.9 269.447 1225.21 199.658C1045.52 129.87 867.536 52.5402 674.686 15.5699C550.648 -8.21203 408.78 -11.5702 308.86 54.8909C212.664 119.001 181.585 229.363 164.886 331.878C152.308 408.994 144.92 490.139 179.357 562.34C203.291 612.468 245.726 654.598 275.095 702.62C377.275 869.673 305.044 1075.68 194.346 1238.8C142.448 1315.33 82.1532 1388.39 42.069 1469.78C1.98471 1551.17 -16.5462 1644.55 18.5313 1727.65C53.273 1810.08 136.098 1871.87 225.822 1915.37C408.048 2003.72 622.695 2029.03 832.153 2043.35C1295.67 2075.07 1761.63 2061.33 2226.37 2047.59C2398.37 2042.5 2571.1 2037.34 2740.29 2010.75C2834.26 1995.97 2931.25 1972.52 2999.48 1916.11C3086.06 1844.27 3107.52 1722.62 3049.49 1632.56C2952.16 1481.47 2683.14 1443.95 2615.03 1281.78C2577.6 1192.54 2616.04 1093.11 2670.47 1010.35C2787.21 832.794 2982.87 677.006 2993.16 474.051C3000.24 334.626 2906.19 195.018 2760.75 129.076C2608.32 59.9282 2396.9 68.6289 2284.5 183.081C2168.64 300.8 1965.14 346.135 1790.66 340.09Z",
    fill: blue
  }), __jsx("g", {
    className: "Group",
    opacity: "0.2"
  }, __jsx("path", {
    className: "Vector_2",
    opacity: "0.2",
    d: "M760.044 1914.98C761.859 1918.48 763.39 1922.13 764.623 1925.88C740.2 1935.1 715.777 1944.76 691.354 1954.88C690.835 1953.99 690.316 1953.05 689.828 1952.1C684.495 1942.33 681.87 1931.32 682.226 1920.2C682.867 1905.88 689.217 1893.55 700.543 1887.59C711.87 1881.64 725.607 1883.29 737.788 1890.65C747.235 1896.64 754.917 1905.04 760.044 1914.98Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_3",
    opacity: "0.2",
    d: "M719.518 1923.29C738.93 1913.04 743.783 1884.12 730.357 1858.7C716.932 1833.28 690.313 1820.98 670.901 1831.23C651.49 1841.49 646.637 1870.4 660.062 1895.82C673.487 1921.24 700.106 1933.54 719.518 1923.29Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_4",
    opacity: "0.2",
    d: "M689.826 1867.04C709.237 1856.79 714.09 1827.87 700.665 1802.45C687.24 1777.03 660.621 1764.74 641.209 1774.99C621.797 1785.24 616.945 1814.16 630.37 1839.58C643.795 1865 670.414 1877.29 689.826 1867.04Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_5",
    opacity: "0.2",
    d: "M660.119 1810.8C679.531 1800.55 684.384 1771.63 670.959 1746.21C657.533 1720.79 630.914 1708.49 611.503 1718.75C592.091 1729 587.238 1757.91 600.663 1783.33C614.088 1808.75 640.708 1821.05 660.119 1810.8Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_6",
    opacity: "0.2",
    d: "M630.396 1754.55C649.808 1744.3 654.661 1715.38 641.236 1689.96C627.811 1664.54 601.191 1652.25 581.78 1662.5C562.368 1672.75 557.515 1701.67 570.94 1727.09C584.365 1752.51 610.985 1764.8 630.396 1754.55Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_7",
    opacity: "0.2",
    d: "M271.218 1393.21C263.198 1389.67 255.426 1385.59 247.955 1381L332.306 1316.89L232.812 1370.41C212.215 1354.62 195.058 1334.79 182.391 1312.14C169.724 1289.49 161.815 1264.49 159.146 1238.67L329.863 1237.42L158.292 1211.93C159.279 1185.79 165.643 1160.13 176.986 1136.55C188.328 1112.98 204.407 1091.99 224.218 1074.91C244.029 1057.82 267.148 1045 292.133 1037.25C317.119 1029.49 343.434 1026.96 369.438 1029.83C395.442 1032.69 420.578 1040.88 443.277 1053.89C465.976 1066.9 485.751 1084.44 501.37 1105.43C516.988 1126.41 528.115 1150.39 534.057 1175.87C539.998 1201.35 540.626 1227.78 535.902 1253.51C548.415 1259.07 560.289 1265.97 571.315 1274.09L484.339 1399.68L589.51 1289.26C612.489 1311.06 629.674 1338.25 639.514 1368.36C649.353 1398.47 651.536 1430.55 645.866 1461.72C678.527 1476.23 706.443 1499.65 726.422 1529.29C746.401 1558.92 757.636 1593.59 758.843 1629.31C760.05 1665.03 751.18 1700.37 733.247 1731.29C715.314 1762.21 689.042 1787.45 657.435 1804.14C625.829 1820.83 590.163 1828.29 554.518 1825.66C518.872 1823.03 484.685 1810.43 455.867 1789.29C427.048 1768.15 404.761 1739.32 391.553 1706.11C378.346 1672.9 374.752 1636.64 381.182 1601.48C342.181 1584.12 310.143 1554.16 290.212 1516.4C270.282 1478.65 263.613 1435.3 271.279 1393.3L271.218 1393.21Z",
    fill: blue
  }), __jsx("path", {
    className: "Vector_8",
    opacity: "0.1",
    d: "M626.908 1338.5C646.911 1376.24 653.591 1419.62 645.866 1461.63C678.527 1476.14 706.443 1499.56 726.422 1529.2C746.401 1558.83 757.636 1593.49 758.843 1629.22C760.05 1664.94 751.18 1700.28 733.247 1731.2C715.314 1762.11 689.042 1787.36 657.435 1804.05C625.829 1820.74 590.163 1828.2 554.518 1825.57C518.872 1822.94 484.686 1810.34 455.867 1789.2C427.048 1768.05 404.761 1739.23 391.553 1706.02C378.346 1672.8 374.752 1636.54 381.182 1601.39C343.479 1584.66 616.925 1319.61 626.908 1338.5Z",
    fill: "black"
  })), __jsx("g", {
    className: "Group_2",
    opacity: "0.2"
  }, __jsx("path", {
    className: "Vector_9",
    opacity: "0.2",
    d: "M2111.19 1516.52C2109.33 1521.68 2107.93 1526.99 2106.97 1532.39C2142.43 1540.35 2177.89 1548.99 2213.37 1558.31C2213.91 1557 2214.46 1555.59 2214.98 1554.19C2220.4 1539.7 2221.87 1524.03 2219.23 1508.79C2215.59 1489.25 2204.51 1473.5 2187.75 1467.43C2170.99 1461.35 2152.46 1466.3 2137.14 1478.9C2125.3 1488.91 2116.34 1501.9 2111.19 1516.52Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_10",
    opacity: "0.2",
    d: "M2245.09 1471.13C2258.71 1433.62 2246.53 1394.78 2217.87 1384.37C2189.22 1373.97 2154.95 1395.94 2141.33 1433.45C2127.7 1470.96 2139.89 1509.81 2168.54 1520.21C2197.19 1530.62 2231.46 1508.65 2245.09 1471.13Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_11",
    opacity: "0.2",
    d: "M2271.93 1385.6C2285.5 1348.08 2273.27 1309.27 2244.61 1298.9C2215.96 1288.54 2181.73 1310.55 2168.16 1348.06C2154.59 1385.58 2166.82 1424.39 2195.47 1434.76C2224.13 1445.12 2258.36 1423.11 2271.93 1385.6Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_12",
    opacity: "0.2",
    d: "M2305.39 1305.09C2319.01 1267.58 2306.83 1228.73 2278.18 1218.33C2249.52 1207.92 2215.25 1229.89 2201.63 1267.41C2188 1304.92 2200.19 1343.76 2228.84 1354.17C2257.49 1364.57 2291.77 1342.6 2305.39 1305.09Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_13",
    opacity: "0.2",
    d: "M2335.53 1222.09C2349.15 1184.57 2336.97 1145.73 2308.32 1135.32C2279.66 1124.92 2245.39 1146.89 2231.77 1184.4C2218.14 1221.91 2230.33 1260.76 2258.98 1271.16C2287.63 1281.57 2321.91 1259.6 2335.53 1222.09Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_14",
    opacity: "0.2",
    d: "M2684.27 705.733C2694.65 699.307 2704.56 692.166 2713.94 684.363L2585.72 612.468L2732.78 667.114C2758.11 641.482 2777.95 610.95 2791.07 577.385C2804.2 543.821 2810.33 507.931 2809.1 471.914L2574.03 502.686L2805.16 434.852C2798.81 399.097 2785.16 365.035 2765.07 334.786C2744.98 304.538 2718.87 278.752 2688.37 259.036C2657.88 239.32 2623.65 226.096 2587.82 220.188C2551.99 214.281 2515.33 215.817 2480.11 224.7C2444.9 233.583 2411.9 249.623 2383.16 271.82C2354.42 294.018 2330.56 321.897 2313.07 353.72C2295.57 385.542 2284.82 420.627 2281.48 456.788C2278.14 492.948 2282.29 529.408 2293.66 563.897C2277.52 573.933 2262.5 585.672 2248.87 598.913L2392.35 755.129L2226.68 623.214C2199.22 657.581 2180.76 698.251 2172.98 741.545C2165.2 784.84 2168.33 829.391 2182.1 871.169C2139.97 897.365 2106.05 934.888 2084.24 979.449C2062.42 1024.01 2053.58 1073.81 2058.73 1123.16C2063.88 1172.5 2082.81 1219.41 2113.35 1258.5C2143.9 1297.6 2184.83 1327.31 2231.46 1344.25C2278.1 1361.18 2328.56 1364.65 2377.07 1354.27C2425.59 1343.88 2470.2 1320.05 2505.81 1285.5C2541.43 1250.96 2566.6 1207.09 2578.46 1158.91C2590.32 1110.74 2588.38 1060.19 2572.87 1013.07C2623.23 981.764 2661.61 934.447 2681.86 878.712C2702.1 822.977 2703.02 762.058 2684.48 705.733H2684.27Z",
    fill: blue
  }), __jsx("path", {
    className: "Vector_15",
    opacity: "0.1",
    d: "M2184.61 698.162C2164.28 753.89 2163.35 814.849 2181.98 871.169C2139.85 897.365 2105.93 934.888 2084.12 979.449C2062.3 1024.01 2053.46 1073.81 2058.61 1123.16C2063.76 1172.5 2082.69 1219.41 2113.23 1258.5C2143.78 1297.6 2184.71 1327.31 2231.34 1344.25C2277.98 1361.18 2328.44 1364.65 2376.95 1354.27C2425.47 1343.88 2470.08 1320.05 2505.69 1285.5C2541.3 1250.96 2566.48 1207.09 2578.34 1158.91C2590.19 1110.74 2588.26 1060.19 2572.75 1013.07C2621.32 982.965 2194.74 670.289 2184.61 698.162Z",
    fill: "black"
  })), __jsx("path", {
    className: "Vector_16",
    d: "M550.952 2000.89C664.424 2000.89 756.411 1983.2 756.411 1961.38C756.411 1939.56 664.424 1921.88 550.952 1921.88C437.481 1921.88 345.494 1939.56 345.494 1961.38C345.494 1983.2 437.481 2000.89 550.952 2000.89Z",
    fill: blue
  }), __jsx("path", {
    className: "Vector_17",
    d: "M547.503 1975.91C560.721 1975.91 571.437 1961.89 571.437 1944.59C571.437 1927.29 560.721 1913.27 547.503 1913.27C534.284 1913.27 523.568 1927.29 523.568 1944.59C523.568 1961.89 534.284 1975.91 547.503 1975.91Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_18",
    d: "M547.503 1937.63C560.721 1937.63 571.437 1923.61 571.437 1906.31C571.437 1889.01 560.721 1874.98 547.503 1874.98C534.284 1874.98 523.568 1889.01 523.568 1906.31C523.568 1923.61 534.284 1937.63 547.503 1937.63Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_19",
    d: "M547.503 1899.35C560.721 1899.35 571.437 1885.32 571.437 1868.02C571.437 1850.73 560.721 1836.7 547.503 1836.7C534.284 1836.7 523.568 1850.73 523.568 1868.02C523.568 1885.32 534.284 1899.35 547.503 1899.35Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_20",
    d: "M547.503 1861.09C560.721 1861.09 571.437 1847.07 571.437 1829.77C571.437 1812.47 560.721 1798.45 547.503 1798.45C534.284 1798.45 523.568 1812.47 523.568 1829.77C523.568 1847.07 534.284 1861.09 547.503 1861.09Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_21",
    d: "M547.503 1822.81C560.721 1822.81 571.437 1808.79 571.437 1791.49C571.437 1774.19 560.721 1760.17 547.503 1760.17C534.284 1760.17 523.568 1774.19 523.568 1791.49C523.568 1808.79 534.284 1822.81 547.503 1822.81Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_22",
    d: "M547.503 1784.53C560.721 1784.53 571.437 1770.5 571.437 1753.21C571.437 1735.91 560.721 1721.88 547.503 1721.88C534.284 1721.88 523.568 1735.91 523.568 1753.21C523.568 1770.5 534.284 1784.53 547.503 1784.53Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_23",
    d: "M547.503 1746.28C560.721 1746.28 571.437 1732.25 571.437 1714.95C571.437 1697.65 560.721 1683.63 547.503 1683.63C534.284 1683.63 523.568 1697.65 523.568 1714.95C523.568 1732.25 534.284 1746.28 547.503 1746.28Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_24",
    d: "M637.074 1453.11C640.34 1448.95 643.309 1444.56 645.958 1439.98L583.13 1429.66L651.087 1430.18C657.615 1415.99 661.177 1400.62 661.555 1385.01C661.933 1369.4 659.119 1353.87 653.285 1339.39L562.095 1386.68L646.202 1324.89C638.331 1311.25 627.735 1299.39 615.075 1290.03C602.415 1280.67 587.963 1274.02 572.62 1270.5C557.278 1266.97 541.373 1266.64 525.898 1269.54C510.423 1272.43 495.71 1278.48 482.676 1287.31C469.643 1296.14 458.568 1307.56 450.142 1320.86C441.717 1334.15 436.121 1349.04 433.705 1364.6C431.289 1380.16 432.104 1396.04 436.098 1411.27C440.093 1426.5 447.182 1440.74 456.924 1453.11C451.819 1459.58 447.427 1466.58 443.827 1473.99L525.43 1516.39L438.423 1487.18C432.315 1505.24 430.807 1524.54 434.038 1543.33C437.268 1562.12 445.134 1579.81 456.924 1594.79C443.632 1611.69 435.365 1631.99 433.066 1653.37C430.767 1674.75 434.53 1696.34 443.925 1715.68C453.319 1735.02 467.966 1751.33 486.191 1762.74C504.416 1774.14 525.483 1780.19 546.984 1780.19C568.485 1780.19 589.552 1774.14 607.777 1762.74C626.001 1751.33 640.648 1735.02 650.043 1715.68C659.437 1696.34 663.2 1674.75 660.902 1653.37C658.603 1631.99 650.335 1611.69 637.044 1594.79C652.927 1574.59 661.561 1549.64 661.561 1523.95C661.561 1498.25 652.927 1473.31 637.044 1453.11H637.074Z",
    fill: blue
  }), __jsx("path", {
    className: "Vector_25",
    opacity: "0.1",
    d: "M432.409 1523.84C432.331 1549.54 440.938 1574.51 456.832 1594.7C443.541 1611.6 435.273 1631.9 432.974 1653.28C430.676 1674.66 434.439 1696.25 443.833 1715.59C453.228 1734.93 467.875 1751.24 486.099 1762.64C504.324 1774.05 525.391 1780.1 546.892 1780.1C568.393 1780.1 589.46 1774.05 607.685 1762.64C625.91 1751.24 640.557 1734.93 649.951 1715.59C659.346 1696.25 663.109 1674.66 660.81 1653.28C658.511 1631.9 650.243 1611.6 636.952 1594.7C652.43 1575.22 432.409 1511.11 432.409 1523.84Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_26",
    d: "M2273.17 544.541H842.075C829.564 544.541 819.422 554.683 819.422 567.194V840.457C819.422 852.967 829.564 863.109 842.075 863.109H2273.17C2285.68 863.109 2295.82 852.967 2295.82 840.457V567.194C2295.82 554.683 2285.68 544.541 2273.17 544.541Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_27",
    d: "M944.377 159.207C944.377 159.207 965.35 729.576 928.166 796.343H2185.16C2185.16 796.343 2131.76 357.614 2185.16 159.207H944.377Z",
    fill: "white"
  }), __jsx("path", {
    className: "Vector_28",
    opacity: "0.03",
    d: "M944.211 159C944.211 159 965.184 729.369 928 796.135H2184.99C2184.99 796.135 2131.6 357.406 2184.99 159H944.211Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_29",
    d: "M1994.44 772.042H1073.12V886.494H1994.44V772.042Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_30",
    d: "M2404.66 2119.28H697.002C684.196 2119.28 671.534 2116.58 659.843 2111.35C648.152 2106.13 637.694 2098.49 629.155 2088.95C620.615 2079.41 614.184 2068.17 610.283 2055.97C606.382 2043.77 605.098 2030.89 606.515 2018.16L641.44 1703.44C643.74 1682.52 645.398 1661.55 646.416 1640.52L652.98 1427.13C654.486 1378.91 657.742 1330.82 662.749 1282.85C665.354 1257.98 668.407 1233.16 671.907 1208.39L716.815 895.53C722.532 856.367 742.148 820.567 772.08 794.671C802.011 768.775 840.26 754.512 879.839 754.488H948.04C982.649 754.609 1016.29 765.929 1043.93 786.757C1114.57 839.48 1315.27 877.519 1551.87 877.519C1788.47 877.519 1989.19 839.48 2059.99 786.634C2087.63 765.807 2121.27 754.487 2155.88 754.366H2266.36C2289.59 754.365 2312.07 762.549 2329.85 777.478C2347.64 792.408 2359.6 813.128 2363.63 835.999L2423.92 1177.92C2430.03 1212.68 2435.21 1247.59 2439.46 1282.64C2446.54 1340.9 2450.99 1399.43 2452.8 1458.21L2458.91 1656.49C2460.19 1697.84 2463.76 1739.09 2469.62 1780.04L2502.01 2006.9C2504.03 2020.86 2503.02 2035.09 2499.05 2048.62C2495.08 2062.15 2488.24 2074.67 2479.01 2085.33C2469.78 2095.99 2458.36 2104.54 2445.53 2110.39C2432.7 2116.25 2418.76 2119.28 2404.66 2119.28Z",
    fill: "#464353"
  }), __jsx("path", {
    className: "Vector_31",
    opacity: "0.1",
    d: "M2307.39 1327.63H798.358C764.704 1327.63 737.422 1354.92 737.422 1388.57V1967.73C737.422 2001.38 764.704 2028.67 798.358 2028.67H2307.39C2341.05 2028.67 2368.33 2001.38 2368.33 1967.73V1388.57C2368.33 1354.92 2341.05 1327.63 2307.39 1327.63Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_32",
    d: "M842.319 1448.74C868.132 1448.74 889.058 1431.23 889.058 1409.63C889.058 1388.04 868.132 1370.53 842.319 1370.53C816.505 1370.53 795.579 1388.04 795.579 1409.63C795.579 1431.23 816.505 1448.74 842.319 1448.74Z"
  }), __jsx("path", {
    className: "Vector_33",
    opacity: "0.1",
    d: "M842.319 1448.74C868.132 1448.74 889.058 1431.23 889.058 1409.63C889.058 1388.04 868.132 1370.53 842.319 1370.53C816.505 1370.53 795.579 1388.04 795.579 1409.63C795.579 1431.23 816.505 1448.74 842.319 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_34",
    d: "M897.637 1585.14C923.451 1585.14 944.376 1567.64 944.376 1546.04C944.376 1524.44 923.451 1506.93 897.637 1506.93C871.823 1506.93 850.897 1524.44 850.897 1546.04C850.897 1567.64 871.823 1585.14 897.637 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_35",
    opacity: "0.1",
    d: "M897.637 1585.14C923.451 1585.14 944.376 1567.64 944.376 1546.04C944.376 1524.44 923.451 1506.93 897.637 1506.93C871.823 1506.93 850.897 1524.44 850.897 1546.04C850.897 1567.64 871.823 1585.14 897.637 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_36",
    d: "M897.637 1576.57C923.451 1576.57 944.376 1559.06 944.376 1537.46C944.376 1515.86 923.451 1498.35 897.637 1498.35C871.823 1498.35 850.897 1515.86 850.897 1537.46C850.897 1559.06 871.823 1576.57 897.637 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_37",
    d: "M928.166 1721.55C953.979 1721.55 974.905 1704.04 974.905 1682.44C974.905 1660.84 953.979 1643.33 928.166 1643.33C902.352 1643.33 881.426 1660.84 881.426 1682.44C881.426 1704.04 902.352 1721.55 928.166 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_38",
    opacity: "0.1",
    d: "M928.166 1721.55C953.979 1721.55 974.905 1704.04 974.905 1682.44C974.905 1660.84 953.979 1643.33 928.166 1643.33C902.352 1643.33 881.426 1660.84 881.426 1682.44C881.426 1704.04 902.352 1721.55 928.166 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: letters4,
    d: "M928.166 1712.97C953.979 1712.97 974.905 1695.46 974.905 1673.86C974.905 1652.26 953.979 1634.75 928.166 1634.75C902.352 1634.75 881.426 1652.26 881.426 1673.86C881.426 1695.46 902.352 1712.97 928.166 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_39",
    d: "M809.897 1737.76C835.711 1737.76 856.637 1720.25 856.637 1698.65C856.637 1677.05 835.711 1659.54 809.897 1659.54C784.084 1659.54 763.158 1677.05 763.158 1698.65C763.158 1720.25 784.084 1737.76 809.897 1737.76Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_40",
    opacity: "0.1",
    d: "M809.897 1737.76C835.711 1737.76 856.637 1720.25 856.637 1698.65C856.637 1677.05 835.711 1659.54 809.897 1659.54C784.084 1659.54 763.158 1677.05 763.158 1698.65C763.158 1720.25 784.084 1737.76 809.897 1737.76Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_41",
    d: "M985.377 1857.92C1011.19 1857.92 1032.12 1840.41 1032.12 1818.81C1032.12 1797.21 1011.19 1779.7 985.377 1779.7C959.563 1779.7 938.637 1797.21 938.637 1818.81C938.637 1840.41 959.563 1857.92 985.377 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_42",
    opacity: "0.1",
    d: "M985.377 1857.92C1011.19 1857.92 1032.12 1840.41 1032.12 1818.81C1032.12 1797.21 1011.19 1779.7 985.377 1779.7C959.563 1779.7 938.637 1797.21 938.637 1818.81C938.637 1840.41 959.563 1857.92 985.377 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: letters7,
    d: "M985.377 1849.34C1011.19 1849.34 1032.12 1831.83 1032.12 1810.23C1032.12 1788.63 1011.19 1771.13 985.377 1771.13C959.563 1771.13 938.637 1788.63 938.637 1810.23C938.637 1831.83 959.563 1849.34 985.377 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_43",
    d: "M828.978 1862.71C854.791 1862.71 875.717 1845.2 875.717 1823.6C875.717 1802.01 854.791 1784.5 828.978 1784.5C803.164 1784.5 782.238 1802.01 782.238 1823.6C782.238 1845.2 803.164 1862.71 828.978 1862.71Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_44",
    opacity: "0.1",
    d: "M828.978 1862.71C854.791 1862.71 875.717 1845.2 875.717 1823.6C875.717 1802.01 854.791 1784.5 828.978 1784.5C803.164 1784.5 782.238 1802.01 782.238 1823.6C782.238 1845.2 803.164 1862.71 828.978 1862.71Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_45",
    d: "M828.978 1854.1C854.791 1854.1 875.717 1836.59 875.717 1815C875.717 1793.4 854.791 1775.89 828.978 1775.89C803.164 1775.89 782.238 1793.4 782.238 1815C782.238 1836.59 803.164 1854.1 828.978 1854.1Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_46",
    d: "M1114.15 1857.92C1139.96 1857.92 1160.89 1840.41 1160.89 1818.81C1160.89 1797.21 1139.96 1779.7 1114.15 1779.7C1088.33 1779.7 1067.41 1797.21 1067.41 1818.81C1067.41 1840.41 1088.33 1857.92 1114.15 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_47",
    opacity: "0.1",
    d: "M1114.15 1857.92C1139.96 1857.92 1160.89 1840.41 1160.89 1818.81C1160.89 1797.21 1139.96 1779.7 1114.15 1779.7C1088.33 1779.7 1067.41 1797.21 1067.41 1818.81C1067.41 1840.41 1088.33 1857.92 1114.15 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_48",
    d: "M1250.52 1857.92C1276.33 1857.92 1297.26 1840.41 1297.26 1818.81C1297.26 1797.21 1276.33 1779.7 1250.52 1779.7C1224.71 1779.7 1203.78 1797.21 1203.78 1818.81C1203.78 1840.41 1224.71 1857.92 1250.52 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_49",
    opacity: "0.1",
    d: "M1250.52 1857.92C1276.33 1857.92 1297.26 1840.41 1297.26 1818.81C1297.26 1797.21 1276.33 1779.7 1250.52 1779.7C1224.71 1779.7 1203.78 1797.21 1203.78 1818.81C1203.78 1840.41 1224.71 1857.92 1250.52 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_50",
    d: "M1250.52 1849.34C1276.33 1849.34 1297.26 1831.83 1297.26 1810.23C1297.26 1788.63 1276.33 1771.13 1250.52 1771.13C1224.71 1771.13 1203.78 1788.63 1203.78 1810.23C1203.78 1831.83 1224.71 1849.34 1250.52 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_51",
    d: "M1376.42 1857.92C1402.23 1857.92 1423.16 1840.41 1423.16 1818.81C1423.16 1797.21 1402.23 1779.7 1376.42 1779.7C1350.61 1779.7 1329.68 1797.21 1329.68 1818.81C1329.68 1840.41 1350.61 1857.92 1376.42 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_52",
    opacity: "0.1",
    d: "M1376.42 1857.92C1402.23 1857.92 1423.16 1840.41 1423.16 1818.81C1423.16 1797.21 1402.23 1779.7 1376.42 1779.7C1350.61 1779.7 1329.68 1797.21 1329.68 1818.81C1329.68 1840.41 1350.61 1857.92 1376.42 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_53",
    d: "M1376.42 1849.34C1402.23 1849.34 1423.16 1831.83 1423.16 1810.23C1423.16 1788.63 1402.23 1771.13 1376.42 1771.13C1350.61 1771.13 1329.68 1788.63 1329.68 1810.23C1329.68 1831.83 1350.61 1849.34 1376.42 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_54",
    d: "M1515.66 1857.92C1541.47 1857.92 1562.4 1840.41 1562.4 1818.81C1562.4 1797.21 1541.47 1779.7 1515.66 1779.7C1489.85 1779.7 1468.92 1797.21 1468.92 1818.81C1468.92 1840.41 1489.85 1857.92 1515.66 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_55",
    opacity: "0.1",
    d: "M1515.66 1857.92C1541.47 1857.92 1562.4 1840.41 1562.4 1818.81C1562.4 1797.21 1541.47 1779.7 1515.66 1779.7C1489.85 1779.7 1468.92 1797.21 1468.92 1818.81C1468.92 1840.41 1489.85 1857.92 1515.66 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_56",
    d: "M1515.66 1849.34C1541.47 1849.34 1562.4 1831.83 1562.4 1810.23C1562.4 1788.63 1541.47 1771.13 1515.66 1771.13C1489.85 1771.13 1468.92 1788.63 1468.92 1810.23C1468.92 1831.83 1489.85 1849.34 1515.66 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_57",
    d: "M1641.56 1857.92C1667.38 1857.92 1688.3 1840.41 1688.3 1818.81C1688.3 1797.21 1667.38 1779.7 1641.56 1779.7C1615.75 1779.7 1594.82 1797.21 1594.82 1818.81C1594.82 1840.41 1615.75 1857.92 1641.56 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_58",
    opacity: "0.1",
    d: "M1641.56 1857.92C1667.38 1857.92 1688.3 1840.41 1688.3 1818.81C1688.3 1797.21 1667.38 1779.7 1641.56 1779.7C1615.75 1779.7 1594.82 1797.21 1594.82 1818.81C1594.82 1840.41 1615.75 1857.92 1641.56 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_59",
    d: "M1641.56 1849.34C1667.38 1849.34 1688.3 1831.83 1688.3 1810.23C1688.3 1788.63 1667.38 1771.13 1641.56 1771.13C1615.75 1771.13 1594.82 1788.63 1594.82 1810.23C1594.82 1831.83 1615.75 1849.34 1641.56 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_60",
    d: "M1766.49 1857.92C1792.3 1857.92 1813.23 1840.41 1813.23 1818.81C1813.23 1797.21 1792.3 1779.7 1766.49 1779.7C1740.67 1779.7 1719.75 1797.21 1719.75 1818.81C1719.75 1840.41 1740.67 1857.92 1766.49 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_61",
    opacity: "0.1",
    d: "M1766.49 1857.92C1792.3 1857.92 1813.23 1840.41 1813.23 1818.81C1813.23 1797.21 1792.3 1779.7 1766.49 1779.7C1740.67 1779.7 1719.75 1797.21 1719.75 1818.81C1719.75 1840.41 1740.67 1857.92 1766.49 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: letters9,
    d: "M1766.49 1849.34C1792.3 1849.34 1813.23 1831.83 1813.23 1810.23C1813.23 1788.63 1792.3 1771.13 1766.49 1771.13C1740.67 1771.13 1719.75 1788.63 1719.75 1810.23C1719.75 1831.83 1740.67 1849.34 1766.49 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_63",
    d: "M1901.94 1857.92C1927.76 1857.92 1948.68 1840.41 1948.68 1818.81C1948.68 1797.21 1927.76 1779.7 1901.94 1779.7C1876.13 1779.7 1855.2 1797.21 1855.2 1818.81C1855.2 1840.41 1876.13 1857.92 1901.94 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_64",
    opacity: "0.1",
    d: "M1901.94 1857.92C1927.76 1857.92 1948.68 1840.41 1948.68 1818.81C1948.68 1797.21 1927.76 1779.7 1901.94 1779.7C1876.13 1779.7 1855.2 1797.21 1855.2 1818.81C1855.2 1840.41 1876.13 1857.92 1901.94 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_65",
    d: "M1901.94 1849.34C1927.76 1849.34 1948.68 1831.83 1948.68 1810.23C1948.68 1788.63 1927.76 1771.13 1901.94 1771.13C1876.13 1771.13 1855.2 1788.63 1855.2 1810.23C1855.2 1831.83 1876.13 1849.34 1901.94 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vectopr-66",
    d: "M2028.79 1857.92C2054.6 1857.92 2075.53 1840.41 2075.53 1818.81C2075.53 1797.21 2054.6 1779.7 2028.79 1779.7C2002.97 1779.7 1982.05 1797.21 1982.05 1818.81C1982.05 1840.41 2002.97 1857.92 2028.79 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_67",
    opacity: "0.1",
    d: "M2028.79 1857.92C2054.6 1857.92 2075.53 1840.41 2075.53 1818.81C2075.53 1797.21 2054.6 1779.7 2028.79 1779.7C2002.97 1779.7 1982.05 1797.21 1982.05 1818.81C1982.05 1840.41 2002.97 1857.92 2028.79 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: letters10,
    d: "M2028.79 1849.34C2054.6 1849.34 2075.53 1831.83 2075.53 1810.23C2075.53 1788.63 2054.6 1771.13 2028.79 1771.13C2002.97 1771.13 1982.05 1788.63 1982.05 1810.23C1982.05 1831.83 2002.97 1849.34 2028.79 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_69",
    d: "M2168.98 1857.92C2194.79 1857.92 2215.72 1840.41 2215.72 1818.81C2215.72 1797.21 2194.79 1779.7 2168.98 1779.7C2143.16 1779.7 2122.24 1797.21 2122.24 1818.81C2122.24 1840.41 2143.16 1857.92 2168.98 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_70",
    opacity: "0.1",
    d: "M2168.98 1857.92C2194.79 1857.92 2215.72 1840.41 2215.72 1818.81C2215.72 1797.21 2194.79 1779.7 2168.98 1779.7C2143.16 1779.7 2122.24 1797.21 2122.24 1818.81C2122.24 1840.41 2143.16 1857.92 2168.98 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: letters11,
    d: "M2168.98 1849.34C2194.79 1849.34 2215.72 1831.83 2215.72 1810.23C2215.72 1788.63 2194.79 1771.13 2168.98 1771.13C2143.16 1771.13 2122.24 1788.63 2122.24 1810.23C2122.24 1831.83 2143.16 1849.34 2168.98 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_72",
    d: "M2313.01 1857.92C2338.82 1857.92 2359.75 1840.41 2359.75 1818.81C2359.75 1797.21 2338.82 1779.7 2313.01 1779.7C2287.2 1779.7 2266.27 1797.21 2266.27 1818.81C2266.27 1840.41 2287.2 1857.92 2313.01 1857.92Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_73",
    opacity: "0.1",
    d: "M2313.01 1857.92C2338.82 1857.92 2359.75 1840.41 2359.75 1818.81C2359.75 1797.21 2338.82 1779.7 2313.01 1779.7C2287.2 1779.7 2266.27 1797.21 2266.27 1818.81C2266.27 1840.41 2287.2 1857.92 2313.01 1857.92Z",
    fill: "black"
  }), __jsx("path", {
    className: letters12,
    d: "M2313.01 1849.34C2338.82 1849.34 2359.75 1831.83 2359.75 1810.23C2359.75 1788.63 2338.82 1771.13 2313.01 1771.13C2287.2 1771.13 2266.27 1788.63 2266.27 1810.23C2266.27 1831.83 2287.2 1849.34 2313.01 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_75",
    d: "M1057.88 1721.55C1083.7 1721.55 1104.62 1704.04 1104.62 1682.44C1104.62 1660.84 1083.7 1643.33 1057.88 1643.33C1032.07 1643.33 1011.14 1660.84 1011.14 1682.44C1011.14 1704.04 1032.07 1721.55 1057.88 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_76",
    opacity: "0.1",
    d: "M1057.88 1721.55C1083.7 1721.55 1104.62 1704.04 1104.62 1682.44C1104.62 1660.84 1083.7 1643.33 1057.88 1643.33C1032.07 1643.33 1011.14 1660.84 1011.14 1682.44C1011.14 1704.04 1032.07 1721.55 1057.88 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_77",
    d: "M1187.57 1721.55C1213.38 1721.55 1234.31 1704.04 1234.31 1682.44C1234.31 1660.84 1213.38 1643.33 1187.57 1643.33C1161.76 1643.33 1140.83 1660.84 1140.83 1682.44C1140.83 1704.04 1161.76 1721.55 1187.57 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_78",
    opacity: "0.1",
    d: "M1187.57 1721.55C1213.38 1721.55 1234.31 1704.04 1234.31 1682.44C1234.31 1660.84 1213.38 1643.33 1187.57 1643.33C1161.76 1643.33 1140.83 1660.84 1140.83 1682.44C1140.83 1704.04 1161.76 1721.55 1187.57 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_79",
    d: "M1187.57 1712.97C1213.38 1712.97 1234.31 1695.46 1234.31 1673.86C1234.31 1652.26 1213.38 1634.75 1187.57 1634.75C1161.76 1634.75 1140.83 1652.26 1140.83 1673.86C1140.83 1695.46 1161.76 1712.97 1187.57 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_80",
    d: "M1321.1 1721.55C1346.91 1721.55 1367.84 1704.04 1367.84 1682.44C1367.84 1660.84 1346.91 1643.33 1321.1 1643.33C1295.29 1643.33 1274.36 1660.84 1274.36 1682.44C1274.36 1704.04 1295.29 1721.55 1321.1 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_81",
    opacity: "0.1",
    d: "M1321.1 1721.55C1346.91 1721.55 1367.84 1704.04 1367.84 1682.44C1367.84 1660.84 1346.91 1643.33 1321.1 1643.33C1295.29 1643.33 1274.36 1660.84 1274.36 1682.44C1274.36 1704.04 1295.29 1721.55 1321.1 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_82",
    d: "M1321.1 1712.97C1346.91 1712.97 1367.84 1695.46 1367.84 1673.86C1367.84 1652.26 1346.91 1634.75 1321.1 1634.75C1295.29 1634.75 1274.36 1652.26 1274.36 1673.86C1274.36 1695.46 1295.29 1712.97 1321.1 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_83",
    d: "M1448.89 1721.55C1474.71 1721.55 1495.63 1704.04 1495.63 1682.44C1495.63 1660.84 1474.71 1643.33 1448.89 1643.33C1423.08 1643.33 1402.16 1660.84 1402.16 1682.44C1402.16 1704.04 1423.08 1721.55 1448.89 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_84",
    opacity: "0.1",
    d: "M1448.89 1721.55C1474.71 1721.55 1495.63 1704.04 1495.63 1682.44C1495.63 1660.84 1474.71 1643.33 1448.89 1643.33C1423.08 1643.33 1402.16 1660.84 1402.16 1682.44C1402.16 1704.04 1423.08 1721.55 1448.89 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_85",
    d: "M1448.89 1712.97C1474.71 1712.97 1495.63 1695.46 1495.63 1673.86C1495.63 1652.26 1474.71 1634.75 1448.89 1634.75C1423.08 1634.75 1402.16 1652.26 1402.16 1673.86C1402.16 1695.46 1423.08 1712.97 1448.89 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_86",
    d: "M1579.56 1721.55C1605.37 1721.55 1626.3 1704.04 1626.3 1682.44C1626.3 1660.84 1605.37 1643.33 1579.56 1643.33C1553.74 1643.33 1532.82 1660.84 1532.82 1682.44C1532.82 1704.04 1553.74 1721.55 1579.56 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_87",
    opacity: "0.1",
    d: "M1579.56 1721.55C1605.37 1721.55 1626.3 1704.04 1626.3 1682.44C1626.3 1660.84 1605.37 1643.33 1579.56 1643.33C1553.74 1643.33 1532.82 1660.84 1532.82 1682.44C1532.82 1704.04 1553.74 1721.55 1579.56 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: letters5,
    d: "M1579.56 1712.97C1605.37 1712.97 1626.3 1695.46 1626.3 1673.86C1626.3 1652.26 1605.37 1634.75 1579.56 1634.75C1553.74 1634.75 1532.82 1652.26 1532.82 1673.86C1532.82 1695.46 1553.74 1712.97 1579.56 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_88",
    d: "M1704.51 1721.55C1730.33 1721.55 1751.25 1704.04 1751.25 1682.44C1751.25 1660.84 1730.33 1643.33 1704.51 1643.33C1678.7 1643.33 1657.77 1660.84 1657.77 1682.44C1657.77 1704.04 1678.7 1721.55 1704.51 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_89",
    opacity: "0.1",
    d: "M1704.51 1721.55C1730.33 1721.55 1751.25 1704.04 1751.25 1682.44C1751.25 1660.84 1730.33 1643.33 1704.51 1643.33C1678.7 1643.33 1657.77 1660.84 1657.77 1682.44C1657.77 1704.04 1678.7 1721.55 1704.51 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_90",
    d: "M1839.94 1721.55C1865.75 1721.55 1886.68 1704.04 1886.68 1682.44C1886.68 1660.84 1865.75 1643.33 1839.94 1643.33C1814.12 1643.33 1793.2 1660.84 1793.2 1682.44C1793.2 1704.04 1814.12 1721.55 1839.94 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_91",
    opacity: "0.1",
    d: "M1839.94 1721.55C1865.75 1721.55 1886.68 1704.04 1886.68 1682.44C1886.68 1660.84 1865.75 1643.33 1839.94 1643.33C1814.12 1643.33 1793.2 1660.84 1793.2 1682.44C1793.2 1704.04 1814.12 1721.55 1839.94 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_92",
    d: "M1839.94 1712.97C1865.75 1712.97 1886.68 1695.46 1886.68 1673.86C1886.68 1652.26 1865.75 1634.75 1839.94 1634.75C1814.12 1634.75 1793.2 1652.26 1793.2 1673.86C1793.2 1695.46 1814.12 1712.97 1839.94 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_93",
    d: "M1968.71 1721.55C1994.52 1721.55 2015.45 1704.04 2015.45 1682.44C2015.45 1660.84 1994.52 1643.33 1968.71 1643.33C1942.89 1643.33 1921.97 1660.84 1921.97 1682.44C1921.97 1704.04 1942.89 1721.55 1968.71 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_94",
    opacity: "0.1",
    d: "M1968.71 1721.55C1994.52 1721.55 2015.45 1704.04 2015.45 1682.44C2015.45 1660.84 1994.52 1643.33 1968.71 1643.33C1942.89 1643.33 1921.97 1660.84 1921.97 1682.44C1921.97 1704.04 1942.89 1721.55 1968.71 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: letters9,
    d: "M1968.71 1712.97C1994.52 1712.97 2015.45 1695.46 2015.45 1673.86C2015.45 1652.26 1994.52 1634.75 1968.71 1634.75C1942.89 1634.75 1921.97 1652.26 1921.97 1673.86C1921.97 1695.46 1942.89 1712.97 1968.71 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_96",
    d: "M2100.32 1721.55C2126.13 1721.55 2147.06 1704.04 2147.06 1682.44C2147.06 1660.84 2126.13 1643.33 2100.32 1643.33C2074.5 1643.33 2053.58 1660.84 2053.58 1682.44C2053.58 1704.04 2074.5 1721.55 2100.32 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_97",
    opacity: "0.1",
    d: "M2100.32 1721.55C2126.13 1721.55 2147.06 1704.04 2147.06 1682.44C2147.06 1660.84 2126.13 1643.33 2100.32 1643.33C2074.5 1643.33 2053.58 1660.84 2053.58 1682.44C2053.58 1704.04 2074.5 1721.55 2100.32 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_98",
    d: "M2231.93 1721.55C2257.74 1721.55 2278.67 1704.04 2278.67 1682.44C2278.67 1660.84 2257.74 1643.33 2231.93 1643.33C2206.11 1643.33 2185.19 1660.84 2185.19 1682.44C2185.19 1704.04 2206.11 1721.55 2231.93 1721.55Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_99",
    opacity: "0.1",
    d: "M2231.93 1721.55C2257.74 1721.55 2278.67 1704.04 2278.67 1682.44C2278.67 1660.84 2257.74 1643.33 2231.93 1643.33C2206.11 1643.33 2185.19 1660.84 2185.19 1682.44C2185.19 1704.04 2206.11 1721.55 2231.93 1721.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_100",
    d: "M2231.93 1712.97C2257.74 1712.97 2278.67 1695.46 2278.67 1673.86C2278.67 1652.26 2257.74 1634.75 2231.93 1634.75C2206.11 1634.75 2185.19 1652.26 2185.19 1673.86C2185.19 1695.46 2206.11 1712.97 2231.93 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_101",
    d: "M1029.25 1585.14C1055.06 1585.14 1075.99 1567.64 1075.99 1546.04C1075.99 1524.44 1055.06 1506.93 1029.25 1506.93C1003.43 1506.93 982.507 1524.44 982.507 1546.04C982.507 1567.64 1003.43 1585.14 1029.25 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_102",
    opacity: "0.1",
    d: "M1029.25 1585.14C1055.06 1585.14 1075.99 1567.64 1075.99 1546.04C1075.99 1524.44 1055.06 1506.93 1029.25 1506.93C1003.43 1506.93 982.507 1524.44 982.507 1546.04C982.507 1567.64 1003.43 1585.14 1029.25 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_103",
    d: "M1160.89 1585.14C1186.7 1585.14 1207.63 1567.64 1207.63 1546.04C1207.63 1524.44 1186.7 1506.93 1160.89 1506.93C1135.07 1506.93 1114.15 1524.44 1114.15 1546.04C1114.15 1567.64 1135.07 1585.14 1160.89 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_104",
    opacity: "0.1",
    d: "M1160.89 1585.14C1186.7 1585.14 1207.63 1567.64 1207.63 1546.04C1207.63 1524.44 1186.7 1506.93 1160.89 1506.93C1135.07 1506.93 1114.15 1524.44 1114.15 1546.04C1114.15 1567.64 1135.07 1585.14 1160.89 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_105",
    d: "M1160.89 1576.57C1186.7 1576.57 1207.63 1559.06 1207.63 1537.46C1207.63 1515.86 1186.7 1498.35 1160.89 1498.35C1135.07 1498.35 1114.15 1515.86 1114.15 1537.46C1114.15 1559.06 1135.07 1576.57 1160.89 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_106",
    d: "M1287.73 1585.14C1313.55 1585.14 1334.47 1567.64 1334.47 1546.04C1334.47 1524.44 1313.55 1506.93 1287.73 1506.93C1261.92 1506.93 1240.99 1524.44 1240.99 1546.04C1240.99 1567.64 1261.92 1585.14 1287.73 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_107",
    opacity: "0.1",
    d: "M1287.73 1585.14C1313.55 1585.14 1334.47 1567.64 1334.47 1546.04C1334.47 1524.44 1313.55 1506.93 1287.73 1506.93C1261.92 1506.93 1240.99 1524.44 1240.99 1546.04C1240.99 1567.64 1261.92 1585.14 1287.73 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_108",
    d: "M809.897 1729.18C835.711 1729.18 856.637 1711.67 856.637 1690.07C856.637 1668.47 835.711 1650.96 809.897 1650.96C784.084 1650.96 763.158 1668.47 763.158 1690.07C763.158 1711.67 784.084 1729.18 809.897 1729.18Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_109",
    d: "M1114.15 1849.34C1139.96 1849.34 1160.89 1831.83 1160.89 1810.23C1160.89 1788.63 1139.96 1771.13 1114.15 1771.13C1088.33 1771.13 1067.41 1788.63 1067.41 1810.23C1067.41 1831.83 1088.33 1849.34 1114.15 1849.34Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: letters6,
    d: "M2100.32 1712.97C2126.13 1712.97 2147.06 1695.46 2147.06 1673.86C2147.06 1652.26 2126.13 1634.75 2100.32 1634.75C2074.5 1634.75 2053.58 1652.26 2053.58 1673.86C2053.58 1695.46 2074.5 1712.97 2100.32 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_110",
    d: "M1704.51 1712.97C1730.33 1712.97 1751.25 1695.46 1751.25 1673.86C1751.25 1652.26 1730.33 1634.75 1704.51 1634.75C1678.7 1634.75 1657.77 1652.26 1657.77 1673.86C1657.77 1695.46 1678.7 1712.97 1704.51 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_111",
    d: "M1029.25 1576.57C1055.06 1576.57 1075.99 1559.06 1075.99 1537.46C1075.99 1515.86 1055.06 1498.35 1029.25 1498.35C1003.43 1498.35 982.507 1515.86 982.507 1537.46C982.507 1559.06 1003.43 1576.57 1029.25 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_112",
    d: "M1287.73 1576.57C1313.55 1576.57 1334.47 1559.06 1334.47 1537.46C1334.47 1515.86 1313.55 1498.35 1287.73 1498.35C1261.92 1498.35 1240.99 1515.86 1240.99 1537.46C1240.99 1559.06 1261.92 1576.57 1287.73 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_113",
    d: "M1414.58 1585.14C1440.39 1585.14 1461.32 1567.64 1461.32 1546.04C1461.32 1524.44 1440.39 1506.93 1414.58 1506.93C1388.77 1506.93 1367.84 1524.44 1367.84 1546.04C1367.84 1567.64 1388.77 1585.14 1414.58 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_114",
    opacity: "0.1",
    d: "M1414.58 1585.14C1440.39 1585.14 1461.32 1567.64 1461.32 1546.04C1461.32 1524.44 1440.39 1506.93 1414.58 1506.93C1388.77 1506.93 1367.84 1524.44 1367.84 1546.04C1367.84 1567.64 1388.77 1585.14 1414.58 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_115",
    d: "M1414.58 1576.57C1440.39 1576.57 1461.32 1559.06 1461.32 1537.46C1461.32 1515.86 1440.39 1498.35 1414.58 1498.35C1388.77 1498.35 1367.84 1515.86 1367.84 1537.46C1367.84 1559.06 1388.77 1576.57 1414.58 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_116",
    d: "M1542.37 1585.14C1568.19 1585.14 1589.11 1567.64 1589.11 1546.04C1589.11 1524.44 1568.19 1506.93 1542.37 1506.93C1516.56 1506.93 1495.63 1524.44 1495.63 1546.04C1495.63 1567.64 1516.56 1585.14 1542.37 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_117",
    opacity: "0.1",
    d: "M1542.37 1585.14C1568.19 1585.14 1589.11 1567.64 1589.11 1546.04C1589.11 1524.44 1568.19 1506.93 1542.37 1506.93C1516.56 1506.93 1495.63 1524.44 1495.63 1546.04C1495.63 1567.64 1516.56 1585.14 1542.37 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_118",
    d: "M1542.37 1576.57C1568.19 1576.57 1589.11 1559.06 1589.11 1537.46C1589.11 1515.86 1568.19 1498.35 1542.37 1498.35C1516.56 1498.35 1495.63 1515.86 1495.63 1537.46C1495.63 1559.06 1516.56 1576.57 1542.37 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_119",
    d: "M1668.27 1585.14C1694.09 1585.14 1715.01 1567.64 1715.01 1546.04C1715.01 1524.44 1694.09 1506.93 1668.27 1506.93C1642.46 1506.93 1621.53 1524.44 1621.53 1546.04C1621.53 1567.64 1642.46 1585.14 1668.27 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_120",
    opacity: "0.1",
    d: "M1668.27 1585.14C1694.09 1585.14 1715.01 1567.64 1715.01 1546.04C1715.01 1524.44 1694.09 1506.93 1668.27 1506.93C1642.46 1506.93 1621.53 1524.44 1621.53 1546.04C1621.53 1567.64 1642.46 1585.14 1668.27 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_121",
    d: "M1668.27 1576.57C1694.09 1576.57 1715.01 1559.06 1715.01 1537.46C1715.01 1515.86 1694.09 1498.35 1668.27 1498.35C1642.46 1498.35 1621.53 1515.86 1621.53 1537.46C1621.53 1559.06 1642.46 1576.57 1668.27 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_122",
    d: "M1801.78 1585.14C1827.59 1585.14 1848.52 1567.64 1848.52 1546.04C1848.52 1524.44 1827.59 1506.93 1801.78 1506.93C1775.96 1506.93 1755.04 1524.44 1755.04 1546.04C1755.04 1567.64 1775.96 1585.14 1801.78 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_123",
    opacity: "0.1",
    d: "M1801.78 1585.14C1827.59 1585.14 1848.52 1567.64 1848.52 1546.04C1848.52 1524.44 1827.59 1506.93 1801.78 1506.93C1775.96 1506.93 1755.04 1524.44 1755.04 1546.04C1755.04 1567.64 1775.96 1585.14 1801.78 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_124",
    d: "M1927.68 1585.14C1953.49 1585.14 1974.42 1567.64 1974.42 1546.04C1974.42 1524.44 1953.49 1506.93 1927.68 1506.93C1901.86 1506.93 1880.94 1524.44 1880.94 1546.04C1880.94 1567.64 1901.86 1585.14 1927.68 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_125",
    opacity: "0.1",
    d: "M1927.68 1585.14C1953.49 1585.14 1974.42 1567.64 1974.42 1546.04C1974.42 1524.44 1953.49 1506.93 1927.68 1506.93C1901.86 1506.93 1880.94 1524.44 1880.94 1546.04C1880.94 1567.64 1901.86 1585.14 1927.68 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_126",
    d: "M1927.68 1576.57C1953.49 1576.57 1974.42 1559.06 1974.42 1537.46C1974.42 1515.86 1953.49 1498.35 1927.68 1498.35C1901.86 1498.35 1880.94 1515.86 1880.94 1537.46C1880.94 1559.06 1901.86 1576.57 1927.68 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_127",
    d: "M2062.16 1585.14C2087.97 1585.14 2108.9 1567.64 2108.9 1546.04C2108.9 1524.44 2087.97 1506.93 2062.16 1506.93C2036.34 1506.93 2015.42 1524.44 2015.42 1546.04C2015.42 1567.64 2036.34 1585.14 2062.16 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_128",
    opacity: "0.1",
    d: "M2062.16 1585.14C2087.97 1585.14 2108.9 1567.64 2108.9 1546.04C2108.9 1524.44 2087.97 1506.93 2062.16 1506.93C2036.34 1506.93 2015.42 1524.44 2015.42 1546.04C2015.42 1567.64 2036.34 1585.14 2062.16 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: letters3,
    d: "M2062.16 1576.57C2087.97 1576.57 2108.9 1559.06 2108.9 1537.46C2108.9 1515.86 2087.97 1498.35 2062.16 1498.35C2036.34 1498.35 2015.42 1515.86 2015.42 1537.46C2015.42 1559.06 2036.34 1576.57 2062.16 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_129",
    d: "M2193.77 1585.14C2219.58 1585.14 2240.51 1567.64 2240.51 1546.04C2240.51 1524.44 2219.58 1506.93 2193.77 1506.93C2167.95 1506.93 2147.03 1524.44 2147.03 1546.04C2147.03 1567.64 2167.95 1585.14 2193.77 1585.14Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_130",
    opacity: "0.1",
    d: "M2193.77 1585.14C2219.58 1585.14 2240.51 1567.64 2240.51 1546.04C2240.51 1524.44 2219.58 1506.93 2193.77 1506.93C2167.95 1506.93 2147.03 1524.44 2147.03 1546.04C2147.03 1567.64 2167.95 1585.14 2193.77 1585.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_131",
    d: "M2193.77 1576.57C2219.58 1576.57 2240.51 1559.06 2240.51 1537.46C2240.51 1515.86 2219.58 1498.35 2193.77 1498.35C2167.95 1498.35 2147.03 1515.86 2147.03 1537.46C2147.03 1559.06 2167.95 1576.57 2193.77 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_132",
    d: "M964.403 1448.74C990.217 1448.74 1011.14 1431.23 1011.14 1409.63C1011.14 1388.04 990.217 1370.53 964.403 1370.53C938.59 1370.53 917.664 1388.04 917.664 1409.63C917.664 1431.23 938.59 1448.74 964.403 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_133",
    opacity: "0.1",
    d: "M964.403 1448.74C990.217 1448.74 1011.14 1431.23 1011.14 1409.63C1011.14 1388.04 990.217 1370.53 964.403 1370.53C938.59 1370.53 917.664 1388.04 917.664 1409.63C917.664 1431.23 938.59 1448.74 964.403 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_134",
    d: "M964.403 1440.16C990.217 1440.16 1011.14 1422.65 1011.14 1401.06C1011.14 1379.46 990.217 1361.95 964.403 1361.95C938.59 1361.95 917.664 1379.46 917.664 1401.06C917.664 1422.65 938.59 1440.16 964.403 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_135",
    d: "M1094.12 1448.74C1119.93 1448.74 1140.86 1431.23 1140.86 1409.63C1140.86 1388.04 1119.93 1370.53 1094.12 1370.53C1068.31 1370.53 1047.38 1388.04 1047.38 1409.63C1047.38 1431.23 1068.31 1448.74 1094.12 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_136",
    opacity: "0.1",
    d: "M1094.12 1448.74C1119.93 1448.74 1140.86 1431.23 1140.86 1409.63C1140.86 1388.04 1119.93 1370.53 1094.12 1370.53C1068.31 1370.53 1047.38 1388.04 1047.38 1409.63C1047.38 1431.23 1068.31 1448.74 1094.12 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_137",
    d: "M1094.12 1440.16C1119.93 1440.16 1140.86 1422.65 1140.86 1401.06C1140.86 1379.46 1119.93 1361.95 1094.12 1361.95C1068.31 1361.95 1047.38 1379.46 1047.38 1401.06C1047.38 1422.65 1068.31 1440.16 1094.12 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_138",
    d: "M1219.04 1448.74C1244.86 1448.74 1265.78 1431.23 1265.78 1409.63C1265.78 1388.04 1244.86 1370.53 1219.04 1370.53C1193.23 1370.53 1172.3 1388.04 1172.3 1409.63C1172.3 1431.23 1193.23 1448.74 1219.04 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_139",
    opacity: "0.1",
    d: "M1219.04 1448.74C1244.86 1448.74 1265.78 1431.23 1265.78 1409.63C1265.78 1388.04 1244.86 1370.53 1219.04 1370.53C1193.23 1370.53 1172.3 1388.04 1172.3 1409.63C1172.3 1431.23 1193.23 1448.74 1219.04 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_140",
    d: "M1219.04 1440.16C1244.86 1440.16 1265.78 1422.65 1265.78 1401.06C1265.78 1379.46 1244.86 1361.95 1219.04 1361.95C1193.23 1361.95 1172.3 1379.46 1172.3 1401.06C1172.3 1422.65 1193.23 1440.16 1219.04 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_141",
    d: "M1347.81 1448.74C1373.63 1448.74 1394.55 1431.23 1394.55 1409.63C1394.55 1388.04 1373.63 1370.53 1347.81 1370.53C1322 1370.53 1301.07 1388.04 1301.07 1409.63C1301.07 1431.23 1322 1448.74 1347.81 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_142",
    opacity: "0.1",
    d: "M1347.81 1448.74C1373.63 1448.74 1394.55 1431.23 1394.55 1409.63C1394.55 1388.04 1373.63 1370.53 1347.81 1370.53C1322 1370.53 1301.07 1388.04 1301.07 1409.63C1301.07 1431.23 1322 1448.74 1347.81 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_143",
    d: "M1347.81 1440.16C1373.63 1440.16 1394.55 1422.65 1394.55 1401.06C1394.55 1379.46 1373.63 1361.95 1347.81 1361.95C1322 1361.95 1301.07 1379.46 1301.07 1401.06C1301.07 1422.65 1322 1440.16 1347.81 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_144",
    d: "M1474.66 1448.74C1500.47 1448.74 1521.4 1431.23 1521.4 1409.63C1521.4 1388.04 1500.47 1370.53 1474.66 1370.53C1448.85 1370.53 1427.92 1388.04 1427.92 1409.63C1427.92 1431.23 1448.85 1448.74 1474.66 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_145",
    opacity: "0.1",
    d: "M1474.66 1448.74C1500.47 1448.74 1521.4 1431.23 1521.4 1409.63C1521.4 1388.04 1500.47 1370.53 1474.66 1370.53C1448.85 1370.53 1427.92 1388.04 1427.92 1409.63C1427.92 1431.23 1448.85 1448.74 1474.66 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: letters8,
    d: "M1474.66 1440.16C1500.47 1440.16 1521.4 1422.65 1521.4 1401.06C1521.4 1379.46 1500.47 1361.95 1474.66 1361.95C1448.85 1361.95 1427.92 1379.46 1427.92 1401.06C1427.92 1422.65 1448.85 1440.16 1474.66 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_146",
    d: "M1604.38 1448.74C1630.19 1448.74 1651.12 1431.23 1651.12 1409.63C1651.12 1388.04 1630.19 1370.53 1604.38 1370.53C1578.56 1370.53 1557.64 1388.04 1557.64 1409.63C1557.64 1431.23 1578.56 1448.74 1604.38 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_147",
    opacity: "0.1",
    d: "M1604.38 1448.74C1630.19 1448.74 1651.12 1431.23 1651.12 1409.63C1651.12 1388.04 1630.19 1370.53 1604.38 1370.53C1578.56 1370.53 1557.64 1388.04 1557.64 1409.63C1557.64 1431.23 1578.56 1448.74 1604.38 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_148",
    d: "M1604.38 1440.16C1630.19 1440.16 1651.12 1422.65 1651.12 1401.06C1651.12 1379.46 1630.19 1361.95 1604.38 1361.95C1578.56 1361.95 1557.64 1379.46 1557.64 1401.06C1557.64 1422.65 1578.56 1440.16 1604.38 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_149",
    d: "M1731.22 1448.74C1757.04 1448.74 1777.96 1431.23 1777.96 1409.63C1777.96 1388.04 1757.04 1370.53 1731.22 1370.53C1705.41 1370.53 1684.49 1388.04 1684.49 1409.63C1684.49 1431.23 1705.41 1448.74 1731.22 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_150",
    opacity: "0.1",
    d: "M1731.22 1448.74C1757.04 1448.74 1777.96 1431.23 1777.96 1409.63C1777.96 1388.04 1757.04 1370.53 1731.22 1370.53C1705.41 1370.53 1684.49 1388.04 1684.49 1409.63C1684.49 1431.23 1705.41 1448.74 1731.22 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: letters2,
    d: "M1731.22 1440.16C1757.04 1440.16 1777.96 1422.65 1777.96 1401.06C1777.96 1379.46 1757.04 1361.95 1731.22 1361.95C1705.41 1361.95 1684.49 1379.46 1684.49 1401.06C1684.49 1422.65 1705.41 1440.16 1731.22 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_151",
    d: "M1859.96 1448.74C1885.78 1448.74 1906.7 1431.23 1906.7 1409.63C1906.7 1388.04 1885.78 1370.53 1859.96 1370.53C1834.15 1370.53 1813.23 1388.04 1813.23 1409.63C1813.23 1431.23 1834.15 1448.74 1859.96 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_152",
    opacity: "0.1",
    d: "M1859.96 1448.74C1885.78 1448.74 1906.7 1431.23 1906.7 1409.63C1906.7 1388.04 1885.78 1370.53 1859.96 1370.53C1834.15 1370.53 1813.23 1388.04 1813.23 1409.63C1813.23 1431.23 1834.15 1448.74 1859.96 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_153",
    d: "M1859.96 1440.16C1885.78 1440.16 1906.7 1422.65 1906.7 1401.06C1906.7 1379.46 1885.78 1361.95 1859.96 1361.95C1834.15 1361.95 1813.23 1379.46 1813.23 1401.06C1813.23 1422.65 1834.15 1440.16 1859.96 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_154",
    d: "M1992.55 1448.74C2018.36 1448.74 2039.29 1431.23 2039.29 1409.63C2039.29 1388.04 2018.36 1370.53 1992.55 1370.53C1966.74 1370.53 1945.81 1388.04 1945.81 1409.63C1945.81 1431.23 1966.74 1448.74 1992.55 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_155",
    opacity: "0.1",
    d: "M1992.55 1448.74C2018.36 1448.74 2039.29 1431.23 2039.29 1409.63C2039.29 1388.04 2018.36 1370.53 1992.55 1370.53C1966.74 1370.53 1945.81 1388.04 1945.81 1409.63C1945.81 1431.23 1966.74 1448.74 1992.55 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_156",
    d: "M1992.55 1440.16C2018.36 1440.16 2039.29 1422.65 2039.29 1401.06C2039.29 1379.46 2018.36 1361.95 1992.55 1361.95C1966.74 1361.95 1945.81 1379.46 1945.81 1401.06C1945.81 1422.65 1966.74 1440.16 1992.55 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_157",
    d: "M2122.24 1448.74C2148.05 1448.74 2168.98 1431.23 2168.98 1409.63C2168.98 1388.04 2148.05 1370.53 2122.24 1370.53C2096.42 1370.53 2075.5 1388.04 2075.5 1409.63C2075.5 1431.23 2096.42 1448.74 2122.24 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_158",
    opacity: "0.1",
    d: "M2122.24 1448.74C2148.05 1448.74 2168.98 1431.23 2168.98 1409.63C2168.98 1388.04 2148.05 1370.53 2122.24 1370.53C2096.42 1370.53 2075.5 1388.04 2075.5 1409.63C2075.5 1431.23 2096.42 1448.74 2122.24 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_159",
    d: "M2122.24 1440.16C2148.05 1440.16 2168.98 1422.65 2168.98 1401.06C2168.98 1379.46 2148.05 1361.95 2122.24 1361.95C2096.42 1361.95 2075.5 1379.46 2075.5 1401.06C2075.5 1422.65 2096.42 1440.16 2122.24 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_160",
    d: "M2249.08 1448.74C2274.9 1448.74 2295.82 1431.23 2295.82 1409.63C2295.82 1388.04 2274.9 1370.53 2249.08 1370.53C2223.27 1370.53 2202.34 1388.04 2202.34 1409.63C2202.34 1431.23 2223.27 1448.74 2249.08 1448.74Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_161",
    opacity: "0.1",
    d: "M2249.08 1448.74C2274.9 1448.74 2295.82 1431.23 2295.82 1409.63C2295.82 1388.04 2274.9 1370.53 2249.08 1370.53C2223.27 1370.53 2202.34 1388.04 2202.34 1409.63C2202.34 1431.23 2223.27 1448.74 2249.08 1448.74Z",
    fill: "black"
  }), __jsx("path", {
    className: letters1,
    d: "M842.319 1440.16C868.132 1440.16 889.058 1422.65 889.058 1401.06C889.058 1379.46 868.132 1361.95 842.319 1361.95C816.505 1361.95 795.579 1379.46 795.579 1401.06C795.579 1422.65 816.505 1440.16 842.319 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_162",
    d: "M1057.88 1712.97C1083.7 1712.97 1104.62 1695.46 1104.62 1673.86C1104.62 1652.26 1083.7 1634.75 1057.88 1634.75C1032.07 1634.75 1011.14 1652.26 1011.14 1673.86C1011.14 1695.46 1032.07 1712.97 1057.88 1712.97Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_163",
    d: "M1801.78 1576.57C1827.59 1576.57 1848.52 1559.06 1848.52 1537.46C1848.52 1515.86 1827.59 1498.35 1801.78 1498.35C1775.96 1498.35 1755.04 1515.86 1755.04 1537.46C1755.04 1559.06 1775.96 1576.57 1801.78 1576.57Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_164",
    d: "M2249.08 1440.16C2274.9 1440.16 2295.82 1422.65 2295.82 1401.06C2295.82 1379.46 2274.9 1361.95 2249.08 1361.95C2223.27 1361.95 2202.34 1379.46 2202.34 1401.06C2202.34 1422.65 2223.27 1440.16 2249.08 1440.16Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_165",
    d: "M2242.4 1910.4H870.008C854.716 1910.4 842.319 1922.8 842.319 1938.09V1958.05C842.319 1973.35 854.716 1985.74 870.008 1985.74H2242.4C2257.69 1985.74 2270.09 1973.35 2270.09 1958.05V1938.09C2270.09 1922.8 2257.69 1910.4 2242.4 1910.4Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_166",
    opacity: "0.1",
    d: "M2242.4 1910.4H870.008C854.716 1910.4 842.319 1922.8 842.319 1938.09V1958.05C842.319 1973.35 854.716 1985.74 870.008 1985.74H2242.4C2257.69 1985.74 2270.09 1973.35 2270.09 1958.05V1938.09C2270.09 1922.8 2257.69 1910.4 2242.4 1910.4Z",
    fill: "black"
  }), __jsx("path", {
    className: "spacebar ",
    d: "M2242.4 1904.66H870.008C854.716 1904.66 842.319 1917.06 842.319 1932.35V1952.31C842.319 1967.61 854.716 1980 870.008 1980H2242.4C2257.69 1980 2270.09 1967.61 2270.09 1952.31V1932.35C2270.09 1917.06 2257.69 1904.66 2242.4 1904.66Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_167",
    opacity: "0.1",
    d: "M2075.53 1011.91C2075.53 1092.5 1820.43 1178.81 1532.82 1178.81C1245.21 1178.81 1032.15 1085.82 1032.15 1005.22C1032.15 924.625 1245.27 886.952 1532.82 886.952C1820.37 886.952 2075.53 931.31 2075.53 1011.91Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_168",
    d: "M2328.25 775.369C2345.63 775.369 2359.72 740.57 2359.72 697.643C2359.72 654.716 2345.63 619.917 2328.25 619.917C2310.86 619.917 2296.77 654.716 2296.77 697.643C2296.77 740.57 2310.86 775.369 2328.25 775.369Z",
    fill: "#464353"
  }), __jsx("path", {
    className: "Vector_169",
    d: "M787.001 775.369C804.384 775.369 818.476 740.57 818.476 697.643C818.476 654.716 804.384 619.917 787.001 619.917C769.618 619.917 755.526 654.716 755.526 697.643C755.526 740.57 769.618 775.369 787.001 775.369Z",
    fill: "#464353"
  }), __jsx("path", {
    className: "Vector_170",
    opacity: "0.1",
    d: "M2328.25 679.051H809.897V701.948H2328.25V679.051Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_171",
    d: "M2328.25 675.235H809.897V698.132H2328.25V675.235Z",
    fill: "#464353"
  }), __jsx("path", {
    className: "Vector_172",
    d: "M1592.9 703.84C1580.47 700.024 1557.61 775.369 1557.61 775.369H1627.21C1627.21 775.369 1605.32 707.657 1592.9 703.84ZM1591.92 713.365C1593.25 713.359 1594.54 713.746 1595.64 714.477C1596.75 715.208 1597.61 716.25 1598.12 717.471C1598.63 718.693 1598.77 720.038 1598.51 721.337C1598.26 722.636 1597.62 723.83 1596.69 724.768C1595.76 725.706 1594.57 726.346 1593.27 726.606C1591.97 726.867 1590.62 726.736 1589.4 726.231C1588.18 725.726 1587.13 724.869 1586.4 723.769C1585.66 722.669 1585.27 721.375 1585.27 720.051C1585.27 719.173 1585.44 718.304 1585.78 717.493C1586.11 716.682 1586.6 715.944 1587.22 715.324C1587.85 714.703 1588.58 714.21 1589.39 713.874C1590.21 713.538 1591.07 713.365 1591.95 713.365H1591.92ZM1592.72 734.919C1600.87 736.903 1615.31 772.5 1615.31 772.5H1569.51C1569.51 772.5 1584.6 732.904 1592.9 734.919H1592.72Z",
    fill: "#464353"
  }), __jsx("path", {
    className: "Vector_173",
    opacity: "0.03",
    d: "M2439.46 1282.73H662.688C665.293 1257.86 668.346 1233.04 671.846 1208.27L716.754 895.408C722.471 856.245 742.087 820.445 772.019 794.549C801.95 768.653 840.199 754.39 879.778 754.366H947.979C982.588 754.487 1016.23 765.807 1043.87 786.634C1114.51 839.358 1315.21 877.396 1551.81 877.396C1788.4 877.396 1989.19 839.48 2059.99 786.634C2087.63 765.807 2121.27 754.487 2155.88 754.366H2266.36C2289.59 754.365 2312.07 762.549 2329.85 777.478C2347.64 792.408 2359.6 813.128 2363.63 835.999L2423.92 1177.92C2430.03 1212.81 2435.21 1247.74 2439.46 1282.73Z",
    fill: "white"
  }), __jsx("g", {
    className: "woman"
  }, __jsx("path", {
    className: "Vector_174",
    d: "M1497.37 1672.91C1497.37 1672.91 1462.36 1608.8 1468.28 1598.49C1472.52 1590.35 1475.95 1581.81 1478.51 1572.99C1478.51 1572.99 1491.45 1564.14 1491.45 1560.48C1491.45 1556.81 1501.68 1548.51 1507.08 1544.88C1512.49 1541.24 1509.77 1524.06 1507.08 1521.98C1504.38 1519.16 1502.04 1516.01 1500.12 1512.61C1500.12 1512.61 1503.85 1502.2 1500.12 1499.08C1496.4 1495.97 1500.67 1492.98 1500.12 1489.71C1499.86 1484.86 1499.86 1480 1500.12 1475.15C1496.94 1470.21 1492.03 1466.64 1486.35 1465.14L1485.96 1463.49L1483.64 1453.78C1483.64 1453.78 1494.81 1432.41 1476.68 1421.05C1475.38 1420.25 1474.03 1419.54 1472.65 1418.92C1472.65 1418.92 1472.65 1418.4 1472.65 1417.51C1472.27 1411.96 1471.38 1406.45 1469.99 1401.06C1469.04 1398 1467.82 1396.02 1466.2 1396.48C1465.83 1396.59 1465.48 1396.79 1465.2 1397.06C1464.46 1397.73 1463.81 1398.5 1463.27 1399.35C1461.21 1403.06 1459.77 1407.08 1459 1411.25C1458.46 1413.72 1458.05 1416.22 1457.78 1418.73C1456.99 1420.23 1456.3 1421.78 1455.7 1423.37C1453.5 1429.08 1450.91 1439 1455.7 1446.33C1459.7 1452.44 1465.04 1461.11 1468.95 1467.33V1467.55L1469.2 1467.91L1468.8 1468.19V1469.14L1469.14 1474.39L1472.19 1519.72C1471.29 1519.46 1470.37 1519.26 1469.44 1519.14C1468.11 1518.93 1466.76 1518.84 1465.41 1518.87C1462.79 1508.55 1455.55 1498.9 1454.27 1488.12C1454.12 1487.05 1454.05 1485.97 1454.05 1484.89C1454.05 1478.08 1455.86 1471.27 1455.7 1464.49C1455.78 1463.24 1455.78 1461.99 1455.7 1460.74V1459.7C1455.03 1454.77 1453.16 1450.08 1450.25 1446.03C1447.34 1441.99 1443.49 1438.71 1439.03 1436.5C1435.98 1434.94 1432.53 1433.91 1429.48 1432.2C1422.46 1428.26 1417.97 1421.14 1411.59 1416.29C1409.22 1414.39 1406.43 1413.06 1403.46 1412.42C1400.49 1411.77 1397.41 1411.82 1394.46 1412.57C1391.64 1412.99 1388.85 1413.57 1386.1 1414.31C1379.4 1416.05 1372.98 1418.71 1367.02 1422.21C1366.22 1422.7 1365.4 1423.19 1364.64 1423.77C1362.96 1424.87 1361.62 1426.43 1360.79 1428.26C1360.25 1429.82 1360.04 1431.47 1360.18 1433.11C1360.18 1434.3 1360.18 1435.52 1360.18 1436.68C1359.81 1456.59 1338.35 1472.07 1336.58 1491.64C1336.58 1492.12 1336.58 1492.58 1336.58 1493.04V1495.18V1496.73C1336.88 1505.28 1341.31 1513.22 1342.14 1521.74C1342.14 1522.5 1342.14 1523.23 1342.14 1524C1342 1527.9 1341.26 1531.76 1339.94 1535.44C1337.23 1536.13 1334.63 1537.15 1332.18 1538.5C1325.68 1542.68 1313.87 1549.95 1309.59 1563.81C1308.48 1567.4 1307.92 1571.15 1307.94 1574.92C1307.87 1588.23 1306.66 1601.5 1304.31 1614.6C1303.76 1617.91 1302.99 1621.17 1302.02 1624.37C1301.95 1624.69 1301.95 1625.01 1302.02 1625.32L1299.46 1658.9L1298.97 1664.82L1298.33 1673.25C1298.33 1673.25 1298.51 1673.77 1298.78 1674.62C1299.06 1675.48 1299.49 1676.94 1299.82 1678.5C1300.54 1681.36 1300.66 1684.33 1300.16 1687.23C1299.86 1688.41 1299.23 1689.47 1298.33 1690.29L1298.11 1690.53C1296.98 1693.25 1296.32 1696.14 1296.16 1699.08C1295.92 1700.85 1295.73 1702.77 1295.52 1704.91C1294.27 1718.16 1293.47 1738.03 1293.02 1754.46C1292.56 1770.88 1292.4 1783.46 1292.4 1783.46C1294.5 1784.81 1296.74 1785.91 1299.09 1786.76C1298.89 1787.21 1298.72 1787.66 1298.57 1788.13C1296.44 1793.61 1295.07 1799.37 1294.51 1805.23C1293.44 1817.44 1296.86 1831.08 1313.96 1838.11C1315.05 1838.56 1316.17 1838.93 1317.32 1839.24C1318.69 1839.74 1320.16 1839.96 1321.63 1839.87C1323.1 1839.78 1324.53 1839.39 1325.83 1838.72C1325.83 1839.45 1325.83 1840.15 1325.83 1840.88C1326.02 1843.94 1326.17 1846.68 1326.23 1849.04C1326.78 1863.6 1330.38 1889.09 1330.38 1889.09C1330.38 1889.09 1331.63 1899.5 1330.53 1902.64C1329.44 1905.79 1330.53 1918.24 1330.53 1918.24C1330.53 1918.24 1334.32 1924.35 1330.53 1927.62C1326.75 1930.88 1325.71 1946.36 1326.78 1948.44C1326.77 1948.52 1326.77 1948.6 1326.78 1948.68C1327.6 1953.84 1322.93 2030.68 1322.93 2030.68C1322.93 2030.68 1318.54 2042.43 1315.06 2054.65C1311.58 2066.86 1308.95 2078.86 1312.22 2081.15C1315.3 2082.68 1318.65 2083.58 1322.08 2083.8C1322.08 2084.32 1322.08 2084.84 1322.08 2085.36C1321.98 2089.74 1321.25 2094.09 1319.91 2098.27C1318.41 2100.38 1316.86 2116.8 1316.09 2125.75C1316.09 2126.08 1316.09 2126.42 1316.09 2126.72C1314.48 2130.51 1313.14 2134.41 1312.06 2138.39C1312.06 2138.39 1300.16 2168.21 1304.19 2176.03C1304.56 2176.73 1305.07 2177.35 1305.68 2177.86C1305.8 2178 1305.93 2178.12 1306.08 2178.23C1311.82 2182.81 1326.2 2183.78 1331.42 2184L1331.24 2191.38V2191.9H1338.04V2191.72C1338.04 2190.77 1338.2 2186.5 1338.41 2180.76C1338.41 2179.75 1338.41 2178.68 1338.41 2177.71C1338.41 2176.73 1338.41 2175.97 1338.41 2175.08C1340.45 2169.77 1341.49 2164.13 1341.46 2158.44C1341.47 2151.92 1342.35 2145.43 1344.09 2139.15C1344.93 2135.91 1346.09 2132.76 1347.54 2129.75C1348.7 2123.38 1348.41 2116.84 1346.68 2110.61C1346.15 2109.03 1345.32 2107.57 1344.24 2106.3C1344.26 2106.04 1344.26 2105.77 1344.24 2105.51V2103.8C1344.16 2098.43 1344.69 2093.08 1345.83 2087.83C1345.81 2087.75 1345.81 2087.67 1345.83 2087.59C1345.83 2087.13 1346.01 2086.73 1346.13 2086.3V2086.03H1348.33C1355.08 2086.24 1360.06 2086.24 1360.06 2086.24C1360.06 2086.24 1365.46 2058.77 1364.91 2046.56C1364.91 2046.04 1364.91 2045.49 1364.91 2044.94C1365.14 2035.51 1366.23 2026.12 1368.18 2016.88L1372.48 1974.75C1371.3 1970.66 1371.3 1966.32 1372.48 1962.24C1373.82 1959.18 1376.57 1953.08 1378.59 1948.96C1379.47 1947.03 1380.21 1945.54 1380.51 1944.9V1944.56C1379.83 1944.31 1379.19 1943.98 1378.59 1943.58C1376.82 1942.39 1375.26 1940.1 1380.51 1936.74C1388.6 1931.52 1385.91 1918.43 1385.91 1918.43C1385.25 1917.03 1384.94 1915.49 1385.01 1913.95C1385.09 1912.4 1385.55 1910.9 1386.34 1909.57C1389.15 1905.42 1386.34 1889.79 1386.34 1889.79C1388.65 1885.67 1390.51 1881.31 1391.87 1876.79C1393.88 1870.68 1398.95 1840.15 1401.33 1825.41C1402.12 1820.58 1402.61 1817.47 1402.61 1817.47V1818.23V1819.06L1403.28 1825.99V1826.9L1404.51 1840.03C1404.51 1840.03 1407.01 1874.53 1405.45 1888.05C1405.47 1888.13 1405.47 1888.21 1405.45 1888.3C1405.34 1889.7 1405.03 1891.07 1404.54 1892.39C1401.7 1898.89 1402.22 1924.62 1402.37 1930.3C1402.37 1930.76 1402.37 1931.16 1402.37 1931.46C1401.21 1934.24 1400.69 1937.25 1400.84 1940.26C1400.95 1941.2 1401.28 1942.1 1401.82 1942.88C1402.58 1944.09 1402.92 1945.52 1402.8 1946.94C1402.8 1947.52 1402.8 1948.13 1402.8 1948.74C1402.42 1951.15 1401.78 1953.52 1400.9 1955.79C1400.9 1955.79 1397.85 1963.4 1399.1 1967.36C1399.25 1967.88 1399.5 1968.35 1399.84 1968.77C1400.08 1969.23 1400.21 1969.74 1400.23 1970.27C1401.24 1978.66 1398.64 2015.69 1397.18 2035.93C1396.57 2043.93 1396.11 2049.33 1396.11 2049.33L1391.84 2093.57L1392.26 2093.85C1392.75 2094.21 1393.67 2094.79 1394.89 2095.52L1394.71 2096.87C1394.1 2101.14 1393.27 2106.03 1392.39 2109.87C1392.3 2110.14 1392.23 2110.42 1392.17 2110.7C1390.54 2110.98 1388.98 2111.61 1387.59 2112.53C1378.43 2128.65 1382.53 2141.41 1387.59 2145.13C1389.4 2147.27 1390.48 2149.94 1390.65 2152.74L1391.9 2168.79V2170.66C1391.9 2171.15 1391.98 2171.65 1392.14 2172.12L1392.54 2176.98L1393.06 2183.75H1397.18V2176.03H1397.42C1403.96 2176.27 1414.46 2176.55 1419.07 2176.18H1420.29C1420.54 2176.15 1420.79 2176.08 1421.02 2175.97C1423.43 2174.81 1429.51 2157.65 1424.07 2153.74C1418.64 2149.84 1417.42 2138.84 1417.42 2138.84C1416.93 2137.38 1416.47 2136.01 1415.98 2134.69C1415.97 2134.42 1415.97 2134.14 1415.98 2133.87C1415.7 2129.1 1415.92 2124.31 1416.63 2119.58C1417.53 2113.94 1418.01 2108.23 1418.06 2102.52C1418.06 2102.03 1418.06 2101.57 1418.06 2101.08V2100.93C1419.01 2100.71 1419.94 2100.41 1420.84 2100.04H1421.05C1422.72 2099.34 1424.28 2098.42 1425.69 2097.3L1440.8 2029.64L1442.39 2021.77L1451.55 1977.04C1451.55 1977.04 1448.35 1961.44 1451.55 1958.73C1452.74 1957.78 1453.08 1953.78 1452.99 1949.08C1452.99 1940.9 1451.55 1930.76 1451.55 1930.76C1451.55 1930.76 1455.86 1924.01 1458.02 1919.83C1460.19 1915.65 1458.02 1904.75 1458.02 1904.75L1462.33 1879.78C1465.67 1860.94 1471.28 1842.58 1479.06 1825.1C1487.79 1806.78 1482.11 1757.11 1476.52 1730.68L1476.07 1728.69L1485.5 1724.11L1486.81 1723.5C1491.24 1721.43 1495.97 1719.29 1500.12 1717.4H1500.4C1503.39 1716.09 1506.45 1714.94 1509.56 1713.95C1510.48 1713.65 1511.43 1713.45 1512.39 1713.37C1520.03 1712.42 1497.37 1672.91 1497.37 1672.91ZM1328.79 1757.6H1331.02C1330.75 1758.09 1330.5 1758.58 1330.26 1759.1C1330.1 1759.38 1329.96 1759.68 1329.83 1759.98C1329 1761.66 1328.27 1763.38 1327.63 1765.14C1327.88 1763.28 1328.18 1761.27 1328.52 1759.04L1328.79 1757.6ZM1322.69 1790.08C1322.69 1790.08 1322.69 1790.08 1322.69 1789.9C1322.69 1789.72 1322.69 1789.5 1322.48 1789.32L1322.11 1788.13C1322.87 1787.89 1323.67 1787.64 1324.46 1787.34C1324.46 1787.34 1324.46 1787.61 1324.46 1787.76C1324.46 1787.92 1324.31 1788.92 1324.25 1789.5C1324.25 1789.5 1324.25 1789.66 1324.25 1789.75C1324.25 1789.84 1324.25 1790.66 1324.25 1791.12C1324.25 1791.58 1324 1792.86 1323.91 1793.72L1323.18 1791.4C1322.99 1790.85 1322.87 1790.42 1322.72 1790.02L1322.69 1790.08Z",
    fill: "url(#paint0_linear)"
  }), __jsx("path", {
    className: "Vector_175",
    d: "M1484.46 1473.13L1471.03 1477.93L1466.14 1469.81C1462.39 1463.7 1457.2 1455.06 1453.38 1448.86C1446.64 1437.97 1455.46 1421.39 1455.46 1421.39C1455.46 1421.39 1457.02 1404.78 1462.72 1399.59C1468.43 1394.4 1469.99 1421.39 1469.99 1421.39C1492.79 1431.74 1480.58 1456.13 1480.58 1456.13L1482.78 1465.81L1484.46 1473.13Z",
    fill: "#BE6F72"
  }), __jsx("path", {
    className: "Vector_176",
    opacity: "0.1",
    d: "M1484.46 1473.13L1471.03 1477.93L1466.14 1469.81V1469.1C1471.1 1465.96 1477.06 1464.78 1482.84 1465.81L1484.46 1473.13Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_177",
    d: "M1462.72 1527.72L1469.47 1522.01L1466.08 1470.66C1468.5 1469.03 1471.22 1467.92 1474.09 1467.38C1476.95 1466.85 1479.9 1466.9 1482.74 1467.54C1485.58 1468.19 1488.26 1469.4 1490.62 1471.12C1492.97 1472.84 1494.95 1475.02 1496.43 1477.53C1496.16 1482.37 1496.16 1487.22 1496.43 1492.06C1496.95 1495.12 1492.8 1498.17 1496.43 1501.22C1500.06 1504.27 1496.43 1514.71 1496.43 1514.71C1498.26 1518.09 1500.51 1521.23 1503.11 1524.06C1505.71 1526.13 1508.3 1543.26 1503.11 1546.89C1497.92 1550.52 1488.06 1558.83 1488.06 1562.46C1488.06 1566.09 1475.64 1574.89 1475.64 1574.89L1464.68 1560.42L1462.72 1527.72Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_178",
    d: "M1316.95 1839.51C1291.79 1828.86 1297.38 1802.88 1302.11 1789.69C1303.07 1787.04 1304.19 1784.45 1305.44 1781.93L1319.54 1773.35C1319.54 1773.35 1322.41 1780.71 1325.5 1790.57C1332.64 1813.35 1340.85 1849.65 1316.95 1839.51Z",
    fill: "#BE6F72"
  }), __jsx("path", {
    className: "Vector_179",
    d: "M1351.51 2077.24C1349.8 2080.56 1348.54 2084.09 1347.75 2087.74C1346.52 2093.61 1346 2099.6 1346.2 2105.6C1346.23 2107.89 1346.39 2110.19 1346.65 2112.47L1318.63 2131.73C1318.63 2131.73 1318.78 2129.47 1319.06 2126.14C1319.79 2117.32 1321.28 2100.96 1322.72 2098.85C1324.03 2094.68 1324.74 2090.34 1324.83 2085.97C1325.25 2080.63 1325.44 2075.68 1325.44 2075.68C1325.44 2075.68 1359.08 2063.04 1351.51 2077.24Z",
    fill: "#BE6F72"
  }), __jsx("path", {
    className: "Vector_180",
    d: "M1417.63 2091.16C1417.63 2091.16 1417.63 2096.5 1417.45 2102.76C1417.41 2108.45 1416.96 2114.14 1416.11 2119.76C1415.4 2124.47 1415.18 2129.24 1415.47 2133.99C1415.65 2140.1 1416.11 2145.81 1416.11 2145.81C1416.11 2145.81 1387.5 2118.79 1390.4 2116.65C1391.65 2114.83 1392.44 2112.74 1392.69 2110.54C1393.55 2106.76 1394.34 2101.81 1394.92 2097.57C1395.62 2092.53 1396.05 2088.41 1396.05 2088.41L1417.63 2091.16Z",
    fill: "#BE6F72"
  }), __jsx("path", {
    className: "Vector_181",
    opacity: "0.1",
    d: "M1351.51 2077.24C1349.8 2080.56 1348.54 2084.09 1347.75 2087.74C1340.09 2087.54 1332.43 2086.95 1324.83 2085.97C1325.25 2080.63 1325.44 2075.68 1325.44 2075.68C1325.44 2075.68 1359.08 2063.04 1351.51 2077.24Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_182",
    opacity: "0.1",
    d: "M1417.63 2091.16C1417.63 2091.16 1417.63 2096.5 1417.45 2102.76C1408.54 2105.02 1399.38 2100.47 1394.92 2097.72C1395.62 2092.69 1396.05 2088.56 1396.05 2088.56L1417.63 2091.16Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_183",
    d: "M1476.22 1826.02C1468.73 1843.49 1463.33 1861.78 1460.13 1880.51L1455.98 1905.39C1455.98 1905.39 1458.05 1916.29 1455.98 1920.44C1453.9 1924.59 1449.87 1931.34 1449.87 1931.34C1449.87 1931.34 1452.92 1956.77 1449.87 1959.37C1446.82 1961.96 1449.87 1977.5 1449.87 1977.5L1439.49 2029.92L1424.99 2097.26C1410.98 2108.68 1392.36 2094.21 1392.36 2094.21L1396.48 2050.1C1396.48 2050.1 1402.58 1972.8 1400.11 1969.68C1397.64 1966.57 1401.15 1956.74 1401.15 1956.74C1401.15 1956.74 1404.78 1947.4 1402.19 1943.77C1399.59 1940.13 1402.7 1932.35 1402.7 1932.35C1402.7 1932.35 1401.67 1900.69 1404.78 1893.42C1407.89 1886.16 1404.78 1841.22 1404.78 1841.22L1403.47 1827.24L1402.77 1819.48V1818.72L1401.51 1826.66C1399.22 1841.28 1394.34 1871.63 1392.36 1877.88C1391.05 1882.38 1389.26 1886.72 1387.01 1890.83C1387.01 1890.83 1389.73 1906.4 1387.01 1910.55C1386.25 1911.88 1385.81 1913.38 1385.75 1914.91C1385.68 1916.45 1385.98 1917.98 1386.62 1919.37C1386.62 1919.37 1389.21 1932.35 1381.43 1937.69C1373.64 1943.03 1381.43 1945.48 1381.43 1945.48C1381.43 1945.48 1375.72 1957.93 1373.64 1963.12C1372.49 1967.18 1372.49 1971.48 1373.64 1975.55L1369.49 2017.58C1367.51 2027.32 1366.49 2037.23 1366.44 2047.17C1366.96 2059.07 1361.77 2086.58 1361.77 2086.58C1361.77 2086.58 1321.83 2086.58 1315.67 2081.91C1309.5 2077.24 1325.99 2031.6 1325.99 2031.6C1325.99 2031.6 1330.66 1951.7 1329.62 1949.63C1328.58 1947.55 1329.62 1931.98 1333.25 1928.87C1336.88 1925.75 1333.25 1919.53 1333.25 1919.53C1333.25 1919.53 1332.21 1907.07 1333.25 1903.96C1333.73 1899.47 1333.67 1894.94 1333.07 1890.46C1333.07 1890.46 1329.62 1865.06 1329.1 1850.53C1328.58 1836 1326.05 1803.3 1326.05 1803.3C1326.05 1803.3 1328.73 1783.12 1329.1 1773.48C1329.56 1769.21 1330.82 1765.07 1332.79 1761.26C1335.04 1756.56 1337.61 1752.02 1340.49 1747.68C1340.49 1747.68 1463.46 1711.38 1468.71 1715.01C1470.05 1715.96 1472.07 1722.43 1474.02 1731.93C1479.24 1758.4 1484.61 1807.7 1476.22 1826.02Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_184",
    opacity: "0.15",
    d: "M1476.22 1826.02C1468.73 1843.49 1463.33 1861.78 1460.13 1880.51L1455.98 1905.39C1455.98 1905.39 1458.05 1916.29 1455.98 1920.44C1453.9 1924.59 1449.87 1931.34 1449.87 1931.34C1449.87 1931.34 1452.92 1956.77 1449.87 1959.37C1446.82 1961.96 1449.87 1977.5 1449.87 1977.5L1439.49 2029.92L1424.99 2097.26C1410.98 2108.68 1392.36 2094.21 1392.36 2094.21L1396.48 2050.1C1396.48 2050.1 1402.58 1972.8 1400.11 1969.68C1397.64 1966.57 1401.15 1956.74 1401.15 1956.74C1401.15 1956.74 1404.78 1947.4 1402.19 1943.77C1399.59 1940.13 1402.7 1932.35 1402.7 1932.35C1402.7 1932.35 1401.67 1900.69 1404.78 1893.42C1407.89 1886.16 1404.78 1841.22 1404.78 1841.22L1403.47 1827.24L1402.77 1819.48V1818.72L1401.51 1826.66C1399.22 1841.28 1394.34 1871.63 1392.36 1877.88C1391.05 1882.38 1389.26 1886.72 1387.01 1890.83C1387.01 1890.83 1389.73 1906.4 1387.01 1910.55C1386.25 1911.88 1385.81 1913.38 1385.75 1914.91C1385.68 1916.45 1385.98 1917.98 1386.62 1919.37C1386.62 1919.37 1389.21 1932.35 1381.43 1937.69C1373.64 1943.03 1381.43 1945.48 1381.43 1945.48C1381.43 1945.48 1375.72 1957.93 1373.64 1963.12C1372.49 1967.18 1372.49 1971.48 1373.64 1975.55L1369.49 2017.58C1367.51 2027.32 1366.49 2037.23 1366.44 2047.17C1366.96 2059.07 1361.77 2086.58 1361.77 2086.58C1361.77 2086.58 1321.83 2086.58 1315.67 2081.91C1309.5 2077.24 1325.99 2031.6 1325.99 2031.6C1325.99 2031.6 1330.66 1951.7 1329.62 1949.63C1328.58 1947.55 1329.62 1931.98 1333.25 1928.87C1336.88 1925.75 1333.25 1919.53 1333.25 1919.53C1333.25 1919.53 1332.21 1907.07 1333.25 1903.96C1333.73 1899.47 1333.67 1894.94 1333.07 1890.46C1333.07 1890.46 1329.62 1865.06 1329.1 1850.53C1328.58 1836 1326.05 1803.3 1326.05 1803.3C1326.05 1803.3 1328.73 1783.12 1329.1 1773.48C1329.56 1769.21 1330.82 1765.07 1332.79 1761.26C1335.04 1756.56 1337.61 1752.02 1340.49 1747.68C1340.49 1747.68 1463.46 1711.38 1468.71 1715.01C1470.05 1715.96 1472.07 1722.43 1474.02 1731.93C1479.24 1758.4 1484.61 1807.7 1476.22 1826.02Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_185",
    d: "M1400.48 1508.98C1420.25 1508.98 1436.29 1492.94 1436.29 1473.17C1436.29 1453.39 1420.25 1437.35 1400.48 1437.35C1380.7 1437.35 1364.67 1453.39 1364.67 1473.17C1364.67 1492.94 1380.7 1508.98 1400.48 1508.98Z",
    fill: "#A1616A"
  }), __jsx("path", {
    className: "Vector_186",
    opacity: "0.1",
    d: "M1473.84 1731.93C1469.72 1734.03 1466.97 1735.5 1466.97 1735.5C1466.97 1735.5 1408.96 1762.97 1392.29 1761.45C1379.5 1760.23 1346.87 1760.9 1332.67 1761.26C1334.92 1756.56 1337.49 1752.02 1340.37 1747.68C1340.37 1747.68 1463.33 1711.38 1468.59 1715.01C1469.78 1715.96 1471.79 1722.43 1473.84 1731.93Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_187",
    d: "M1375.56 1530.31C1375.56 1530.31 1342.35 1535.5 1334.6 1540.69C1326.84 1545.88 1311.24 1555.75 1311.24 1576.99C1311.33 1593.6 1309.41 1610.15 1305.53 1626.3C1303.46 1632.4 1338.23 1682.84 1338.23 1682.84L1325.77 1759.16C1325.77 1759.16 1375.63 1757.6 1392.2 1759.16C1408.78 1760.72 1466.88 1733.21 1466.88 1733.21C1466.88 1733.21 1501.1 1715.08 1508.36 1714.56C1515.63 1714.04 1493.83 1674.59 1493.83 1674.59C1493.83 1674.59 1460.25 1610.79 1465.84 1600.41C1469.93 1592.27 1473.24 1583.75 1475.7 1574.98L1469.59 1522.07C1466.72 1521.22 1463.7 1521.01 1460.74 1521.46C1457.78 1521.91 1454.95 1523 1452.47 1524.67C1444.68 1530.38 1418.21 1527.26 1418.21 1527.26L1375.56 1530.31Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_188",
    opacity: "0.1",
    d: "M1319.27 1622.66L1306.29 1626.3L1302.69 1675.14C1302.69 1675.14 1307.33 1688.12 1302.69 1692.27C1298.05 1696.42 1296.98 1785.14 1296.98 1785.14C1301.76 1788.3 1307.27 1790.2 1312.98 1790.65C1318.69 1791.11 1324.43 1790.1 1329.65 1787.73C1329.65 1787.73 1327.05 1777.87 1334.84 1741.94C1342.62 1706.01 1342.56 1688.18 1342.56 1688.18C1342.56 1688.18 1342.56 1643.58 1346.2 1636.28C1349.83 1628.98 1346.2 1610.85 1346.2 1610.85C1346.2 1610.85 1338.93 1600.99 1339.45 1597.36C1339.97 1593.72 1319.27 1622.66 1319.27 1622.66Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_189",
    opacity: "0.1",
    d: "M1325.5 1790.57C1317.86 1793.14 1309.54 1792.82 1302.11 1789.69C1303.07 1787.04 1304.19 1784.45 1305.44 1781.93L1319.54 1773.35C1319.54 1773.35 1322.41 1780.71 1325.5 1790.57Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_190",
    d: "M1318.51 1622.66L1305.53 1626.3L1301.9 1675.14C1301.9 1675.14 1306.57 1688.12 1301.9 1692.27C1297.23 1696.42 1296.19 1785.14 1296.19 1785.14C1300.98 1788.3 1306.49 1790.2 1312.2 1790.65C1317.92 1791.1 1323.66 1790.1 1328.89 1787.73C1328.89 1787.73 1326.29 1777.87 1334.08 1741.94C1341.86 1706.01 1341.83 1688.18 1341.83 1688.18C1341.83 1688.18 1341.83 1643.58 1345.46 1636.28C1349.1 1628.98 1345.46 1610.85 1345.46 1610.85C1345.46 1610.85 1338.23 1600.99 1338.75 1597.36C1339.27 1593.72 1318.51 1622.66 1318.51 1622.66Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_191",
    opacity: "0.1",
    d: "M1451.31 1630.45C1451.31 1630.45 1444.56 1688.45 1424.84 1699.44C1424.99 1699.44 1468.95 1686.99 1451.31 1630.45Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_192",
    opacity: "0.1",
    d: "M1352.21 1635.64C1352.21 1635.64 1376.63 1647.58 1370.89 1655.85C1365.15 1664.12 1352.21 1635.64 1352.21 1635.64Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_193",
    opacity: "0.1",
    d: "M1352.21 1659.48C1352.21 1659.48 1367.78 1675.57 1364.67 1681.28C1361.55 1686.99 1352.21 1659.48 1352.21 1659.48Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_194",
    opacity: "0.1",
    d: "M1477.77 1526.16C1477.77 1526.16 1483.88 1536.54 1484.43 1543.29C1484.98 1550.04 1477.77 1526.16 1477.77 1526.16Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_195",
    opacity: "0.1",
    d: "M1477.77 1512.15C1477.77 1512.15 1480.83 1509.56 1488.64 1512.15C1496.46 1514.75 1477.77 1512.15 1477.77 1512.15Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_196",
    opacity: "0.1",
    d: "M1447.8 1815.39C1434.95 1817.22 1421.85 1815.55 1409.88 1810.54L1403.32 1827.27L1402.61 1819.51C1403.68 1813.01 1405.67 1806.05 1409.88 1804.25C1420.99 1811.95 1434.29 1815.86 1447.8 1815.39Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_197",
    opacity: "0.1",
    d: "M1341.4 1837.19C1341.4 1837.19 1373.31 1843.88 1382.25 1842.62L1341.4 1837.19Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_198",
    opacity: "0.1",
    d: "M1344.7 1845.55C1344.7 1845.55 1358.32 1844.97 1365.12 1847.69L1344.7 1845.55Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_199",
    opacity: "0.1",
    d: "M1346.26 1851.17C1352.47 1852.52 1358.78 1853.37 1365.12 1853.71L1346.26 1851.17Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_200",
    opacity: "0.1",
    d: "M1345.62 1922.58C1346.23 1922.18 1372.88 1915.98 1376.14 1920.44L1345.62 1922.58Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_201",
    opacity: "0.1",
    d: "M1345.62 1930.76C1345.62 1930.76 1368.79 1928.04 1369.37 1930.76C1369.95 1933.48 1345.62 1930.76 1345.62 1930.76Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_202",
    opacity: "0.1",
    d: "M1345.62 1938.15C1345.62 1938.15 1370.34 1933.08 1373.09 1934.27C1375.84 1935.46 1345.62 1938.15 1345.62 1938.15Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_203",
    opacity: "0.1",
    d: "M1346.65 2112.53L1318.63 2131.79C1318.63 2131.79 1318.78 2129.53 1319.06 2126.21C1322.39 2117.6 1327.25 2109.67 1333.4 2102.79C1339.72 2101.17 1343.72 2102.79 1346.2 2105.66C1346.23 2107.96 1346.39 2110.25 1346.65 2112.53Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_204",
    d: "M1349.37 2129.78C1345.43 2138.79 1343.44 2148.54 1343.54 2158.38C1343.66 2166.48 1341.55 2174.46 1337.43 2181.43C1336.86 2182.42 1336.2 2183.36 1335.48 2184.24C1335.48 2184.24 1316 2184.24 1309.2 2178.44C1308.45 2177.86 1307.83 2177.12 1307.39 2176.27C1303.49 2168.49 1314.97 2138.72 1314.97 2138.72C1318.12 2125.68 1324.41 2113.59 1333.28 2103.52C1355.2 2097.87 1349.37 2129.78 1349.37 2129.78Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_205",
    opacity: "0.1",
    d: "M1337.59 2181.43C1337.01 2182.42 1336.36 2183.36 1335.63 2184.24C1335.63 2184.24 1316.16 2184.24 1309.35 2178.44C1312.71 2167.36 1323.39 2133.81 1328.4 2139.52C1333.4 2145.23 1336.46 2170.53 1337.59 2181.43Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_206",
    d: "M1334.9 2141.59L1333.56 2191.9H1340.09C1340.09 2191.9 1341.13 2147.82 1344.06 2141.65C1346.99 2135.49 1334.9 2141.59 1334.9 2141.59Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_207",
    opacity: "0.1",
    d: "M1416.11 2145.71C1416.11 2145.71 1387.5 2118.7 1390.4 2116.56C1391.65 2114.74 1392.44 2112.64 1392.69 2110.45C1398.19 2109.48 1407.59 2111.8 1415.47 2133.75C1415.65 2140 1416.11 2145.71 1416.11 2145.71Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_208",
    d: "M1420.38 2175.88C1420.15 2175.97 1419.92 2176.04 1419.68 2176.09C1412.12 2176.52 1404.55 2176.52 1397 2176.09C1395.72 2176.05 1394.52 2175.52 1393.63 2174.61C1392.74 2173.7 1392.24 2172.48 1392.23 2171.21C1392.23 2169.34 1392.23 2167.05 1392.23 2164.61C1391.9 2156.95 1390.95 2147.82 1388.23 2145.74C1383.38 2142.05 1379.5 2129.32 1388.23 2113.26C1388.23 2113.26 1404.96 2100.5 1417.02 2138.88C1417.02 2138.88 1418.18 2149.83 1423.43 2153.74C1428.68 2157.65 1422.7 2174.72 1420.38 2175.88Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_209",
    opacity: "0.1",
    d: "M1419.68 2176.09C1412.12 2176.52 1404.55 2176.52 1397 2176.09C1395.72 2176.05 1394.52 2175.52 1393.63 2174.61C1392.74 2173.7 1392.24 2172.48 1392.23 2171.21C1392.23 2169.34 1392.23 2167.05 1392.23 2164.61C1394.34 2155.45 1397.36 2145.74 1401.39 2143.58C1401.12 2143.55 1412.93 2142.2 1419.68 2176.09Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_210",
    d: "M1390.22 2142.42L1393.33 2184.24H1397.33V2138.88L1390.22 2142.42Z",
    fill: "#35323E"
  }), __jsx("path", {
    className: "Vector_211",
    opacity: "0.1",
    d: "M1399.96 1416.11C1388.65 1416.94 1377.7 1420.46 1368.02 1426.36C1365.36 1427.66 1363.21 1429.81 1361.92 1432.47C1361.3 1434.9 1361.13 1437.43 1361.43 1439.92C1361.77 1461.29 1337.83 1477.62 1338.59 1499.05C1338.9 1507.57 1343.17 1515.48 1343.94 1523.97C1345.25 1538.1 1336.88 1551.14 1328.86 1562.86C1337.13 1563.37 1345.27 1560.67 1351.6 1555.32C1360.03 1583.56 1361.08 1613.5 1354.65 1642.26H1366.13C1367.27 1642.19 1368.41 1642.33 1369.49 1642.69C1370.5 1643.16 1371.41 1643.84 1372.15 1644.68C1382.86 1655.33 1390.07 1671.11 1385.94 1685.71L1410.37 1676.55C1416.31 1674.6 1421.99 1671.9 1427.25 1668.52C1432.53 1665.05 1436.26 1659.66 1437.66 1653.5C1438.3 1649.77 1438.12 1645.29 1441.17 1643.12C1442.7 1642.32 1444.32 1641.73 1445.99 1641.35C1452.71 1638.97 1455.67 1631.21 1457.02 1624.25C1458.69 1615.69 1459.22 1606.94 1458.57 1598.24C1457.5 1583.68 1453.2 1568.87 1456.74 1554.68C1458.76 1546.71 1463.21 1539.41 1463.58 1531.02C1464.16 1517.43 1453.54 1505.71 1451.95 1492.18C1450.85 1482.78 1454.24 1473.26 1453.14 1463.82C1452.52 1458.96 1450.74 1454.32 1447.95 1450.3C1445.16 1446.27 1441.44 1442.97 1437.11 1440.68C1434.06 1439.13 1430.82 1438.09 1427.95 1436.41C1421.17 1432.47 1416.87 1425.39 1410.73 1420.53C1404.6 1415.68 1394.34 1413.85 1389.73 1420.17L1399.96 1416.11Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_212",
    d: "M1399.96 1414.55C1388.65 1415.38 1377.7 1418.9 1368.02 1424.81C1365.36 1426.1 1363.21 1428.25 1361.92 1430.91C1361.3 1433.34 1361.13 1435.87 1361.43 1438.36C1361.77 1459.73 1337.83 1476.07 1338.59 1497.5C1338.9 1506.01 1343.17 1513.95 1343.94 1522.41C1345.25 1536.57 1336.88 1549.58 1328.86 1561.3C1337.15 1561.87 1345.35 1559.2 1351.72 1553.85C1360.16 1582.1 1361.21 1612.03 1354.77 1640.8H1366.25C1367.39 1640.72 1368.53 1640.87 1369.61 1641.23C1370.63 1641.69 1371.53 1642.37 1372.27 1643.21C1382.98 1653.86 1390.19 1669.65 1386.07 1684.24L1410.49 1675.08C1416.44 1673.14 1422.11 1670.44 1427.37 1667.05C1432.66 1663.58 1436.39 1658.2 1437.78 1652.03C1438.42 1648.31 1438.24 1643.82 1441.29 1641.65C1442.82 1640.86 1444.44 1640.26 1446.12 1639.88C1452.83 1637.5 1455.79 1629.75 1457.14 1622.79C1458.82 1614.22 1459.34 1605.48 1458.69 1596.78C1457.63 1582.21 1453.32 1567.41 1456.86 1553.21C1458.88 1545.24 1463.33 1537.79 1463.7 1529.55C1464.28 1515.97 1453.66 1504.24 1452.07 1490.72C1450.97 1481.32 1454.36 1471.79 1453.26 1462.36C1452.64 1457.5 1450.86 1452.86 1448.07 1448.83C1445.28 1444.8 1441.57 1441.51 1437.23 1439.22C1434.18 1437.66 1430.94 1436.62 1428.07 1434.94C1421.3 1431 1416.99 1423.92 1410.86 1419.07C1404.72 1414.21 1394.46 1412.38 1389.85 1418.7L1399.96 1414.55Z",
    fill: "#A26565"
  }), __jsx("g", {
    className: "Group_3",
    opacity: "0.1"
  }, __jsx("path", {
    className: "Vector_213",
    opacity: "0.1",
    d: "M1361.49 1433.14C1361.49 1433.63 1361.49 1434.09 1361.49 1434.58C1361.46 1434.12 1361.49 1433.63 1361.49 1433.14Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_214",
    opacity: "0.1",
    d: "M1452.1 1483.03C1453.06 1476.47 1453.52 1469.84 1453.47 1463.21C1452.52 1469.77 1452.06 1476.4 1452.1 1483.03Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_215",
    opacity: "0.1",
    d: "M1344.03 1515.84C1343.33 1508.12 1339.72 1500.85 1338.87 1493.19C1338.7 1494.6 1338.64 1496.02 1338.69 1497.44C1338.99 1505.86 1343.17 1513.71 1344 1522.1C1344.22 1520.02 1344.23 1517.93 1344.03 1515.84Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_216",
    opacity: "0.1",
    d: "M1456.98 1546.53C1455.8 1551.59 1455.37 1556.81 1455.7 1562C1455.84 1558.98 1456.27 1555.97 1456.98 1553.03C1459 1545.06 1463.46 1537.61 1463.82 1529.37C1463.87 1527.9 1463.8 1526.43 1463.61 1524.97C1462.69 1532.48 1458.82 1539.23 1456.98 1546.53Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_217",
    opacity: "0.1",
    d: "M1351.72 1547.23C1346.55 1551.58 1340.14 1554.2 1333.4 1554.74C1331.97 1556.94 1330.35 1559.13 1329.04 1561.24C1337.27 1561.78 1345.39 1559.13 1351.72 1553.85C1356.26 1568.98 1358.69 1584.65 1358.96 1600.44C1359.35 1582.43 1356.91 1564.48 1351.72 1547.23Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_218",
    opacity: "0.1",
    d: "M1457.29 1616.1C1455.92 1623.09 1452.96 1630.85 1446.24 1633.2C1444.56 1633.57 1442.93 1634.18 1441.42 1635C1438.36 1637.17 1438.55 1641.65 1437.9 1645.35C1436.51 1651.51 1432.78 1656.9 1427.49 1660.37C1422.23 1663.75 1416.56 1666.45 1410.61 1668.4L1387.32 1677.13C1387.2 1679.47 1386.82 1681.8 1386.19 1684.06L1410.61 1674.9C1416.56 1672.95 1422.23 1670.26 1427.49 1666.87C1432.78 1663.4 1436.51 1658.02 1437.9 1651.85C1438.55 1648.13 1438.36 1643.64 1441.42 1641.47C1442.94 1640.67 1444.56 1640.08 1446.24 1639.7C1452.96 1637.32 1455.92 1629.56 1457.29 1622.6C1458.69 1615.34 1459.28 1607.95 1459.03 1600.56C1458.85 1605.78 1458.27 1610.97 1457.29 1616.1Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_219",
    opacity: "0.1",
    d: "M1372.39 1636.52C1371.64 1635.69 1370.74 1635.02 1369.73 1634.54C1368.65 1634.18 1367.51 1634.04 1366.38 1634.11H1356.21C1355.81 1636.28 1355.39 1638.45 1354.9 1640.58H1366.38C1367.51 1640.51 1368.65 1640.65 1369.73 1641.01C1370.75 1641.48 1371.65 1642.16 1372.39 1643C1380.5 1650.74 1385.73 1661.03 1387.2 1672.15C1388.51 1659.21 1381.82 1645.9 1372.39 1636.52Z",
    fill: "black"
  })), __jsx("path", {
    className: "Vector_220",
    opacity: "0.1",
    d: "M1315.45 1679.02C1315.45 1679.02 1324.61 1675.11 1326.81 1679.02C1329.01 1682.93 1315.45 1679.02 1315.45 1679.02Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_221",
    opacity: "0.1",
    d: "M1318.66 1685.61C1318.66 1685.61 1327.82 1681.71 1330.02 1685.61C1332.21 1689.52 1318.66 1685.61 1318.66 1685.61Z",
    fill: "black"
  })), __jsx("path", {
    className: "Vector_222",
    d: "M661.222 179.417L662.047 185.829L689.919 189.767C689.919 189.767 692.209 188.057 695.781 185.737C702.406 181.432 713.457 174.96 722.921 173.129C737.483 170.259 783.978 149.408 768.958 148.034C753.938 146.66 755.556 149.774 755.556 149.774C755.556 149.774 739.071 133.594 721.975 148.4C709.061 159.635 680.639 171.694 667.725 176.853L661.222 179.417Z",
    fill: "#EFB7B9"
  }), __jsx("path", {
    className: "Vector_223",
    d: "M772.5 105.507C776.761 103.739 781.254 102.588 785.841 102.088C788.142 101.856 790.467 102.113 792.661 102.845C794.855 103.576 796.87 104.765 798.571 106.332C800.372 108.194 801.624 110.575 803.273 112.437C811.76 121.596 828.245 114.727 838.472 121.81C844.761 126.145 846.715 134.388 848.944 141.715C851.172 149.041 855.233 157.132 862.743 158.688C866.378 159.033 870.044 158.889 873.641 158.261C875.442 157.979 877.285 158.161 878.994 158.792C880.704 159.422 882.225 160.48 883.411 161.863C886.891 167.114 882.098 175.968 887.135 179.723C891.623 183.05 899.805 178.38 902.949 183.05C903.546 184.285 903.764 185.67 903.574 187.029C903.383 188.387 902.794 189.659 901.88 190.683C900.008 192.684 898.293 194.827 896.752 197.094C895.932 198.651 895.55 200.401 895.645 202.157C895.74 203.914 896.31 205.612 897.293 207.072C898.276 208.531 899.636 209.696 901.229 210.444C902.821 211.192 904.587 211.495 906.338 211.32C909.391 211.015 912.901 209.183 915.68 210.771C916.518 211.366 917.207 212.147 917.694 213.052C918.181 213.958 918.453 214.963 918.488 215.991C918.713 219.516 917.569 222.991 915.293 225.693C913.018 228.395 909.788 230.114 906.277 230.492C900.873 230.828 895.897 227.897 891.012 225.424C886.128 222.952 880.51 220.845 875.473 222.89C873.17 224.033 871.059 225.526 869.215 227.317C863.475 232.13 856.989 235.976 850.012 238.704C843.906 241.086 836.732 242.551 830.84 239.559C824.215 236.17 820.796 227.897 813.775 225.394C806.753 222.89 798.724 227.561 792.008 231.5C785.291 235.438 776.285 238.826 770.21 233.911C764.135 228.996 765.692 218.036 761.692 210.648C760.086 207.883 757.911 205.49 755.312 203.627C750.824 200.147 745.726 197.521 741.238 194.163C736.492 190.985 733.063 186.189 731.591 180.669C730.278 173.983 733.484 167.267 737.086 161.497C740.689 155.727 744.932 150.049 746.245 143.363C747.1 138.356 746.245 133.136 747.374 128.099C748.196 125.121 749.74 122.392 751.871 120.155C754.001 117.918 756.652 116.242 759.586 115.277C762.883 114.147 763.494 114.422 765.142 111.522C765.894 110.071 766.935 108.789 768.2 107.755C769.465 106.721 770.928 105.956 772.5 105.507Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("g", {
    className: "Group_4",
    opacity: "0.1"
  }, __jsx("path", {
    className: "Vector_224",
    opacity: "0.1",
    d: "M884.204 163.939C884.904 166.867 885.08 169.895 884.723 172.884C883.984 169.963 883.807 166.927 884.204 163.939Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_225",
    opacity: "0.1",
    d: "M896.843 197.674C896.326 198.696 895.995 199.802 895.866 200.94C895.323 199.618 895.072 198.195 895.13 196.767C895.188 195.339 895.554 193.94 896.202 192.667C897.743 190.401 899.458 188.257 901.331 186.256C901.984 185.377 902.49 184.398 902.827 183.356C902.905 183.441 902.977 183.533 903.041 183.63C903.654 184.862 903.881 186.25 903.69 187.612C903.499 188.975 902.9 190.247 901.972 191.263C900.11 193.273 898.396 195.416 896.843 197.674Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_226",
    opacity: "0.1",
    d: "M740.658 189.797C745.146 193.216 750.244 195.903 754.732 199.261C757.323 201.133 759.496 203.525 761.112 206.283C765.112 213.671 763.097 224.264 769.63 229.546C776.163 234.827 784.742 231.164 791.427 227.134C798.113 223.104 805.837 218.372 813.195 221.028C820.552 223.684 823.635 231.805 830.26 235.194C836.152 238.246 843.296 236.72 849.432 234.339C856.409 231.611 862.895 227.765 868.635 222.951C870.479 221.16 872.59 219.667 874.893 218.525C879.93 216.479 885.609 218.525 890.432 221.059C895.256 223.593 900.262 226.462 905.697 226.126C908.818 225.784 911.729 224.387 913.949 222.167C916.169 219.947 917.566 217.036 917.908 213.915C918.243 214.756 918.459 215.64 918.549 216.54C918.782 220.067 917.64 223.547 915.364 226.25C913.087 228.953 909.852 230.671 906.338 231.042C900.904 231.377 895.927 228.447 891.073 225.974C886.219 223.501 880.541 221.395 875.504 223.44C873.258 224.601 871.2 226.093 869.398 227.867C863.653 232.673 857.169 236.519 850.195 239.254C844.09 241.635 836.885 243.1 831.023 240.109C824.368 236.72 820.979 228.447 813.927 225.943C806.875 223.44 798.877 228.111 792.191 232.049C785.505 235.987 776.468 239.345 770.393 234.461C763.829 229.179 765.844 218.586 761.845 211.198C760.248 208.426 758.071 206.031 755.465 204.176C751.007 200.696 745.909 198.071 741.391 194.712C736.644 191.541 733.223 186.741 731.774 181.219C731.536 180.044 731.434 178.845 731.469 177.647C733.175 182.564 736.391 186.817 740.658 189.797Z",
    fill: "black"
  })), __jsx("path", {
    className: "Vector_227",
    d: "M752.595 342.899L742.49 345.067C742.49 345.067 752.473 361.46 767.829 350.714C783.185 339.968 752.595 342.899 752.595 342.899Z",
    fill: "#4C4981"
  }), __jsx("path", {
    className: "Vector_228",
    opacity: "0.1",
    d: "M752.595 342.899L742.49 345.067C742.49 345.067 752.473 361.46 767.829 350.714C783.185 339.968 752.595 342.899 752.595 342.899Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_229",
    d: "M972.097 495.512C972.097 495.512 986.109 502.748 999.176 511.143C1008.55 517.249 1017.49 523.721 1020.33 528.666C1027.29 540.481 1061.09 553.242 1061.09 553.242L1094.67 578.795C1102.58 581.42 1110.27 591.006 1113.41 595.311C1114.39 596.623 1114.91 597.448 1114.91 597.448L1128.37 595.708L1135.46 586.549C1135.46 586.549 1137.26 566.247 1123.24 566.492C1120.51 566.366 1117.83 565.681 1115.37 564.477C1100.35 557.821 1079.31 537.001 1079.31 537.001C1079.31 537.001 1043.56 492.337 1032.88 490.872C1031.73 490.699 1030.61 490.412 1029.52 490.017C1018.65 486.201 1003.08 472.188 1003.08 472.188L972.097 495.512Z",
    fill: "#EFB7B9"
  }), __jsx("path", {
    className: "Vector_230",
    d: "M833.496 624.557C837.037 645.927 853.309 686.958 858.53 695.506C865.002 706.1 868.421 727.287 868.421 727.287L870.314 742.001C870.657 744.076 871.371 746.071 872.42 747.893C872.986 748.943 873.608 749.963 874.282 750.946L901.209 742.673C901.209 742.673 899.652 736.567 897.301 729.363C894.95 722.158 891.409 713.335 888.143 710.038C881.579 703.566 880.571 680.791 880.571 680.791C880.571 680.791 875.107 636.952 873.428 631.457C871.819 626.192 870.795 620.766 870.375 615.277C870.131 612.224 869.947 608.988 869.917 605.172C869.363 594.229 867.945 583.347 865.673 572.628L834.259 578.337L833.435 613.414C832.562 617.08 832.583 620.902 833.496 624.557Z",
    fill: "#EFB7B9"
  }), __jsx("path", {
    className: "Vector_231",
    opacity: "0.1",
    d: "M1113.38 595.25C1114.36 596.562 1114.88 597.387 1114.88 597.387L1128.34 595.647L1135.43 586.488C1135.43 586.488 1137.23 566.186 1123.21 566.43C1120.48 566.305 1117.8 565.619 1115.34 564.416C1114.21 570.521 1121.02 575.528 1121.02 575.528C1121.02 575.528 1123.82 577.573 1123.15 587.129C1122.76 593.632 1116.99 595.005 1113.38 595.25Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_232",
    d: "M1111.92 596.562C1112.8 599.829 1121.29 604.653 1127.18 607.644C1130.08 609.14 1132.34 610.178 1132.8 610.392C1134.17 611.064 1141.29 603.126 1142.26 596.746C1143.24 590.365 1160.25 570.43 1160.25 570.43C1163.84 562.577 1165.98 554.136 1166.56 545.518C1167.21 536.818 1163.51 536.146 1159.33 538.1C1156.28 539.717 1153.54 541.867 1151.24 544.45C1148.33 547.192 1144.72 549.064 1140.8 549.853C1135.46 551.176 1130.37 553.351 1125.72 556.295C1121.6 558.951 1117.6 562.187 1116.86 565.057C1115.31 571.315 1122.45 576.627 1122.45 576.627C1122.45 576.627 1125.26 578.703 1124.62 588.228C1123.98 597.753 1111.83 596.257 1111.92 596.562Z",
    fill: orange
  }), __jsx("path", {
    className: "Vector_233",
    opacity: "0.1",
    d: "M1127.18 607.644C1130.08 609.14 1132.34 610.178 1132.8 610.392C1134.17 611.064 1141.29 603.126 1142.26 596.746C1143.24 590.365 1160.25 570.43 1160.25 570.43C1163.84 562.577 1165.98 554.136 1166.56 545.518C1167.21 536.818 1163.51 536.146 1159.33 538.1C1158.63 544.999 1156.89 558.401 1153.22 565.393C1149.13 573.696 1131.91 600.409 1127.18 607.644Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_234",
    opacity: "0.1",
    d: "M872.695 747.222C872.626 747.4 872.545 747.574 872.451 747.741C873.017 748.791 873.638 749.81 874.313 750.794L901.239 742.52C901.239 742.52 899.682 736.415 897.332 729.21C886.677 726.157 871.413 744.871 871.413 744.871L872.695 747.222Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_235",
    d: "M870.985 767.279C870.985 767.279 893.424 775.156 903.559 773.934C911.222 773.019 911.558 769.447 911.039 762.12C910.856 759.8 910.612 757.083 910.489 753.938C909.97 740.963 904.75 738.368 904.75 738.368C896.202 715.93 871.565 746.031 871.565 746.031L872.878 748.473C871.083 752.287 870.215 756.472 870.344 760.685C870.347 762.898 870.562 765.107 870.985 767.279Z",
    fill: orange
  }), __jsx("path", {
    className: "Vector_236",
    opacity: "0.1",
    d: "M870.985 767.279C870.985 767.279 893.424 775.156 903.56 773.934C911.222 773.019 911.558 769.447 911.039 762.12C908.517 764.219 905.587 765.773 902.434 766.682C899.281 767.591 895.974 767.836 892.722 767.401C884.95 766.396 877.393 764.138 870.344 760.716C870.349 762.919 870.564 765.117 870.985 767.279Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_237",
    d: "M759.464 222.371L768.195 260.807L769.966 268.714L786.238 270.76L802.967 272.897L821.285 266.272C821.285 266.272 826.383 248.962 822.17 235.957C820.859 231.325 817.85 227.357 813.744 224.844C812.459 224.086 811.279 223.162 810.233 222.097C808.975 220.895 807.942 219.479 807.18 217.914C806.29 215.99 805.752 213.922 805.593 211.808C804.677 201.459 811.241 190.133 811.241 190.133C811.241 190.133 772.591 176.945 775.614 185.462C777.567 190.988 772.133 200.727 768.073 206.649C765.875 209.946 764.074 212.205 764.074 212.205L759.464 222.371Z",
    fill: "#EFB7B9"
  }), __jsx("path", {
    className: "Vector_238",
    opacity: "0.1",
    d: "M794.419 207.626C812.949 207.626 827.97 192.605 827.97 174.075C827.97 155.545 812.949 140.524 794.419 140.524C775.89 140.524 760.868 155.545 760.868 174.075C760.868 192.605 775.89 207.626 794.419 207.626Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_239",
    d: "M794.236 206.374C812.766 206.374 827.787 191.353 827.787 172.823C827.787 154.294 812.766 139.272 794.236 139.272C775.706 139.272 760.685 154.294 760.685 172.823C760.685 191.353 775.706 206.374 794.236 206.374Z",
    fill: "#EFB7B9"
  }), __jsx("path", {
    className: "Vector_240",
    d: "M761.967 349.921C763.555 357.309 770.851 368.94 770.851 368.94L817.682 380.449L851.264 345.524V345.311C850.226 342.044 837.434 300.739 846.685 290.542C855.935 280.346 852.79 250.122 852.79 250.122C852.79 250.122 836.061 230.858 832.702 226.218C829.344 221.578 807.608 217.914 807.608 217.914C808.676 219.38 809.684 220.784 810.661 222.097C812.997 225.595 814.798 229.423 816.003 233.453C817.378 237.439 817.214 241.794 815.545 245.665C815.056 246.637 814.678 247.661 814.416 248.718C810.752 264.745 794.084 262.517 787.428 260.929C785.719 260.502 784.681 260.136 784.681 260.136L768.714 260.655L758.701 260.99C758.701 260.99 763.25 339.938 762.181 346.227C761.859 347.431 761.786 348.688 761.967 349.921Z",
    fill: orange
  }), __jsx("path", {
    className: "Vector_241",
    d: "M758.487 265.081L787.55 261.265H787.001C786.073 261.057 785.156 260.802 784.253 260.502L768.287 261.021L758.273 261.357C758.273 261.357 758.365 262.639 758.487 265.081Z",
    fill: "#925978"
  }), __jsx("path", {
    className: "Vector_242",
    d: "M791.061 374.008L803.669 377.091L823.483 374.496L828.672 369.093L791.061 374.008Z",
    fill: "#925978"
  }), __jsx("path", {
    className: "Vector_243",
    d: "M812.004 379.137L817.713 380.541L820.063 378.099L812.004 379.137Z",
    fill: "#925978"
  }), __jsx("path", {
    className: "Vector_244",
    opacity: "0.1",
    d: "M761.967 349.921C769.447 350.684 776.346 351.05 776.346 351.05L814.935 349.615V309.287C810.341 305.053 805.094 301.589 799.395 299.029C792.679 296.709 784.742 289.596 786.238 270.76C786.238 269.691 786.421 268.561 786.573 267.401C786.831 265.305 786.943 263.194 786.909 261.082C786.93 256.428 785.992 251.82 784.154 247.544C782.315 243.269 779.616 239.418 776.224 236.232L775.644 235.743L769.355 206.497C768.934 206.51 768.515 206.561 768.103 206.649C765.905 209.946 764.104 212.205 764.104 212.205L759.464 222.371L768.195 260.807L758.182 261.143C758.182 261.143 762.73 340.09 761.662 346.379C761.531 347.568 761.635 348.771 761.967 349.921Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_245",
    d: "M775.095 351.203L813.683 349.768V309.47C809.134 305.2 803.915 301.704 798.235 299.121C791.122 296.648 782.666 288.833 785.413 267.462C786.368 261.817 785.924 256.023 784.12 250.589C782.315 245.155 779.206 240.246 775.064 236.293L774.484 235.804L768.195 206.558C766.222 206.732 764.31 207.332 762.591 208.318C760.873 209.304 759.389 210.651 758.243 212.266C757.547 213.399 756.772 214.48 755.923 215.503C755.136 216.769 753.914 217.705 752.485 218.132C751.057 218.559 749.521 218.449 748.168 217.823C744.108 216.021 726.615 208.664 722.677 215.869C718.739 223.074 718.006 266.302 718.006 266.302C723.801 271.062 727.805 277.65 729.363 284.986C732.049 297.197 736.537 297.625 736.537 297.625L741.36 333.038C741.36 333.038 745.756 340.731 742.49 344.975",
    fill: "#444053"
  }), __jsx("path", {
    className: "Vector_246",
    d: "M755.923 215.594L762.486 235.285L775.064 236.384L774.484 235.896L768.195 206.649C766.222 206.823 764.31 207.424 762.591 208.41C760.873 209.395 759.389 210.742 758.243 212.358C757.547 213.49 756.772 214.572 755.923 215.594Z",
    fill: "#444053"
  }), __jsx("path", {
    className: "Vector_247",
    opacity: "0.1",
    d: "M661.222 179.417L662.047 185.829L689.919 189.767C689.919 189.767 692.209 188.057 695.781 185.737C692.728 185.065 678.99 182.043 671.724 179.631C669.068 178.807 667.267 178.105 667.206 177.616C667.145 177.128 667.389 177.067 667.817 176.7L661.222 179.417Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_248",
    d: "M628.526 220.998C628.526 220.998 660.093 244.963 679.662 248.84C679.662 248.84 707.138 256.991 718.006 266.394L729.882 220.937L722.829 215.96C722.829 215.96 714.19 221.303 706.741 219.532C699.292 217.762 691.11 216.724 691.11 216.724C684.602 214.329 677.902 212.491 671.083 211.228C665.771 210.801 668.03 203.902 673.22 200.238C673.932 199.767 674.676 199.349 675.449 198.986C676.421 200.376 677.877 201.353 679.531 201.726C681.186 202.098 682.92 201.84 684.394 201.001C686.398 199.717 688.156 198.083 689.584 196.178C691.783 193.386 693.743 190.414 695.445 187.294C695.445 187.294 678.99 183.783 670.778 181.188C668.122 180.364 666.321 179.662 666.26 179.204C666.015 177.311 680.944 171.358 680.944 171.358C680.944 171.358 668.152 165.252 662.963 169.648C662.963 169.648 666.29 172.182 663.604 174.655C660.917 177.128 628.129 202.284 628.129 202.284C628.129 202.284 611.857 210.252 628.526 220.998Z",
    fill: "#444053"
  }), __jsx("path", {
    className: "Vector_249",
    opacity: "0.1",
    d: "M655.666 197.735L673.129 200.238C673.84 199.767 674.585 199.349 675.357 198.986C676.329 200.376 677.785 201.353 679.44 201.726C681.094 202.098 682.828 201.84 684.302 201.001C686.307 199.717 688.064 198.083 689.492 196.178C691.255 193.805 692.856 191.317 694.285 188.729C694.285 188.729 677.8 185.187 669.618 182.623L655.666 197.735Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_250",
    d: "M656.674 196.33L675.296 198.986C676.268 200.376 677.724 201.353 679.379 201.725C681.033 202.098 682.767 201.84 684.241 201.001C689.584 197.948 695.292 187.263 695.292 187.263C695.292 187.263 678.837 183.753 670.625 181.158L656.674 196.33Z",
    fill: "#444053"
  }), __jsx("path", {
    className: "Vector_251",
    opacity: "0.1",
    d: "M1003.08 472.066L972.097 495.512C972.097 495.512 986.109 502.748 999.176 511.143C1010.59 503.419 1021.37 496.306 1029.52 489.773C1018.65 486.079 1003.08 472.066 1003.08 472.066Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_252",
    opacity: "0.1",
    d: "M833.496 624.557C841.244 623.589 848.862 621.767 856.209 619.123C856.209 619.123 861.918 617.872 870.405 615.032C870.161 611.979 869.978 608.743 869.947 604.927C869.394 593.984 867.975 583.103 865.704 572.384L834.29 578.093L833.466 613.17C832.542 616.911 832.553 620.821 833.496 624.557Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_253",
    d: "M777.537 482.08C783.887 491.452 801.136 531.139 801.136 531.139C805.014 538.196 809.401 544.961 814.263 551.38C821.132 560.05 825.894 579.466 831.115 595.005C836.335 610.545 829.558 607.614 830.321 615.796C831.084 623.977 860.545 613.445 860.545 613.445C860.545 613.445 920.869 600.165 939.278 563.378C957.687 526.591 1031.29 493.162 1046.13 472.433C1060.97 451.703 1041.89 460.221 1042.65 449.047C1043.41 437.874 1034.86 428.41 1034.86 428.41C1034.86 428.41 1007.11 420.595 1002.59 415.13C998.077 409.665 975.913 396.019 975.913 396.019C975.913 396.019 955.031 386.86 952.375 383.808C949.719 380.755 924.899 370.863 917.359 368.971C909.818 367.078 902.338 356.301 902.338 356.301C902.338 356.301 897.637 356.912 890.707 350.195C883.777 343.479 854.744 337.709 854.744 337.709C805.074 374.099 770.79 368.909 770.79 368.909L769.996 375.809C743.65 410.154 771.248 472.738 777.537 482.08Z",
    fill: orange
  }), __jsx("path", {
    className: "Vector_254",
    opacity: "0.1",
    d: "M770.057 375.84C770.057 375.84 812.798 389.974 854.805 337.74C805.135 374.13 770.851 368.94 770.851 368.94L770.057 375.84Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_255",
    opacity: "0.1",
    d: "M843.876 400.263C843.876 400.263 901.484 483.392 904.933 486.445C908.383 489.498 846.898 399.225 843.876 400.263Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_256",
    opacity: "0.1",
    d: "M817.255 393.76C817.255 393.76 857.156 455.703 856.332 463.976C856.332 464.159 817.713 404.628 817.255 393.76Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_257",
    opacity: "0.1",
    d: "M794.022 410.887C794.022 410.887 801.38 445.537 790.298 465.136L794.022 410.887Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_258",
    opacity: "0.1",
    d: "M778.697 412.901C778.697 412.901 778.209 442.85 774.85 449.017L778.697 412.901Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_259",
    opacity: "0.1",
    d: "M876.389 386.158L929.356 406.918L909.971 409.452L876.389 386.158Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_260",
    opacity: "0.1",
    d: "M772.103 154.201C774.759 155.941 776.957 158.78 780.101 159.177C782.376 159.245 784.626 158.685 786.604 157.559C791.885 155.269 797.869 153.499 803.334 155.3C811.119 157.895 815.393 166.84 823.147 169.496C825.057 170.14 827.085 170.36 829.089 170.138C831.093 169.917 833.025 169.26 834.748 168.213C837.805 166.324 839.998 163.309 840.854 159.818C841.363 156.799 841.066 153.699 839.994 150.832C838.922 147.964 837.112 145.43 834.748 143.485C829.98 139.647 824.32 137.074 818.293 136.006C802.723 132.556 786.543 133.716 770.637 134.907C769.329 134.877 768.039 135.216 766.913 135.883C764.501 137.685 760.38 146.752 761.235 149.805C762.517 153.895 771.675 150.781 772.103 154.201Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_261",
    d: "M771.92 152.949C774.576 154.689 776.774 157.528 779.949 157.925C782.223 157.988 784.472 157.429 786.451 156.307C791.733 154.018 797.716 152.247 803.151 154.048C810.935 156.643 815.209 165.588 822.994 168.244C824.904 168.889 826.933 169.108 828.937 168.887C830.941 168.665 832.872 168.008 834.595 166.962C836.115 166.032 837.436 164.812 838.484 163.372C839.531 161.931 840.285 160.298 840.701 158.566C841.213 155.547 840.918 152.447 839.846 149.578C838.774 146.71 836.962 144.176 834.595 142.233C829.819 138.389 824.148 135.816 818.11 134.754C802.54 131.304 786.36 132.464 770.485 133.655C769.176 133.625 767.886 133.964 766.76 134.632C764.349 136.433 760.197 145.5 761.082 148.553C762.242 152.583 771.492 149.53 771.92 152.949Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_262",
    d: "M977.073 177.647L982.141 198.132L988.735 194.163L1024.45 172.579C1024.45 172.579 1051.5 171.602 1053.61 149.835C1055.71 128.068 1023.54 149.621 1021.83 151.3C1020.12 152.98 1016.21 155.849 1016.21 155.849L982.934 174.38L977.073 177.647Z",
    fill: "#EFB7B9"
  }), __jsx("path", {
    className: "Vector_263",
    opacity: "0.1",
    d: "M977.073 177.647L982.141 198.132L988.735 194.163C987.269 185.004 985.01 176.365 982.934 174.38L977.073 177.647Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_264",
    opacity: "0.1",
    d: "M800.708 311.607L807.974 354.347L851.081 345.189C850.043 341.922 837.251 300.617 846.501 290.42C855.752 280.223 852.607 250 852.607 250C852.607 250 835.877 230.736 832.519 226.096C829.161 221.456 807.425 217.792 807.425 217.792C806.534 215.868 805.996 213.8 805.837 211.686C805.132 213.142 804.58 214.666 804.188 216.235C804.188 224.051 807.241 229.393 815.698 233.331L818.018 234.339C819.331 234.858 820.766 235.346 822.292 235.835L822.994 236.048C836.885 240.17 839.877 248.474 839.877 248.474C844.753 254.869 847.012 262.881 846.196 270.882C844.639 284.253 800.708 311.607 800.708 311.607Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_265",
    d: "M803.211 311.332L810.477 354.073L858.988 343.937C858.988 343.937 857.522 327.787 854.133 321.224C850.745 314.66 851.416 289.138 851.416 289.138C872.054 266.913 861.216 248.809 861.216 248.809C861.216 248.809 921.846 239.01 922.884 237.178C923.922 235.346 944.254 224.417 944.254 224.417C944.254 224.417 966.235 218.8 969.196 215.655C970.307 214.471 971.511 213.378 972.799 212.389C973.177 212.106 973.575 211.851 973.989 211.625L975.607 225.638H976.218C979.762 225.262 983.138 223.933 985.987 221.791C990.994 217.945 984.674 175.998 979.881 174.441C978.959 174.211 977.995 174.211 977.073 174.441C973.246 175.619 969.688 177.538 966.601 180.089L965.777 180.761L965.472 181.005C965.472 181.005 937.996 191.782 932.531 196.727C927.067 201.673 884.357 207.992 884.357 207.992C884.357 207.992 865.215 212.511 862.743 209.763C860.27 207.015 831.054 202.558 828.611 206.71C826.169 210.862 819.453 210.252 819.453 210.252C814.629 204.726 811.302 206.863 809.256 210.038C808.094 211.93 807.229 213.989 806.692 216.144C806.692 224.661 810.416 230.217 820.521 234.247C822.017 234.858 823.574 235.407 825.497 235.957C839.388 240.078 842.38 248.382 842.38 248.382C847.253 254.791 849.511 262.811 848.699 270.821C847.142 283.856 803.211 311.332 803.211 311.332Z",
    fill: "#444053"
  }), __jsx("path", {
    className: "Vector_266",
    opacity: "0.1",
    d: "M977.012 174.319C977.527 174.226 978.054 174.226 978.569 174.319C983.423 175.815 989.742 217.823 984.674 221.669C982.174 223.568 979.252 224.835 976.157 225.363H975.424L973.806 211.351C973.392 211.576 972.994 211.831 972.616 212.114V211.534C973.882 206.164 973.92 200.577 972.725 195.19C971.531 189.803 969.135 184.756 965.716 180.425L977.012 174.319Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_267",
    d: "M973.867 211.564L975.485 225.577C979.291 225.322 982.941 223.965 985.987 221.669C990.994 217.823 984.674 175.876 979.881 174.319C976.035 173.129 969.288 177.922 966.601 179.967C970.172 184.314 972.687 189.429 973.948 194.912C975.208 200.394 975.181 206.094 973.867 211.564Z",
    fill: "#444053"
  }), __jsx("path", {
    className: "Vector_268",
    d: "M820.521 234.125L827.482 227.561L809.165 209.885C808.002 211.777 807.137 213.836 806.6 215.991C806.6 224.539 810.294 230.095 820.521 234.125Z",
    fill: "#444053"
  }), __jsx("path", {
    className: "Vector_269",
    opacity: "0.1",
    d: "M771.675 150.446C774.331 152.186 776.529 155.025 779.674 155.422C781.949 155.49 784.199 154.93 786.177 153.804C791.458 151.514 797.442 149.744 802.906 151.545C810.691 154.14 815.118 163.085 822.719 165.741C824.63 166.385 826.658 166.605 828.662 166.383C830.666 166.162 832.597 165.505 834.32 164.458C837.378 162.569 839.57 159.554 840.426 156.063C840.705 154.842 840.818 153.589 840.762 152.338C841.202 154.35 841.202 156.433 840.762 158.444C840.179 160.921 838.906 163.182 837.091 164.965C835.275 166.748 832.991 167.981 830.504 168.519C828.041 169.062 825.477 168.925 823.086 168.122C815.301 165.466 811.027 156.521 803.273 153.926C797.808 152.125 791.824 153.926 786.543 156.185C784.565 157.311 782.315 157.871 780.04 157.803C776.987 157.406 774.667 154.567 772.011 152.827C771.584 149.408 762.364 152.522 761.204 148.431C761.077 147.817 761.077 147.183 761.204 146.569C762.944 149.805 771.187 147.24 771.675 150.446Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_270",
    opacity: "0.1",
    d: "M800.281 246.947C800.281 246.947 796.404 257.815 801.319 261.448C801.319 261.448 795.946 247.1 792.801 247.405",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_271",
    d: "M1040.33 141.287C1040.33 141.287 1015.39 162.84 1033.4 166.29C1051.41 169.74 1040.33 141.287 1040.33 141.287Z",
    fill: "#EFB7B9"
  }), __jsx("path", {
    className: "Vector_272",
    d: "M943.125 159.238L947.918 285.474L1086.76 159.238H943.125Z",
    fill: "white"
  }), __jsx("path", {
    className: "Vector_273",
    opacity: "0.03",
    d: "M943.125 159.238L947.918 285.474L1086.76 159.238H943.125Z",
    fill: "black"
  }), __jsx("path", {
    className: "Vector_274",
    d: "M2587.22 2132.83C2644.21 2132.83 2690.41 2123.95 2690.41 2112.99C2690.41 2102.03 2644.21 2093.14 2587.22 2093.14C2530.23 2093.14 2484.03 2102.03 2484.03 2112.99C2484.03 2123.95 2530.23 2132.83 2587.22 2132.83Z",
    fill: blue
  }), __jsx("path", {
    className: "Vector_275",
    d: "M2585.48 2120.28C2592.12 2120.28 2597.51 2113.24 2597.51 2104.56C2597.51 2095.88 2592.12 2088.84 2585.48 2088.84C2578.84 2088.84 2573.45 2095.88 2573.45 2104.56C2573.45 2113.24 2578.84 2120.28 2585.48 2120.28Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_276",
    d: "M2585.48 2101.05C2592.12 2101.05 2597.51 2094.01 2597.51 2085.33C2597.51 2076.64 2592.12 2069.61 2585.48 2069.61C2578.84 2069.61 2573.45 2076.64 2573.45 2085.33C2573.45 2094.01 2578.84 2101.05 2585.48 2101.05Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_277",
    d: "M2585.48 2081.82C2592.12 2081.82 2597.51 2074.78 2597.51 2066.09C2597.51 2057.41 2592.12 2050.37 2585.48 2050.37C2578.84 2050.37 2573.45 2057.41 2573.45 2066.09C2573.45 2074.78 2578.84 2081.82 2585.48 2081.82Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_278",
    d: "M2585.48 2062.61C2592.12 2062.61 2597.51 2055.58 2597.51 2046.89C2597.51 2038.21 2592.12 2031.17 2585.48 2031.17C2578.84 2031.17 2573.45 2038.21 2573.45 2046.89C2573.45 2055.58 2578.84 2062.61 2585.48 2062.61Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_279",
    d: "M2585.48 2043.38C2592.12 2043.38 2597.51 2036.34 2597.51 2027.66C2597.51 2018.98 2592.12 2011.94 2585.48 2011.94C2578.84 2011.94 2573.45 2018.98 2573.45 2027.66C2573.45 2036.34 2578.84 2043.38 2585.48 2043.38Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_280",
    d: "M2585.48 2024.15C2592.12 2024.15 2597.51 2017.11 2597.51 2008.43C2597.51 1999.74 2592.12 1992.7 2585.48 1992.7C2578.84 1992.7 2573.45 1999.74 2573.45 2008.43C2573.45 2017.11 2578.84 2024.15 2585.48 2024.15Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_281",
    d: "M2585.48 2004.95C2592.12 2004.95 2597.51 1997.91 2597.51 1989.22C2597.51 1980.54 2592.12 1973.5 2585.48 1973.5C2578.84 1973.5 2573.45 1980.54 2573.45 1989.22C2573.45 1997.91 2578.84 2004.95 2585.48 2004.95Z",
    fill: "#3F3D56"
  }), __jsx("path", {
    className: "Vector_282",
    d: "M2630.48 1857.67C2632.1 1855.57 2633.59 1853.37 2634.94 1851.08L2603.4 1845.89L2637.53 1846.13C2640.82 1839.01 2642.61 1831.3 2642.8 1823.46C2642.98 1815.62 2641.57 1807.83 2638.63 1800.56L2592.84 1824.31L2635.09 1793.26C2631.12 1786.45 2625.79 1780.53 2619.43 1775.87C2613.07 1771.21 2605.83 1767.9 2598.14 1766.16C2590.46 1764.41 2582.49 1764.26 2574.75 1765.72C2567 1767.18 2559.64 1770.21 2553.11 1774.63C2546.59 1779.06 2541.04 1784.77 2536.82 1791.42C2532.59 1798.08 2529.78 1805.53 2528.55 1813.31C2527.32 1821.1 2527.71 1829.05 2529.68 1836.69C2531.65 1844.32 2535.17 1851.46 2540.02 1857.67C2537.48 1860.93 2535.28 1864.44 2533.46 1868.15L2574.46 1889.52L2530.74 1874.83C2527.67 1883.9 2526.89 1893.58 2528.49 1903.02C2530.09 1912.46 2534.01 1921.35 2539.9 1928.9C2533.23 1937.39 2529.08 1947.58 2527.93 1958.32C2526.77 1969.06 2528.67 1979.9 2533.39 1989.61C2538.1 1999.32 2545.46 2007.51 2554.61 2013.24C2563.77 2018.97 2574.35 2022.01 2585.14 2022.01C2595.94 2022.01 2606.52 2018.97 2615.68 2013.24C2624.83 2007.51 2632.18 1999.32 2636.9 1989.61C2641.62 1979.9 2643.51 1969.06 2642.36 1958.32C2641.21 1947.58 2637.06 1937.39 2630.39 1928.9C2638.36 1918.75 2642.69 1906.22 2642.69 1893.32C2642.69 1880.41 2638.36 1867.88 2630.39 1857.74L2630.48 1857.67Z",
    fill: blue
  }), __jsx("path", {
    className: "Vector_283",
    opacity: "0.1",
    d: "M2527.69 1893.24C2527.65 1906.14 2531.95 1918.68 2539.9 1928.84C2533.23 1937.33 2529.08 1947.52 2527.93 1958.26C2526.77 1968.99 2528.67 1979.84 2533.39 1989.55C2538.1 1999.26 2545.46 2007.45 2554.61 2013.18C2563.77 2018.91 2574.35 2021.95 2585.14 2021.95C2595.94 2021.95 2606.52 2018.91 2615.68 2013.18C2624.83 2007.45 2632.18 1999.26 2636.9 1989.55C2641.62 1979.84 2643.51 1968.99 2642.36 1958.26C2641.21 1947.52 2637.06 1937.33 2630.39 1928.84C2638.17 1919.04 2527.69 1886.77 2527.69 1893.24Z",
    fill: "black"
  }), __jsx("g", {
    className: "hero-logo"
  }, __jsx("path", {
    className: "Vector_284",
    d: "M1111.25 458.1L2027.43 458.632",
    stroke: orange,
    strokeOpacity: "0.92",
    strokeWidth: "3.4028"
  }), __jsx("path", {
    className: "Vector_285",
    d: "M1349.66 468.169C1328.59 491.023 1300.03 507.127 1268.17 514.117C1236.3 521.107 1202.82 518.614 1172.62 507.005C1142.43 495.396 1117.12 475.282 1100.41 449.616C1083.7 423.95 1076.47 394.084 1079.78 364.403C1083.1 334.722 1096.78 306.789 1118.81 284.705C1140.85 262.621 1170.09 247.55 1202.23 241.704C1234.37 235.859 1267.72 239.546 1297.39 252.225C1327.06 264.904 1351.48 285.907 1367.07 312.15L1358.98 316.132C1344.33 291.463 1321.37 271.72 1293.48 259.801C1265.6 247.883 1234.24 244.417 1204.03 249.912C1173.82 255.407 1146.34 269.574 1125.62 290.333C1104.91 311.091 1092.05 337.348 1088.93 365.249C1085.82 393.149 1092.62 421.223 1108.32 445.349C1124.03 469.475 1147.82 488.383 1176.2 499.295C1204.58 510.207 1236.06 512.55 1266.01 505.98C1295.96 499.409 1322.81 484.272 1342.62 462.789L1349.66 468.169Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("g", {
    className: "Group_5"
  }, __jsx("path", {
    className: "Vector_286",
    d: "M1187.98 403.811L1189.24 409.816C1185.96 409.816 1180 409.949 1171.34 410.216C1162.77 410.572 1156.55 410.75 1152.69 410.75C1146.47 410.75 1142.23 410.439 1139.96 409.816C1140.8 400.03 1141.3 383.66 1141.47 360.706C1141.64 337.753 1142.19 321.739 1143.11 312.664C1145.97 312.932 1153.53 313.154 1165.8 313.332C1178.15 313.509 1186.21 313.91 1190 314.533L1191.38 320.538C1187.6 321.25 1180.04 322.095 1168.7 323.073C1157.35 324.052 1151.39 324.586 1150.8 324.675C1150.88 326.721 1151.05 330.902 1151.3 337.219C1151.64 343.536 1151.85 348.74 1151.93 352.833C1154.79 353.189 1160 353.722 1167.56 354.434C1175.12 355.057 1179.91 355.457 1181.93 355.636L1183.19 361.774C1165.46 363.465 1155.08 364.354 1152.06 364.443C1152.06 368.358 1151.97 374.318 1151.81 382.326C1151.72 390.243 1151.68 396.071 1151.68 399.807C1170.92 401.676 1183.02 403.01 1187.98 403.811Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_287",
    d: "M1199.2 413.152L1193.78 410.083C1195.96 404.3 1201.67 393.091 1210.92 376.454C1206.04 369.425 1200.5 357.727 1194.28 341.357H1199.83C1202.93 348.296 1208.19 357.326 1215.58 368.447C1216.84 366.578 1218.48 363.687 1220.5 359.772C1222.6 355.858 1224.61 352.477 1226.55 349.63C1228.56 346.783 1230.83 344.292 1233.35 342.157C1236.38 343.937 1237.89 346.027 1237.89 348.43C1237.89 349.764 1237.59 351.054 1237.01 352.299C1234.74 355.235 1231.84 359.862 1228.31 366.178C1224.78 372.495 1222.6 376.32 1221.76 377.655C1230.66 390.822 1236.67 400.741 1239.78 407.414C1239.78 410.795 1238.35 412.486 1235.49 412.486C1232.64 412.486 1230.45 411.017 1228.94 408.081C1227.43 402.743 1223.44 395.181 1216.97 385.395C1215.54 387.886 1212.6 392.423 1208.14 399.007C1203.77 405.502 1200.79 410.217 1199.2 413.152Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_288",
    d: "M1246.33 339.622L1253.39 340.956C1253.39 342.824 1253.43 344.203 1253.52 345.093C1258.14 341.979 1262.8 340.422 1267.51 340.422C1275.15 340.422 1281.12 343.892 1285.4 350.831C1289.69 357.771 1291.83 365.644 1291.83 374.452C1291.83 378.9 1291.5 383.171 1290.82 387.263C1290.23 391.267 1289.14 395.404 1287.55 399.674C1285.95 403.855 1283.47 407.236 1280.11 409.816C1276.83 412.307 1272.84 413.553 1268.14 413.553C1263.68 413.553 1259.4 412.307 1255.28 409.816C1255.62 425.386 1255.91 436.951 1256.16 444.514C1255.41 447.271 1253.94 448.65 1251.75 448.65C1250.24 448.65 1248.77 447.983 1247.34 446.649C1246 445.403 1245.16 443.846 1244.82 441.977L1246.33 339.622ZM1254.53 353.767L1254.9 396.872C1255.91 399.007 1257.47 400.741 1259.57 402.076C1261.67 403.322 1263.98 403.945 1266.5 403.945C1269.78 403.945 1272.55 402.832 1274.82 400.608C1277.17 398.384 1278.81 395.448 1279.73 391.8C1280.74 388.064 1281.41 384.594 1281.75 381.391C1282.17 378.188 1282.38 374.808 1282.38 371.249C1282.38 356.125 1277.55 348.563 1267.88 348.563C1264.78 348.563 1261.88 349.052 1259.19 350.031C1256.58 350.92 1255.03 352.166 1254.53 353.767Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_289",
    d: "M1343.63 358.972L1338.09 358.571C1336.32 353.589 1333.34 351.098 1329.14 351.098C1327.29 351.098 1325.32 351.543 1323.21 352.433C1321.2 353.322 1319.52 354.257 1318.17 355.235C1316.83 356.125 1315.06 357.459 1312.88 359.239C1312.88 360.484 1312.84 364.532 1312.75 371.383C1312.75 378.233 1312.8 385.84 1312.88 394.202C1313.05 402.566 1313.22 407.058 1313.38 407.681C1312.63 410.35 1311.16 411.684 1308.97 411.684C1307.46 411.684 1305.99 411.062 1304.56 409.816C1303.22 408.482 1302.38 406.88 1302.04 405.012C1303.64 376.454 1305.07 354.879 1306.33 340.289L1312 341.623L1312.38 350.565C1318.26 345.404 1323.3 342.824 1327.5 342.824C1332.12 342.824 1335.99 343.936 1339.1 346.16C1342.29 348.384 1343.88 351.632 1343.88 355.902C1343.88 357.237 1343.8 358.26 1343.63 358.972Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_290",
    d: "M1399.72 396.872L1400.98 402.743C1397.28 404.167 1391.78 405.769 1384.47 407.548C1377.24 409.238 1371.86 410.083 1368.34 410.083C1364.72 410.083 1361.57 408.838 1358.88 406.346C1356.19 403.767 1354.18 400.519 1352.83 396.605C1351.49 392.601 1350.48 388.687 1349.81 384.861C1349.22 380.947 1348.93 377.121 1348.93 373.385C1348.93 351.143 1358.42 340.022 1377.41 340.022C1381.95 340.022 1385.94 341.579 1389.38 344.693C1392.83 347.718 1394.55 351.677 1394.55 356.569C1394.55 359.239 1393.84 361.596 1392.41 363.642C1391.06 365.689 1389.38 367.335 1387.37 368.58C1385.43 369.737 1382.91 370.804 1379.8 371.783C1376.78 372.762 1374.09 373.473 1371.74 373.918C1369.39 374.363 1366.57 374.852 1363.29 375.386C1360.02 375.92 1357.75 376.32 1356.49 376.587C1356.57 379.167 1356.7 381.436 1356.87 383.393C1357.12 385.35 1357.54 387.485 1358.13 389.799C1358.8 392.023 1359.64 393.891 1360.65 395.404C1361.74 396.827 1363.21 398.028 1365.06 399.007C1366.91 399.985 1369.09 400.475 1371.61 400.475C1374.64 400.475 1378.33 400.208 1382.7 399.674C1387.07 399.051 1390.94 398.429 1394.3 397.806C1397.74 397.183 1399.55 396.872 1399.72 396.872ZM1356.99 368.313C1368.42 364.844 1377.79 361.196 1385.1 357.371C1384.51 354.434 1383.71 352.299 1382.7 350.965C1381.7 349.63 1380.18 348.963 1378.17 348.963C1373.04 348.963 1368.38 350.831 1364.18 354.568C1360.06 358.304 1357.66 362.886 1356.99 368.313Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_291",
    d: "M1444.84 345.493L1443.58 350.831C1435.43 347.273 1429.08 345.493 1424.55 345.493C1420.51 345.493 1417.66 346.161 1415.98 347.495C1414.38 348.74 1413.58 351.454 1413.58 355.636C1413.58 359.016 1414.72 361.819 1416.98 364.043C1419.34 366.267 1422.15 368.047 1425.43 369.381C1428.71 370.627 1431.98 372.006 1435.26 373.518C1438.62 374.941 1441.43 377.077 1443.7 379.924C1446.06 382.77 1447.23 386.285 1447.23 390.466C1447.23 396.16 1445.26 401.142 1441.31 405.413C1437.36 409.683 1432.23 411.863 1425.93 411.952C1421.31 411.952 1416.98 410.928 1412.95 408.882C1408.92 406.836 1405.73 404.256 1403.37 401.142L1407.03 397.138C1408.04 397.584 1409.51 398.295 1411.44 399.274C1413.46 400.252 1414.88 400.92 1415.72 401.276C1416.56 401.543 1417.78 401.854 1419.38 402.21C1421.06 402.566 1422.82 402.743 1424.67 402.743C1428.62 402.743 1431.86 401.81 1434.38 399.941C1436.9 398.073 1438.16 395.448 1438.16 392.067C1438.16 389.843 1437.57 387.975 1436.39 386.462C1435.22 384.861 1433.66 383.571 1431.73 382.593C1429.8 381.614 1427.66 380.68 1425.3 379.79C1423.03 378.9 1420.72 377.922 1418.37 376.854C1416.1 375.698 1414 374.363 1412.07 372.851C1410.14 371.249 1408.58 369.114 1407.41 366.445C1406.23 363.776 1405.64 360.618 1405.64 356.97C1405.64 351.632 1406.99 347.184 1409.67 343.625C1412.45 339.978 1416.31 338.154 1421.27 338.154C1423.2 338.154 1425.39 338.465 1427.82 339.088C1430.26 339.711 1432.19 340.289 1433.62 340.823C1435.05 341.357 1437.15 342.246 1439.92 343.492C1442.78 344.648 1444.42 345.316 1444.84 345.493Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_292",
    d: "M1493.74 345.493L1492.48 350.831C1484.33 347.273 1477.99 345.493 1473.45 345.493C1469.42 345.493 1466.56 346.161 1464.88 347.495C1463.28 348.74 1462.48 351.454 1462.48 355.636C1462.48 359.016 1463.62 361.819 1465.89 364.043C1468.24 366.267 1471.05 368.047 1474.33 369.381C1477.61 370.627 1480.88 372.006 1484.16 373.518C1487.52 374.941 1490.34 377.077 1492.61 379.924C1494.96 382.77 1496.13 386.285 1496.13 390.466C1496.13 396.16 1494.16 401.142 1490.21 405.413C1486.26 409.683 1481.14 411.863 1474.83 411.952C1470.21 411.952 1465.89 410.928 1461.85 408.882C1457.82 406.836 1454.63 404.256 1452.27 401.142L1455.93 397.138C1456.94 397.584 1458.41 398.295 1460.34 399.274C1462.36 400.252 1463.79 400.92 1464.63 401.276C1465.47 401.543 1466.68 401.854 1468.28 402.21C1469.96 402.566 1471.73 402.743 1473.57 402.743C1477.52 402.743 1480.76 401.81 1483.28 399.941C1485.8 398.073 1487.06 395.448 1487.06 392.067C1487.06 389.843 1486.47 387.975 1485.3 386.462C1484.12 384.861 1482.57 383.571 1480.63 382.593C1478.7 381.614 1476.56 380.68 1474.2 379.79C1471.94 378.9 1469.63 377.922 1467.27 376.854C1465 375.698 1462.9 374.363 1460.97 372.851C1459.04 371.249 1457.48 369.114 1456.31 366.445C1455.13 363.776 1454.54 360.618 1454.54 356.97C1454.54 351.632 1455.89 347.184 1458.58 343.625C1461.35 339.978 1465.21 338.154 1470.17 338.154C1472.1 338.154 1474.29 338.465 1476.73 339.088C1479.16 339.711 1481.09 340.289 1482.52 340.823C1483.95 341.357 1486.05 342.246 1488.82 343.492C1491.68 344.648 1493.32 345.316 1493.74 345.493Z",
    fill: orange,
    fillOpacity: "0.92"
  })), __jsx("g", {
    className: "Group_6"
  }, __jsx("path", {
    className: "Vector_293",
    d: "M1537.73 410.216L1537.47 403.678C1545.2 402.343 1549.99 401.631 1551.84 401.542C1551.93 398.517 1551.97 393.98 1551.97 387.93C1551.97 379.923 1551.8 368.402 1551.46 353.367C1551.13 338.243 1550.92 328.234 1550.83 323.341L1538.1 322.673L1537.22 314.933C1540.67 315.022 1546 315.067 1553.23 315.067C1560.62 315.067 1566.13 315.111 1569.74 315.2L1570.12 321.873C1568.69 322.496 1566.67 322.896 1564.07 323.073C1561.46 323.162 1559.82 323.252 1559.15 323.341C1559.4 325.832 1559.53 332.104 1559.53 342.157C1559.61 352.21 1559.66 363.331 1559.66 375.52C1559.66 387.708 1559.74 396.382 1559.91 401.542C1561.25 401.809 1563.82 402.12 1567.6 402.476C1571.38 402.832 1573.73 403.099 1574.65 403.277L1574.4 410.216C1571.88 410.128 1567.89 410.083 1562.43 410.083C1559.57 410.083 1555.33 410.083 1549.7 410.083C1544.07 410.172 1540.08 410.216 1537.73 410.216Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_294",
    d: "M1616.75 356.97C1617.08 361.952 1617.34 367.868 1617.51 374.719C1617.68 381.48 1617.8 388.331 1617.89 395.27C1618.05 402.21 1618.18 406.925 1618.26 409.416C1616.42 409.95 1614.69 410.217 1613.09 410.217C1611.84 410.217 1610.66 409.994 1609.57 409.549C1609.31 406.08 1609.15 402.12 1609.06 397.672C1608.98 393.224 1608.94 389.309 1608.94 385.929C1608.94 382.459 1608.85 378.856 1608.68 375.119C1608.6 371.383 1608.39 368.18 1608.06 365.511C1607.72 362.842 1607.22 360.395 1606.54 358.171C1605.87 355.858 1604.9 354.078 1603.64 352.833C1602.47 351.587 1600.99 350.92 1599.23 350.831C1597.47 350.831 1596.04 351.231 1594.95 352.033C1593.85 352.833 1592.68 354.301 1591.42 356.436V409.282C1590.16 409.994 1588.64 410.35 1586.88 410.35C1585.54 410.35 1584.02 410.128 1582.34 409.683C1582.59 404.078 1582.76 393.046 1582.85 376.587C1582.93 360.128 1583.27 347.94 1583.86 340.022L1589.53 341.357L1589.91 348.162C1592.43 343.981 1595.62 341.89 1599.48 341.89C1605.2 341.89 1610.03 344.559 1613.98 349.897C1616.42 344.559 1620.36 341.89 1625.83 341.89C1628.01 341.89 1629.9 342.157 1631.5 342.691C1640.65 345.449 1645.24 357.86 1645.24 379.923C1645.24 383.126 1645.11 387.441 1644.86 392.868C1644.69 398.206 1644.61 401.81 1644.61 403.678C1644.61 406.169 1644.73 408.215 1644.98 409.816C1640.62 411.062 1637.96 411.684 1637.04 411.684C1636.2 411.684 1635.61 411.596 1635.28 411.417C1634.94 410.261 1634.78 408.126 1634.78 405.012C1634.78 403.055 1634.9 399.051 1635.15 393.002C1635.41 386.863 1635.53 382.059 1635.53 378.589C1635.53 360.084 1632.09 350.742 1625.19 350.565C1623.6 350.654 1622.21 351.187 1621.04 352.166C1619.86 353.055 1618.43 354.657 1616.75 356.97Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_295",
    d: "M1656.96 339.622L1664.01 340.956C1664.01 342.824 1664.06 344.203 1664.14 345.093C1668.76 341.979 1673.42 340.422 1678.13 340.422C1685.78 340.422 1691.74 343.892 1696.03 350.831C1700.31 357.771 1702.46 365.644 1702.46 374.452C1702.46 378.9 1702.12 383.171 1701.45 387.263C1700.86 391.267 1699.77 395.404 1698.17 399.674C1696.57 403.855 1694.1 407.236 1690.73 409.816C1687.45 412.307 1683.46 413.553 1678.76 413.553C1674.31 413.553 1670.02 412.307 1665.91 409.816C1666.24 425.386 1666.54 436.951 1666.79 444.514C1666.03 447.271 1664.56 448.65 1662.37 448.65C1660.86 448.65 1659.39 447.983 1657.96 446.649C1656.62 445.403 1655.78 443.846 1655.44 441.977L1656.96 339.622ZM1665.15 353.767L1665.52 396.872C1666.54 399.007 1668.09 400.741 1670.19 402.076C1672.29 403.322 1674.6 403.945 1677.12 403.945C1680.4 403.945 1683.17 402.832 1685.44 400.608C1687.79 398.384 1689.43 395.448 1690.36 391.8C1691.36 388.064 1692.04 384.594 1692.37 381.391C1692.79 378.188 1693 374.808 1693 371.249C1693 356.125 1688.17 348.563 1678.51 348.563C1675.4 348.563 1672.5 349.052 1669.81 350.031C1667.21 350.92 1665.65 352.166 1665.15 353.767Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_296",
    d: "M1754.25 358.972L1748.71 358.571C1746.95 353.589 1743.96 351.098 1739.76 351.098C1737.91 351.098 1735.94 351.543 1733.83 352.433C1731.82 353.322 1730.14 354.257 1728.8 355.235C1727.45 356.125 1725.69 357.459 1723.5 359.239C1723.5 360.484 1723.46 364.532 1723.38 371.383C1723.38 378.233 1723.42 385.84 1723.5 394.202C1723.67 402.566 1723.84 407.058 1724 407.681C1723.25 410.35 1721.78 411.684 1719.6 411.684C1718.08 411.684 1716.61 411.062 1715.19 409.816C1713.84 408.482 1713 406.88 1712.66 405.012C1714.26 376.454 1715.69 354.879 1716.95 340.289L1722.62 341.623L1723 350.565C1728.88 345.404 1733.92 342.824 1738.12 342.824C1742.75 342.824 1746.61 343.936 1749.72 346.16C1752.91 348.384 1754.51 351.632 1754.51 355.902C1754.51 357.237 1754.43 358.26 1754.25 358.972Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_297",
    d: "M1762.32 341.223L1768.12 342.557C1768.79 349.853 1769.38 361.329 1769.89 376.988C1770.39 392.557 1770.72 402.21 1770.89 405.946C1770.13 408.704 1768.66 410.083 1766.48 410.083C1764.97 410.083 1763.5 409.46 1762.07 408.215C1760.72 406.88 1759.88 405.279 1759.55 403.41C1759.72 399.763 1760.05 390.288 1760.56 374.986C1761.06 359.594 1761.65 348.34 1762.32 341.223ZM1764.08 317.335C1766.35 317.335 1768.25 318.403 1769.76 320.538C1771.27 322.584 1772.03 324.942 1772.03 327.611C1772.03 329.568 1771.56 331.169 1770.64 332.415C1769.8 333.572 1768.62 334.15 1767.11 334.15C1764.76 334.15 1762.91 333.126 1761.57 331.081C1760.22 329.034 1759.55 326.632 1759.55 323.874C1759.55 321.917 1759.93 320.36 1760.68 319.203C1761.52 317.958 1762.66 317.335 1764.08 317.335Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_298",
    d: "M1816.77 356.97C1817.11 361.952 1817.36 367.868 1817.52 374.719C1817.69 381.48 1817.82 388.331 1817.9 395.27C1818.07 402.21 1818.2 406.925 1818.28 409.416C1816.43 409.95 1814.71 410.217 1813.12 410.217C1811.85 410.217 1810.67 409.994 1809.58 409.549C1809.33 406.08 1809.16 402.12 1809.08 397.672C1809 393.224 1808.95 389.309 1808.95 385.929C1808.95 382.459 1808.87 378.856 1808.7 375.119C1808.62 371.383 1808.41 368.18 1808.07 365.511C1807.74 362.842 1807.23 360.395 1806.56 358.171C1805.89 355.858 1804.92 354.078 1803.66 352.833C1802.48 351.587 1801.02 350.92 1799.25 350.831C1797.48 350.831 1796.06 351.231 1794.97 352.033C1793.87 352.833 1792.7 354.301 1791.43 356.436V409.282C1790.17 409.994 1788.66 410.35 1786.9 410.35C1785.56 410.35 1784.04 410.128 1782.36 409.683C1782.61 404.078 1782.78 393.046 1782.87 376.587C1782.95 360.128 1783.29 347.94 1783.87 340.022L1789.55 341.357L1789.92 348.162C1792.44 343.981 1795.64 341.89 1799.5 341.89C1805.22 341.89 1810.04 344.559 1814 349.897C1816.43 344.559 1820.38 341.89 1825.84 341.89C1828.03 341.89 1829.92 342.157 1831.52 342.691C1840.68 345.449 1845.25 357.86 1845.25 379.923C1845.25 383.126 1845.13 387.441 1844.87 392.868C1844.71 398.206 1844.62 401.81 1844.62 403.678C1844.62 406.169 1844.75 408.215 1845 409.816C1840.63 411.062 1837.99 411.684 1837.06 411.684C1836.22 411.684 1835.63 411.596 1835.3 411.417C1834.96 410.261 1834.79 408.126 1834.79 405.012C1834.79 403.055 1834.92 399.051 1835.17 393.002C1835.42 386.863 1835.55 382.059 1835.55 378.589C1835.55 360.084 1832.1 350.742 1825.21 350.565C1823.62 350.654 1822.23 351.187 1821.05 352.166C1819.87 353.055 1818.45 354.657 1816.77 356.97Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_299",
    d: "M1906.25 396.872L1907.51 402.743C1903.82 404.167 1898.31 405.769 1891 407.548C1883.78 409.238 1878.4 410.083 1874.87 410.083C1871.26 410.083 1868.11 408.838 1865.42 406.346C1862.73 403.767 1860.71 400.519 1859.37 396.605C1858.02 392.601 1857.02 388.687 1856.35 384.861C1855.75 380.947 1855.46 377.121 1855.46 373.385C1855.46 351.143 1864.95 340.022 1883.95 340.022C1888.48 340.022 1892.47 341.579 1895.92 344.693C1899.37 347.718 1901.09 351.677 1901.09 356.569C1901.09 359.239 1900.37 361.596 1898.95 363.642C1897.6 365.689 1895.92 367.335 1893.9 368.58C1891.97 369.737 1889.45 370.804 1886.34 371.783C1883.31 372.762 1880.62 373.473 1878.27 373.918C1875.92 374.363 1873.11 374.853 1869.83 375.386C1866.55 375.92 1864.28 376.32 1863.02 376.587C1863.1 379.167 1863.23 381.436 1863.4 383.393C1863.65 385.35 1864.07 387.486 1864.66 389.799C1865.34 392.023 1866.18 393.891 1867.18 395.404C1868.27 396.827 1869.75 398.028 1871.6 399.007C1873.44 399.985 1875.63 400.475 1878.15 400.475C1881.17 400.475 1884.87 400.208 1889.24 399.674C1893.61 399.051 1897.47 398.429 1900.83 397.806C1904.28 397.183 1906.09 396.872 1906.25 396.872ZM1863.53 368.313C1874.96 364.844 1884.32 361.196 1891.63 357.371C1891.05 354.434 1890.25 352.299 1889.24 350.965C1888.23 349.63 1886.72 348.963 1884.7 348.963C1879.58 348.963 1874.91 350.831 1870.71 354.568C1866.59 358.304 1864.2 362.886 1863.53 368.313Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_300",
    d: "M1954.15 358.972L1948.6 358.571C1946.84 353.589 1943.85 351.098 1939.65 351.098C1937.8 351.098 1935.83 351.543 1933.73 352.433C1931.71 353.322 1930.03 354.257 1928.69 355.235C1927.34 356.125 1925.58 357.459 1923.39 359.239C1923.39 360.484 1923.35 364.532 1923.27 371.383C1923.27 378.233 1923.31 385.84 1923.39 394.202C1923.56 402.566 1923.73 407.058 1923.9 407.681C1923.14 410.35 1921.67 411.684 1919.49 411.684C1917.98 411.684 1916.5 411.062 1915.08 409.816C1913.73 408.482 1912.89 406.88 1912.56 405.012C1914.15 376.454 1915.58 354.879 1916.84 340.289L1922.51 341.623L1922.89 350.565C1928.77 345.404 1933.81 342.824 1938.01 342.824C1942.64 342.824 1946.5 343.936 1949.61 346.16C1952.8 348.384 1954.4 351.632 1954.4 355.902C1954.4 357.237 1954.31 358.26 1954.15 358.972Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_301",
    d: "M1962.21 341.223L1968.01 342.557C1968.68 349.853 1969.27 361.329 1969.77 376.988C1970.28 392.557 1970.62 402.21 1970.78 405.946C1970.03 408.704 1968.56 410.083 1966.37 410.083C1964.86 410.083 1963.39 409.46 1961.96 408.215C1960.61 406.88 1959.78 405.279 1959.44 403.41C1959.61 399.763 1959.94 390.288 1960.45 374.986C1960.95 359.594 1961.54 348.34 1962.21 341.223ZM1963.98 317.335C1966.25 317.335 1968.14 318.403 1969.65 320.538C1971.16 322.584 1971.92 324.942 1971.92 327.611C1971.92 329.568 1971.46 331.169 1970.53 332.415C1969.69 333.572 1968.51 334.15 1967 334.15C1964.65 334.15 1962.8 333.126 1961.46 331.081C1960.11 329.034 1959.44 326.632 1959.44 323.874C1959.44 321.917 1959.82 320.36 1960.58 319.203C1961.42 317.958 1962.55 317.335 1963.98 317.335Z",
    fill: orange,
    fillOpacity: "0.92"
  }), __jsx("path", {
    className: "Vector_302",
    d: "M2033.04 396.872L2034.3 402.743C2030.61 404.167 2025.11 405.769 2017.79 407.548C2010.57 409.238 2005.19 410.083 2001.66 410.083C1998.05 410.083 1994.9 408.838 1992.21 406.346C1989.52 403.767 1987.5 400.519 1986.16 396.605C1984.81 392.601 1983.81 388.687 1983.14 384.861C1982.54 380.947 1982.25 377.121 1982.25 373.385C1982.25 351.143 1991.75 340.022 2010.74 340.022C2015.27 340.022 2019.27 341.579 2022.71 344.693C2026.16 347.718 2027.88 351.677 2027.88 356.569C2027.88 359.239 2027.16 361.596 2025.74 363.642C2024.39 365.689 2022.71 367.335 2020.69 368.58C2018.76 369.737 2016.24 370.804 2013.13 371.783C2010.1 372.762 2007.41 373.473 2005.07 373.918C2002.71 374.363 1999.9 374.853 1996.62 375.386C1993.34 375.92 1991.07 376.32 1989.81 376.587C1989.9 379.167 1990.02 381.436 1990.19 383.393C1990.44 385.35 1990.86 387.486 1991.45 389.799C1992.13 392.023 1992.97 393.891 1993.97 395.404C1995.07 396.827 1996.54 398.028 1998.39 399.007C2000.23 399.985 2002.42 400.475 2004.94 400.475C2007.96 400.475 2011.66 400.208 2016.03 399.674C2020.4 399.051 2024.26 398.429 2027.62 397.806C2031.07 397.183 2032.88 396.872 2033.04 396.872ZM1990.32 368.313C2001.75 364.844 2011.11 361.196 2018.42 357.371C2017.84 354.434 2017.04 352.299 2016.03 350.965C2015.02 349.63 2013.51 348.963 2011.49 348.963C2006.37 348.963 2001.7 350.831 1997.5 354.568C1993.39 358.304 1990.99 362.886 1990.32 368.313Z",
    fill: orange
  }))));
};
// CONCATENATED MODULE: ./components/Hero/Hero.tsx
var Hero_jsx = external_react_default.a.createElement;




const Hero = () => {
  const {
    hero,
    bail,
    calltoAction,
    bailHeading,
    letters1,
    letters2,
    letters3,
    letters4,
    letters5,
    letters6,
    letters7,
    letters9,
    letters8,
    letters10,
    letters11,
    letters12
  } = Hero_module_default.a;
  return Hero_jsx("section", {
    className: hero
  }, Hero_jsx("div", {
    className: bail
  }, Hero_jsx("div", {
    className: calltoAction
  }, Hero_jsx("div", {
    className: bailHeading
  }, Hero_jsx("h1", null, "Imprimez l'avenir de votre"), Hero_jsx("span", null, "entreprise")), Hero_jsx("p", null, " Express Imprimerie est sp\xE9cialis\xE9 dans l'impression de votre plan marketing sous forme de ", Hero_jsx("span", null, " t-shirts, flyers, cartes de visite ... et bien plus encore. En savoir plus sur nous ci-dessous"))), Hero_jsx(HeroSvg, {
    className: {
      letters1,
      letters2,
      letters3,
      letters4,
      letters5,
      letters6,
      letters7,
      letters9,
      letters8,
      letters10,
      letters11,
      letters12
    },
    blue: "#046865",
    orange: "#E53D00"
  })));
};

/* harmony default export */ var Hero_Hero = (Hero);
// EXTERNAL MODULE: ./components/About/About.module.scss
var About_module = __webpack_require__("LnhC");
var About_module_default = /*#__PURE__*/__webpack_require__.n(About_module);

// CONCATENATED MODULE: ./components/About/About.tsx
var About_jsx = external_react_default.a.createElement;



const About = () => {
  const {
    0: expend,
    1: setExpend
  } = Object(external_react_["useState"])(false);
  const {
    aboutContainer,
    aboutHeading,
    aboutMission,
    aboutConcept,
    aboutPhilosophie,
    readMore
  } = About_module_default.a;
  return About_jsx("section", {
    style: {
      height: expend ? 'auto' : '30vh'
    },
    className: aboutContainer
  }, About_jsx("h1", {
    className: aboutHeading
  }, "Pourquoi Nous?"), About_jsx("div", {
    className: aboutMission
  }, About_jsx("p", null, About_jsx("strong", null, "NOTRE MISSION :"), " Express Imprimerie  a pour mission de r\xE9pondre de mani\xE8re professionnelle et efficace aux besoins croissants de la client\xE8le marocaine en mati\xE8re d\u2019impression. En s\u2019appuyant sur notre concept de One stop shop , nos imprimeries sont en mesure de r\xE9pondre \xE0 toutes les commandes de clients particuliers  ou entreprises; de l\u2019adaptation de fichiers aux imprim\xE9s personnalis\xE9s et uniques. La qualit\xE9 de nos produits, l\u2019aspect novateur de nos services, le professionnalisme de nos collaborateurs et le strict respect des dates de livraison sont pour nous la base de longues relations avec nos clients.")), About_jsx("div", {
    className: aboutConcept
  }, About_jsx("p", null, " ", About_jsx("strong", null, "NOTRE CONCEPT : "), "Tous les commerces ont tous les jours besoin de documents imprim\xE9s, qu\u2019il s\u2019agisse de papeterie de base, du papier \xE0 ent\xEAte et des cartes d\u2019affaires jusqu\u2019aux rapports annuels, aux documents de marketing et aux impressions personnalis\xE9es. Gr\xE2ce \xE0 notre friendly  website : ", About_jsx("a", {
    href: "/"
  }, "www.imprimerie.digital/"), " , Express Imprimerie peut r\xE9pondre efficacement aux besoins d\u2019impression de chaque client; de l\u2019adaptation au parach\xE8vement. Nos centres, ont recours \xE0 une technologie de pointe pour r\xE9pondre aux attentes de nos clients, ou m\xEAme les exc\xE9der, en mati\xE8re de fiabilit\xE9, de qualit\xE9 et de d\xE9lais d\u2019ex\xE9cution plus courts dans un march\xE9 qui n\u2019accepte que les plus hautes normes."), " "), About_jsx("div", {
    className: aboutPhilosophie
  }, About_jsx("p", null, " ", About_jsx("strong", null, "NOTRE PHILOSOPHIE :"), "Servir chaque client de mani\xE8re rapide, efficace et courtoise en garantissant un service professionnel et de haute qualit\xE9 \xE0 un prix raisonnable. Notre objectif principal consiste \xE0 d\xE9velopper avec nos clients des relations \xE0 long terme qui favorisent la croissance et la prosp\xE9rit\xE9 mutuelle. Ainsi, que votre entreprise soit petite ou grande, vous pouvez avoir besoin d\u2019une solution simple en une seule \xE9tape, ou exiger tout, de l\u2019adaptation \xE0 l\u2019impression d\u2019un projet jusqu\u2019\xE0 la reproduction, la finition \xE0 la pose. Peu importe ce que cela repr\xE9sente pour vous, quoique vous d\xE9cidiez, nous ferons toujours preuve du m\xEAme engagement et du m\xEAme professionnalisme pour vous offrir des solutions adapt\xE9es \xE0 vos besoins."), " "), About_jsx("p", {
    style: {
      display: expend ? 'none' : 'block'
    },
    className: readMore
  }, About_jsx("button", {
    onClick: () => setExpend(true),
    className: "button"
  }, "Afficher Plus")));
};

/* harmony default export */ var About_About = (About);
// EXTERNAL MODULE: ./components/Products/Products.module.scss
var Products_module = __webpack_require__("DC6Z");
var Products_module_default = /*#__PURE__*/__webpack_require__.n(Products_module);

// EXTERNAL MODULE: ./components/Cards/Cards.module.scss
var Cards_module = __webpack_require__("H3hI");
var Cards_module_default = /*#__PURE__*/__webpack_require__.n(Cards_module);

// EXTERNAL MODULE: ./utils/sample-data.ts
var sample_data = __webpack_require__("WuiG");

// EXTERNAL MODULE: ./components/svg/SvgHolder.tsx
var SvgHolder = __webpack_require__("SQJ2");

// EXTERNAL MODULE: ./components/Card/Card.module.scss
var Card_module = __webpack_require__("VuTL");
var Card_module_default = /*#__PURE__*/__webpack_require__.n(Card_module);

// EXTERNAL MODULE: ./node_modules/next/link.js
var next_link = __webpack_require__("YFqc");
var link_default = /*#__PURE__*/__webpack_require__.n(next_link);

// CONCATENATED MODULE: ./components/Card/Card.tsx
var Card_jsx = external_react_default.a.createElement;



const {
  cardText,
  cardDescription,
  cardAction,
  cardImage,
  cardLink
} = Card_module_default.a;

const Card = ({
  cardId,
  src,
  title,
  content,
  setIndex
}) => {
  return Card_jsx("div", {
    className: "card",
    onClick: () => setIndex(cardId)
  }, Card_jsx("div", {
    style: {
      backgroundImage: `url(${src})`
    },
    className: cardImage
  }), Card_jsx("div", {
    className: cardText
  }, Card_jsx("h2", null, title), Card_jsx("div", {
    className: cardDescription
  }, Card_jsx("p", null, content[0]))), Card_jsx("div", {
    className: cardAction
  }, Card_jsx(link_default.a, {
    href: `/services/${title.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "")}`
  }, Card_jsx("button", {
    className: cardLink
  }, "En Savoir Plus"))));
};

/* harmony default export */ var Card_Card = (Object(external_react_["memo"])(Card));
// EXTERNAL MODULE: ./hoc/useWindow.tsx
var useWindow = __webpack_require__("jqOM");

// CONCATENATED MODULE: ./components/Cards/Cards.tsx
var Cards_jsx = external_react_default.a.createElement;






const {
  cards,
  carda,
  colCard,
  indicatorContainer,
  indicatorItem,
  rightCardBtn,
  leftCardBtn
} = Cards_module_default.a;

const Cards = () => {
  if (false) { var width; }

  const {
    0: index,
    1: setIndex
  } = Object(external_react_["useState"])(0);

  const onNext = () => {
    if (index < sample_data["a" /* default */].length - 1) {
      setIndex(index + 1);
    } else {
      setIndex(0);
    }
  };

  const onPrev = () => {
    if (index > 0) {
      setIndex(index - 1);
    } else {
      setIndex(sample_data["a" /* default */].length - 1);
    }
  };

  let multiplier;

  if (width > 0) {
    multiplier = -(100 * index);
  } else if (width > 600) {
    multiplier = 60 - 100 * index;
  } else if (width > 960) {
    multiplier = 90 - 100 * index;
  } else if (width > 1280) {
    multiplier = 120 - 100 * index;
  } else if (width > 1920) {
    multiplier = 140 * index;
  }

  const mappedCards = sample_data["a" /* default */].map(ex => {
    console.log(' rendered');
    return Cards_jsx("div", {
      style: {
        transform: `translateX(${multiplier}%)`
      },
      className: index === ex.id ? `${colCard} card-active-${index}s` : colCard,
      key: ex.id
    }, Cards_jsx(Card_Card // @ts-ignore
    , {
      cardId: ex.id,
      title: ex.name,
      src: ex.src,
      content: ex.content.description,
      setIndex: setIndex
    }));
  });
  return Cards_jsx(external_react_default.a.Fragment, null, Cards_jsx("button", {
    onClick: onPrev,
    className: leftCardBtn
  }, Cards_jsx(SvgHolder["a" /* default */], {
    fill: "#CF5600",
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24"
  }, Cards_jsx("path", {
    d: "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
  }))), Cards_jsx("button", {
    onClick: onNext,
    className: rightCardBtn
  }, Cards_jsx(SvgHolder["a" /* default */], {
    fill: "#CF5600",
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24"
  }, Cards_jsx("path", {
    d: "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
  }))), Cards_jsx("div", {
    className: cards
  }, Cards_jsx("div", {
    className: carda
  }, mappedCards), Cards_jsx("div", {
    className: indicatorContainer
  }, sample_data["a" /* default */].map(ex => Cards_jsx("div", {
    onClick: () => setIndex(ex.id),
    key: ex.id,
    className: index === ex.id ? `${indicatorItem} indicator-item-active-${index}s` : indicatorItem
  })))));
};

/* harmony default export */ var Cards_Cards = (external_react_default.a.memo(Cards));
// CONCATENATED MODULE: ./components/Products/Products.tsx
var Products_jsx = external_react_default.a.createElement;




const Products = () => {
  return Products_jsx("section", {
    className: Products_module_default.a.container
  }, Products_jsx("h1", null, "Produits :"), Products_jsx(Cards_Cards, null));
};

/* harmony default export */ var Products_Products = (Products);
// EXTERNAL MODULE: ./components/Offering/Offering.module.scss
var Offering_module = __webpack_require__("TlNf");
var Offering_module_default = /*#__PURE__*/__webpack_require__.n(Offering_module);

// CONCATENATED MODULE: ./components/svg/DeliverSvg.tsx
var DeliverSvg_jsx = external_react_default.a.createElement;


const DeliverSvg = ({
  grad
}) => {
  return DeliverSvg_jsx(SvgHolder["a" /* default */], {
    width: "113",
    height: "137",
    viewBox: "0 0 113 137"
  }, DeliverSvg_jsx("path", {
    fill: grad,
    d: "M90.0469 70.6406H77.6875V47.0937C77.6875 45.3906 77.1294 43.7571 76.1361 42.5528C75.1427 41.3485 73.7954 40.6719 72.3906 40.6719H8.82812C7.42331 40.6719 6.07603 41.3485 5.08267 42.5528C4.08931 43.7571 3.53125 45.3906 3.53125 47.0937V119.875C3.53125 121.578 4.08931 123.212 5.08267 124.416C6.07603 125.62 7.42331 126.297 8.82812 126.297H20.8556C21.7822 128.249 23.1169 129.87 24.725 130.998C26.3332 132.125 28.158 132.718 30.0156 132.718C31.8733 132.718 33.6981 132.125 35.3062 130.998C36.9144 129.87 38.249 128.249 39.1757 126.297H82.6524C83.5791 128.249 84.9138 129.87 86.5219 130.998C88.13 132.125 89.9549 132.718 91.8125 132.718C93.6701 132.718 95.495 132.125 97.1031 130.998C98.7112 129.87 100.046 128.249 100.973 126.297H104.172C105.577 126.297 106.924 125.62 107.917 124.416C108.911 123.212 109.469 121.578 109.469 119.875V94.1875C109.463 87.9447 107.414 81.9598 103.774 77.5455C100.133 73.1312 95.196 70.648 90.0469 70.6406ZM105.833 92.0469H86.5156C86.0474 92.0469 85.5983 91.8213 85.2671 91.4199C84.936 91.0184 84.75 90.474 84.75 89.9062V74.9219H90.0469C93.9534 74.9288 97.7213 76.6779 100.633 79.8361C103.544 82.9942 105.395 87.3405 105.833 92.0469V92.0469ZM81.2188 74.9219V89.9062C81.2188 91.6094 81.7768 93.2429 82.7702 94.4472C83.7635 95.6515 85.1108 96.3281 86.5156 96.3281H105.938V113.453H100.973C100.046 111.501 98.7112 109.88 97.1031 108.752C95.495 107.625 93.6701 107.031 91.8125 107.031C89.9549 107.031 88.13 107.625 86.5219 108.752C84.9138 109.88 83.5791 111.501 82.6524 113.453H77.6875V74.9219H81.2188ZM39.1757 113.453C38.249 111.501 36.9144 109.88 35.3062 108.752C33.6981 107.625 31.8733 107.031 30.0156 107.031C28.158 107.031 26.3332 107.625 24.725 108.752C23.1169 109.88 21.7822 111.501 20.8556 113.453H7.0625V104.891H74.1562V113.453H39.1757ZM7.0625 57.7969H74.1562V87.7656H7.0625V57.7969ZM74.1562 92.0469V100.609H7.0625V92.0469H74.1562ZM8.82812 44.9531H72.3906C72.8589 44.9531 73.308 45.1787 73.6391 45.5801C73.9702 45.9815 74.1562 46.526 74.1562 47.0937V53.5156H7.0625V47.0937C7.0625 46.526 7.24852 45.9815 7.57964 45.5801C7.91076 45.1787 8.35985 44.9531 8.82812 44.9531ZM8.82812 122.016C8.35985 122.016 7.91076 121.79 7.57964 121.389C7.24852 120.987 7.0625 120.443 7.0625 119.875V117.734H19.5808C19.3689 119.15 19.3689 120.6 19.5808 122.016H8.82812ZM30.0156 128.437C28.6188 128.437 27.2533 127.935 26.0919 126.994C24.9305 126.054 24.0253 124.716 23.4907 123.152C22.9562 121.587 22.8163 119.865 23.0888 118.205C23.3613 116.544 24.034 115.018 25.0217 113.82C26.0094 112.623 27.2678 111.807 28.6378 111.477C30.0078 111.147 31.4278 111.316 32.7183 111.964C34.0088 112.612 35.1118 113.71 35.8879 115.118C36.6639 116.526 37.0781 118.181 37.0781 119.875C37.0781 122.146 36.334 124.324 35.0096 125.93C33.6851 127.535 31.8887 128.437 30.0156 128.437ZM40.4505 122.016C40.6624 120.6 40.6624 119.15 40.4505 117.734H81.3777C81.1658 119.15 81.1658 120.6 81.3777 122.016H40.4505ZM91.8125 128.437C90.4157 128.437 89.0502 127.935 87.8888 126.994C86.7274 126.054 85.8221 124.716 85.2876 123.152C84.7531 121.587 84.6132 119.865 84.8857 118.205C85.1582 116.544 85.8309 115.018 86.8186 113.82C87.8063 112.623 89.0647 111.807 90.4347 111.477C91.8047 111.147 93.2247 111.316 94.5152 111.964C95.8057 112.612 96.9087 113.71 97.6848 115.118C98.4608 116.526 98.875 118.181 98.875 119.875C98.875 122.146 98.1309 124.324 96.8064 125.93C95.482 127.535 93.6856 128.437 91.8125 128.437ZM105.938 119.875C105.938 120.443 105.751 120.987 105.42 121.389C105.089 121.79 104.64 122.016 104.172 122.016H102.247C102.459 120.6 102.459 119.15 102.247 117.734H105.938V119.875Z"
  }), DeliverSvg_jsx("path", {
    fill: grad,
    d: "M24.7188 62.0781H19.4219C18.4853 62.0781 17.5871 62.5292 16.9249 63.3321C16.2627 64.135 15.8906 65.2239 15.8906 66.3594V81.3438C15.8906 81.9115 16.0766 82.456 16.4078 82.8574C16.7389 83.2588 17.188 83.4844 17.6562 83.4844C18.1245 83.4844 18.5736 83.2588 18.9047 82.8574C19.2359 82.456 19.4219 81.9115 19.4219 81.3438V74.9219H22.9531C23.4214 74.9219 23.8705 74.6963 24.2016 74.2949C24.5327 73.8935 24.7188 73.349 24.7188 72.7812C24.7188 72.2135 24.5327 71.669 24.2016 71.2676C23.8705 70.8662 23.4214 70.6406 22.9531 70.6406H19.4219V66.3594H24.7188C25.187 66.3594 25.6361 66.1338 25.9672 65.7324C26.2984 65.331 26.4844 64.7865 26.4844 64.2188C26.4844 63.651 26.2984 63.1065 25.9672 62.7051C25.6361 62.3037 25.187 62.0781 24.7188 62.0781Z"
  }), DeliverSvg_jsx("path", {
    fill: grad,
    d: "M49.4375 66.3594C49.9058 66.3594 50.3549 66.1338 50.686 65.7324C51.0171 65.331 51.2031 64.7865 51.2031 64.2188C51.2031 63.651 51.0171 63.1065 50.686 62.7051C50.3549 62.3037 49.9058 62.0781 49.4375 62.0781H44.1406C43.2041 62.0781 42.3059 62.5292 41.6437 63.3321C40.9814 64.135 40.6094 65.2239 40.6094 66.3594V79.2031C40.6094 80.3386 40.9814 81.4275 41.6437 82.2304C42.3059 83.0333 43.2041 83.4844 44.1406 83.4844H49.4375C49.9058 83.4844 50.3549 83.2588 50.686 82.8574C51.0171 82.456 51.2031 81.9115 51.2031 81.3438C51.2031 80.776 51.0171 80.2315 50.686 79.8301C50.3549 79.4287 49.9058 79.2031 49.4375 79.2031H44.1406V74.9219H47.6719C48.1401 74.9219 48.5892 74.6963 48.9204 74.2949C49.2515 73.8935 49.4375 73.349 49.4375 72.7812C49.4375 72.2135 49.2515 71.669 48.9204 71.2676C48.5892 70.8662 48.1401 70.6406 47.6719 70.6406H44.1406V66.3594H49.4375Z"
  }), DeliverSvg_jsx("path", {
    fill: grad,
    d: "M61.7969 66.3594C62.2651 66.3594 62.7142 66.1338 63.0454 65.7324C63.3765 65.331 63.5625 64.7865 63.5625 64.2188C63.5625 63.651 63.3765 63.1065 63.0454 62.7051C62.7142 62.3037 62.2651 62.0781 61.7969 62.0781H56.5C55.5635 62.0781 54.6653 62.5292 54.003 63.3321C53.3408 64.135 52.9688 65.2239 52.9688 66.3594V79.2031C52.9688 80.3386 53.3408 81.4275 54.003 82.2304C54.6653 83.0333 55.5635 83.4844 56.5 83.4844H61.7969C62.2651 83.4844 62.7142 83.2588 63.0454 82.8574C63.3765 82.456 63.5625 81.9115 63.5625 81.3438C63.5625 80.776 63.3765 80.2315 63.0454 79.8301C62.7142 79.4287 62.2651 79.2031 61.7969 79.2031H56.5V74.9219H60.0312C60.4995 74.9219 60.9486 74.6963 61.2797 74.2949C61.6109 73.8935 61.7969 73.349 61.7969 72.7812C61.7969 72.2135 61.6109 71.669 61.2797 71.2676C60.9486 70.8662 60.4995 70.6406 60.0312 70.6406H56.5V66.3594H61.7969Z"
  }), DeliverSvg_jsx("path", {
    fill: grad,
    d: "M38.8438 68.5C38.8438 66.7968 38.2857 65.1634 37.2923 63.959C36.299 62.7547 34.9517 62.0781 33.5469 62.0781H30.0156C29.5474 62.0781 29.0983 62.3037 28.7671 62.7051C28.436 63.1065 28.25 63.651 28.25 64.2187V81.3437C28.25 81.9115 28.436 82.456 28.7671 82.8574C29.0983 83.2588 29.5474 83.4844 30.0156 83.4844C30.4839 83.4844 30.933 83.2588 31.2641 82.8574C31.5952 82.456 31.7813 81.9115 31.7813 81.3437V76.3497L35.6656 82.6281C35.9466 83.0823 36.3649 83.3826 36.8284 83.4629C37.292 83.5431 37.7629 83.3969 38.1375 83.0562C38.5121 82.7156 38.7598 82.2085 38.826 81.6465C38.8922 81.0845 38.7716 80.5136 38.4906 80.0594L35.1148 74.6029C36.1908 74.1987 37.1326 73.389 37.8032 72.2915C38.4738 71.194 38.8383 69.8658 38.8438 68.5V68.5ZM33.5469 70.6406H31.7813V66.3594H33.5469C34.0152 66.3594 34.4642 66.5849 34.7954 66.9863C35.1265 67.3878 35.3125 67.9323 35.3125 68.5C35.3125 69.0677 35.1265 69.6122 34.7954 70.0136C34.4642 70.4151 34.0152 70.6406 33.5469 70.6406Z"
  }));
};
// CONCATENATED MODULE: ./components/svg/PrintSvg.tsx
var PrintSvg_jsx = external_react_default.a.createElement;


const PrintSvg = ({
  bg,
  grad
}) => {
  return PrintSvg_jsx(SvgHolder["a" /* default */], {
    width: "104",
    height: "103",
    viewBox: "0 0 104 103"
  }, PrintSvg_jsx("rect", {
    fill: bg,
    stroke: grad,
    x: "12.6191",
    y: "14.0944",
    width: "78.7611",
    height: "21.8289",
    rx: "10",
    strokeWidth: "4"
  }), PrintSvg_jsx("rect", {
    fill: bg,
    stroke: grad,
    x: "26.4835",
    y: "2",
    width: "51.0325",
    height: "33.9233",
    rx: "10",
    strokeWidth: "4"
  }), PrintSvg_jsx("rect", {
    fill: bg,
    stroke: grad,
    x: "2",
    y: "25.0088",
    width: "100",
    height: "58.9971",
    rx: "10",
    strokeWidth: "4"
  }), PrintSvg_jsx("rect", {
    fill: bg,
    stroke: grad,
    x: "21.7644",
    y: "67.4866",
    width: "60.177",
    height: "32.7434",
    rx: "10",
    strokeWidth: "4"
  }), PrintSvg_jsx("path", {
    fill: grad,
    fillRule: "evenodd",
    d: "M23.8289 43.5282H80.1711C82.6507 43.5282 84.6608 45.5383 84.6608 48.0179C84.6608 50.4974 82.6507 52.5075 80.1711 52.5075H23.8289C21.3493 52.5075 19.3392 50.4974 19.3392 48.0179C19.3392 45.5383 21.3493 43.5282 23.8289 43.5282ZM17.3392 48.0179C17.3392 44.4337 20.2448 41.5282 23.8289 41.5282H80.1711C83.7552 41.5282 86.6608 44.4337 86.6608 48.0179C86.6608 51.602 83.7552 54.5075 80.1711 54.5075H23.8289C20.2448 54.5075 17.3392 51.602 17.3392 48.0179ZM29.1387 46.2476C28.65 46.2476 28.2538 46.6439 28.2538 47.1326C28.2538 47.6214 28.65 48.0176 29.1387 48.0176H42.1181C42.6068 48.0176 43.003 47.6214 43.003 47.1326C43.003 46.6439 42.6068 46.2476 42.1181 46.2476H29.1387ZM44.7729 47.1326C44.7729 46.6438 45.1691 46.2476 45.6579 46.2476H58.6372C59.126 46.2476 59.5222 46.6438 59.5222 47.1326C59.5222 47.6213 59.126 48.0175 58.6372 48.0175H45.6579C45.1691 48.0175 44.7729 47.6213 44.7729 47.1326ZM65.4221 46.2476C64.9333 46.2476 64.5371 46.6438 64.5371 47.1326C64.5371 47.6213 64.9333 48.0175 65.4221 48.0175H78.4014C78.8902 48.0175 79.2864 47.6213 79.2864 47.1326C79.2864 46.6438 78.8902 46.2476 78.4014 46.2476H65.4221Z"
  }), PrintSvg_jsx("path", {
    fill: grad,
    fillRule: "evenodd",
    d: "M40.0528 11.6696H63.9466C65.7745 11.6696 67.2563 13.1514 67.2563 14.9793C67.2563 16.8072 65.7745 18.2891 63.9466 18.2891H40.0528C38.2249 18.2891 36.743 16.8072 36.743 14.9793C36.743 13.1514 38.2249 11.6696 40.0528 11.6696ZM34.743 14.9793C34.743 12.0468 37.1203 9.66959 40.0528 9.66959H63.9466C66.8791 9.66959 69.2563 12.0468 69.2563 14.9793C69.2563 17.9118 66.8791 20.2891 63.9466 20.2891H40.0528C37.1203 20.2891 34.743 17.9118 34.743 14.9793ZM40.4607 14.0138C40.0608 14.0138 39.7367 14.338 39.7367 14.7379C39.7367 15.1378 40.0608 15.4619 40.4607 15.4619H46.3559C46.7557 15.4619 47.0799 15.1378 47.0799 14.7379C47.0799 14.338 46.7557 14.0138 46.3559 14.0138H40.4607ZM47.9612 14.7379C47.9612 14.338 48.2854 14.0138 48.6852 14.0138H54.5804C54.9803 14.0138 55.3044 14.338 55.3044 14.7379C55.3044 15.1378 54.9803 15.4619 54.5804 15.4619H48.6852C48.2854 15.4619 47.9612 15.1378 47.9612 14.7379ZM58.5252 14.0138C58.1253 14.0138 57.8011 14.338 57.8011 14.7379C57.8011 15.1378 58.1253 15.4619 58.5252 15.4619H64.4203C64.8202 15.4619 65.1444 15.1378 65.1444 14.7379C65.1444 14.338 64.8202 14.0138 64.4203 14.0138H58.5252Z"
  }), PrintSvg_jsx("line", {
    stroke: grad,
    x1: "22.6482",
    y1: "73.89",
    x2: "80.4661",
    y2: "73.89",
    strokeWidth: "4"
  }));
};
// CONCATENATED MODULE: ./components/svg/DesignSvg.tsx
var DesignSvg_jsx = external_react_default.a.createElement;


const DesignSvg = ({
  grad
}) => {
  return DesignSvg_jsx(SvgHolder["a" /* default */], {
    width: "100",
    height: "90",
    viewBox: "0 0 100 90"
  }, DesignSvg_jsx("path", {
    fill: grad,
    id: "sun",
    d: "M59.0372 19.4306C59.8214 19.4306 60.4579 20.1844 60.4579 21.1131C60.4579 22.0417 59.8214 22.7955 59.0372 22.7955H55.7752C55.58 23.9913 55.1842 25.0994 54.6271 26.073L56.9346 28.8051C57.4897 29.4625 57.4897 30.528 56.9346 31.1852C56.658 31.515 56.2941 31.6786 55.9304 31.6786C55.5666 31.6786 55.2029 31.515 54.9244 31.1852L52.6173 28.453C51.795 29.1126 50.8575 29.5813 49.8497 29.8124V33.6753C49.8497 34.6039 49.2131 35.3577 48.4289 35.3577C47.6447 35.3577 47.0082 34.6039 47.0082 33.6753V29.8124C46.0003 29.5813 45.0626 29.1126 44.2405 28.453L41.9334 31.1852C41.6549 31.515 41.2912 31.6786 40.9275 31.6786C40.5637 31.6786 40.1998 31.515 39.9232 31.1852C39.3681 30.5278 39.3681 29.4623 39.9232 28.8051L42.2307 26.073C41.6736 25.0994 41.278 23.9913 41.0826 22.7955H37.8207C37.0365 22.7955 36.3999 22.0417 36.3999 21.1131C36.3999 20.1844 37.0365 19.4306 37.8207 19.4306H41.0826C41.2778 18.2349 41.6736 17.1267 42.2307 16.1532L39.9232 13.421C39.3681 12.7637 39.3681 11.6981 39.9232 11.041C40.4785 10.3836 41.3783 10.3836 41.933 11.041L44.2402 13.7734C45.0625 13.1138 46 12.6451 47.0078 12.414V8.55088C47.0078 7.62222 47.6444 6.86841 48.4286 6.86841C49.2128 6.86841 49.8493 7.62222 49.8493 8.55088V12.4138C50.8571 12.6449 51.7948 13.1136 52.6169 13.7731L54.9241 11.0408C55.4792 10.3834 56.379 10.3834 56.9339 11.0408C57.489 11.6981 57.489 12.7637 56.9339 13.4208L54.6264 16.153C55.1834 17.1265 55.5792 18.2347 55.7745 19.4304L59.0372 19.4306ZM53.07 21.1131C53.07 18.0824 50.9882 15.6171 48.4289 15.6171C45.8697 15.6171 43.7878 18.0824 43.7878 21.1131C43.7878 24.1438 45.8697 26.6091 48.4289 26.6091C50.9882 26.6091 53.07 24.1438 53.07 21.1131Z"
  }), DesignSvg_jsx("path", {
    fill: grad,
    d: "M35.1704 63.7105C35.849 63.7105 36.3999 64.6125 36.3999 65.7237C36.3999 66.8349 35.849 67.7368 35.1704 67.7368H7.62943C6.95078 67.7368 6.3999 66.8349 6.3999 65.7237C6.3999 64.6125 6.95078 63.7105 7.62943 63.7105H35.1704Z"
  }), DesignSvg_jsx("path", {
    fill: grad,
    d: "M25.0048 72.9474C25.4437 72.9474 25.7999 73.8494 25.7999 74.9605C25.7999 76.0717 25.4437 76.9737 25.0048 76.9737H7.195C6.75614 76.9737 6.3999 76.0717 6.3999 74.9605C6.3999 73.8494 6.75614 72.9474 7.195 72.9474H25.0048Z"
  }), DesignSvg_jsx("path", {
    stroke: grad,
    d: "M2.5 60.1087L3.6578 58.8818C14.436 47.4603 33.0022 48.8884 41.9069 61.824V61.824M59.211 86.9611L41.9069 61.824M41.9069 61.824L53.4819 45.1812C63.9919 30.0697 86.0781 29.3113 97.6 43.6661V43.6661",
    strokeWidth: "5"
  }), DesignSvg_jsx("rect", {
    stroke: grad,
    x: "2.5",
    y: "2.5",
    width: "95",
    height: "85",
    rx: "7.5",
    strokeWidth: "5"
  }));
};
// CONCATENATED MODULE: ./components/Offering/Offering.tsx
var Offering_jsx = external_react_default.a.createElement;






const Offering = ({}) => {
  const services = [{
    service: 'Conception',
    typography: `Nos concepteurs professionnels concevront soigneusement vos produits pour les adapter à votre plan marketing.`
  }, {
    service: 'Impression',
    typography: `Nos conducteurs délicats sont prêts à imprimer vos flyers, cartes de visite ... et plus encore pour s'adapter à la conception souhaitée.`
  }, {
    service: 'Livraison',
    typography: `Comme toutes les autres entreprises décentes, nous utilisons Amana Express pour nous assurer que vos produits sont livrés en toute sécurité à votre porte.`
  }];
  return Offering_jsx("section", {
    className: Offering_module_default.a.sectionOffering
  }, Offering_jsx("h1", {
    className: Offering_module_default.a.servicesHead
  }, "Ce Que Nous Offrons :"), Offering_jsx("div", {
    className: Offering_module_default.a.Services
  }, services.map(ex => {
    let image;

    switch (ex.service) {
      case 'Livraison':
        image = Offering_jsx(DeliverSvg, {
          grad: Offering_module_default.a.blue
        });
        break;

      case 'Impression':
        image = Offering_jsx(PrintSvg, {
          bg: Offering_module_default.a.orange,
          grad: Offering_module_default.a.blue
        });
        break;

      default:
        image = Offering_jsx(DesignSvg, {
          grad: Offering_module_default.a.blue
        });
        break;
    }

    return Offering_jsx("div", {
      key: ex.service,
      className: Offering_module_default.a.Service
    }, image, Offering_jsx("div", {
      className: Offering_module_default.a.typography
    }, Offering_jsx("h1", null, ex.service), Offering_jsx("p", null, ex.typography)));
  })));
};

/* harmony default export */ var Offering_Offering = (Offering);
// EXTERNAL MODULE: ./components/Contact/Contact.module.scss
var Contact_module = __webpack_require__("Rwme");
var Contact_module_default = /*#__PURE__*/__webpack_require__.n(Contact_module);

// EXTERNAL MODULE: ./components/FlipCard/FlipCard.module.scss
var FlipCard_module = __webpack_require__("Wkah");
var FlipCard_module_default = /*#__PURE__*/__webpack_require__.n(FlipCard_module);

// EXTERNAL MODULE: ./components/EmailPhoneDirection/EmailPhoneDirection.module.scss
var EmailPhoneDirection_module = __webpack_require__("ew1k");
var EmailPhoneDirection_module_default = /*#__PURE__*/__webpack_require__.n(EmailPhoneDirection_module);

// EXTERNAL MODULE: external "react-obfuscate"
var external_react_obfuscate_ = __webpack_require__("cYuJ");
var external_react_obfuscate_default = /*#__PURE__*/__webpack_require__.n(external_react_obfuscate_);

// CONCATENATED MODULE: ./components/EmailPhoneDirection/EmailPhoneDirection.tsx
var EmailPhoneDirection_jsx = external_react_default.a.createElement;



const {
  email,
  phone,
  direction
} = EmailPhoneDirection_module_default.a;

const Email = () => EmailPhoneDirection_jsx("div", {
  className: email
}, EmailPhoneDirection_jsx("h1", null, "Notre Email:"), EmailPhoneDirection_jsx(external_react_obfuscate_default.a, {
  email: "imprimeur.lina@gmail.com",
  headers: {
    subject: "Express Imprimerie Client",
    body: "Question?"
  }
}));

const Phone = () => EmailPhoneDirection_jsx("div", {
  className: phone
}, EmailPhoneDirection_jsx("h1", null, "Cliquez pour appeler:"), EmailPhoneDirection_jsx(external_react_obfuscate_default.a, {
  tel: "06 63 15 22 49"
}));

const Direction = () => EmailPhoneDirection_jsx("div", {
  className: direction
}, EmailPhoneDirection_jsx("h1", null, "O\xF9 sommes-nous?"), EmailPhoneDirection_jsx("p", null, " Sal\xE9, El Qaria, Hay Al Amal, Secteur 2, Rue Missoura"));

const EmailPhoneDirection = ({
  name
}) => {
  const toBeRendered = name === "phone" ? EmailPhoneDirection_jsx(Phone, null) : name === "email" ? EmailPhoneDirection_jsx(Email, null) : EmailPhoneDirection_jsx(Direction, null);
  return EmailPhoneDirection_jsx(external_react_default.a.Fragment, null, toBeRendered);
};
// CONCATENATED MODULE: ./components/svg/Navigation.tsx
var Navigation_jsx = external_react_default.a.createElement;


const Navigation = ({
  className
}) => {
  return Navigation_jsx(SvgHolder["a" /* default */], {
    className: className,
    viewBox: "0 0 24 24"
  }, Navigation_jsx("path", {
    d: "M12 2L4.5 20.29l.71.71L12 18l6.79 3 .71-.71z"
  }));
};
// CONCATENATED MODULE: ./components/svg/Email.tsx
var Email_jsx = external_react_default.a.createElement;


const Email_Email = ({
  className
}) => {
  return Email_jsx(SvgHolder["a" /* default */], {
    className: className,
    viewBox: "0 0 24 24"
  }, Email_jsx("path", {
    d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
  }));
};
// CONCATENATED MODULE: ./components/svg/Phone.tsx
var Phone_jsx = external_react_default.a.createElement;


const Phone_Phone = ({
  className
}) => {
  return Phone_jsx(SvgHolder["a" /* default */], {
    className: className,
    viewBox: "0 0 24 24"
  }, Phone_jsx("path", {
    d: "M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"
  }));
};
// CONCATENATED MODULE: ./components/FlipCard/FlipCard.tsx
var FlipCard_jsx = external_react_default.a.createElement;






const {
  flipCard,
  flipCardInner,
  flipCardFront,
  flipCardBack,
  contactIcons
} = FlipCard_module_default.a;
const FlipCard = ({
  name,
  className
}) => {
  const svgToBeRendered = name === "phone" ? FlipCard_jsx(Phone_Phone, {
    className: contactIcons
  }) : name === "direction" ? FlipCard_jsx(Navigation, {
    className: contactIcons
  }) : FlipCard_jsx(Email_Email, {
    className: contactIcons
  });
  return FlipCard_jsx("div", {
    className: className
  }, FlipCard_jsx("div", {
    className: flipCard
  }, FlipCard_jsx("div", {
    className: flipCardInner
  }, FlipCard_jsx("div", {
    className: flipCardFront
  }, svgToBeRendered), FlipCard_jsx("div", {
    className: flipCardBack
  }, FlipCard_jsx(EmailPhoneDirection, {
    name: name
  })))));
};
// EXTERNAL MODULE: ./components/svg/WhatsApp.tsx
var WhatsApp = __webpack_require__("1N5A");

// EXTERNAL MODULE: ./components/svg/Facebook.tsx
var Facebook = __webpack_require__("wUH0");

// EXTERNAL MODULE: ./components/svg/Instagram.tsx
var Instagram = __webpack_require__("ogQf");

// CONCATENATED MODULE: ./components/Contact/Contact.tsx
var Contact_jsx = external_react_default.a.createElement;







const {
  phoneItem,
  emailItem,
  directionItem
} = FlipCard_module_default.a;
const {
  contactContainer,
  contactSection,
  contactInput,
  contactHeading,
  contactAside,
  whyContact,
  whyContactUl,
  howContact,
  howContactUl
} = Contact_module_default.a;

const FlipCards = Contact_jsx("div", {
  className: contactInput
}, Contact_jsx(FlipCard, {
  className: phoneItem,
  name: "phone"
}), Contact_jsx(FlipCard, {
  className: emailItem,
  name: "email"
}), Contact_jsx(FlipCard, {
  className: directionItem,
  name: "direction"
}));

const Contact = () => {
  return Contact_jsx("section", {
    className: contactSection
  }, Contact_jsx("div", {
    className: contactContainer
  }, Contact_jsx("h1", {
    className: contactHeading
  }, "Contactez-nous : "), Contact_jsx("aside", {
    className: contactAside
  }, Contact_jsx("div", {
    className: whyContact
  }, Contact_jsx("h3", null, "Pourquoi voudriez-vous nous contacter?"), Contact_jsx("ul", {
    className: whyContactUl
  }, Contact_jsx("li", null, "acheter un produit"), Contact_jsx("li", null, "demandes de renseignements sur un produit "), Contact_jsx("li", null, "besoin d'une r\xE9union en personne"), Contact_jsx("li", null, "je veux juste dire salut"))), Contact_jsx("div", {
    className: howContact
  }, Contact_jsx("h3", null, "Comment nous contacter"), Contact_jsx("ul", {
    className: howContactUl
  }, Contact_jsx("li", null, Contact_jsx("a", {
    href: "https://www.facebook.com/Limprimeur-107384444097355/?ref=bookmarks"
  }, " ", Contact_jsx(Facebook["a" /* Facebook */], null))), Contact_jsx("li", null, Contact_jsx("a", {
    href: "https://www.instagram.com/express.imprimerie/"
  }, Contact_jsx(Instagram["a" /* Instagram */], null))), Contact_jsx("li", null, Contact_jsx("a", {
    href: "https://wa.me/212663152249"
  }, Contact_jsx(WhatsApp["a" /* WhatsApp */], null), " "))))), FlipCards));
};

/* harmony default export */ var Contact_Contact = (Contact);
// CONCATENATED MODULE: ./pages/index.tsx

var pages_jsx = external_react_default.a.createElement;





 // import dynamic from 'next/dynamic';
// import LazyLoader from '../components/LazyLoader/LazyLoader';
// const About = dynamic(() => import('../components/About/About'),
//   { loading: () => <LazyLoader /> });
// const Offering = dynamic(() => import('../components/Offering/Offering'),
//   { loading: () => <LazyLoader /> });
// const Contact = dynamic(() => import('../components/Contact/Contact'),
//   { loading: () => <LazyLoader /> });
// const Products = dynamic(() => import('../components/Products/Products'),
//   { loading: () => <LazyLoader /> });
// const Hero = dynamic(() => import('../components/Hero/Hero'),
//   { loading: () => <LazyLoader /> })

const IndexPage = () => pages_jsx(Layout["a" /* default */], {
  title: "Express Imprimerie"
}, pages_jsx(Hero_Hero, null), pages_jsx(About_About, null), pages_jsx(Products_Products, null), pages_jsx(Offering_Offering, null), pages_jsx(Contact_Contact, null));

/* harmony default export */ var pages = __webpack_exports__["default"] = (IndexPage);

/***/ }),

/***/ "284h":
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__("cDf5");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "3WeD":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.searchParamsToUrlQuery = searchParamsToUrlQuery;
exports.urlQueryToSearchParams = urlQueryToSearchParams;
exports.assign = assign;

function searchParamsToUrlQuery(searchParams) {
  const query = {};
  searchParams.forEach((value, key) => {
    if (typeof query[key] === 'undefined') {
      query[key] = value;
    } else if (Array.isArray(query[key])) {
      ;
      query[key].push(value);
    } else {
      query[key] = [query[key], value];
    }
  });
  return query;
}

function urlQueryToSearchParams(urlQuery) {
  const result = new URLSearchParams();
  Object.entries(urlQuery).forEach(([key, value]) => {
    if (Array.isArray(value)) {
      value.forEach(item => result.append(key, item));
    } else {
      result.set(key, value);
    }
  });
  return result;
}

function assign(target, ...searchParamsList) {
  searchParamsList.forEach(searchParams => {
    Array.from(searchParams.keys()).forEach(key => target.delete(key));
    searchParams.forEach((value, key) => target.append(key, value));
  });
  return target;
}

/***/ }),

/***/ "6D7l":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.formatUrl = formatUrl;

var querystring = _interopRequireWildcard(__webpack_require__("3WeD"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function () {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
} // Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


const slashedProtocols = /https?|ftp|gopher|file/;

function formatUrl(urlObj) {
  let {
    auth,
    hostname
  } = urlObj;
  let protocol = urlObj.protocol || '';
  let pathname = urlObj.pathname || '';
  let hash = urlObj.hash || '';
  let query = urlObj.query || '';
  let host = false;
  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';

  if (urlObj.host) {
    host = auth + urlObj.host;
  } else if (hostname) {
    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname);

    if (urlObj.port) {
      host += ':' + urlObj.port;
    }
  }

  if (query && typeof query === 'object') {
    query = String(querystring.urlQueryToSearchParams(query));
  }

  let search = urlObj.search || query && `?${query}` || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash[0] !== '#') hash = '#' + hash;
  if (search && search[0] !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, encodeURIComponent);
  search = search.replace('#', '%23');
  return `${protocol}${host}${pathname}${search}${hash}`;
}

/***/ }),

/***/ "CSOn":
/***/ (function(module, exports) {

module.exports = require("react-transition-group");

/***/ }),

/***/ "DC6Z":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"container": "Products_container__2Q-Bz",
	"cards": "Products_cards__1AhRL"
};


/***/ }),

/***/ "H3hI":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"cards": "Cards_cards__uuOJ1",
	"leftCardBtn": "Cards_leftCardBtn__3IZCc",
	"rightCardBtn": "Cards_rightCardBtn__3-k8D",
	"carda": "Cards_carda__2Ge8t",
	"colCard": "Cards_colCard__-Eyxt",
	"indicatorContainer": "Cards_indicatorContainer__tg_XY",
	"indicatorItem": "Cards_indicatorItem__2cXJe"
};


/***/ }),

/***/ "LnhC":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"aboutContainer": "About_aboutContainer__2oiBW",
	"aboutHeading": "About_aboutHeading__2WXmf",
	"readMore": "About_readMore__2G9MQ",
	"aboutMission": "About_aboutMission__3o7R1",
	"aboutPhilosophie": "About_aboutPhilosophie__1OOdY",
	"aboutConcept": "About_aboutConcept__uf7Ri"
};


/***/ }),

/***/ "Osoz":
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/router-context.js");

/***/ }),

/***/ "Rwme":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"contactSection": "Contact_contactSection__FZmm_",
	"contactContainer": "Contact_contactContainer__xsPfR",
	"contactHeading": "Contact_contactHeading__3OTMc",
	"contactAside": "Contact_contactAside__1kRmm",
	"contactInput": "Contact_contactInput__loGqK",
	"whyContact": "Contact_whyContact__dn3Q6",
	"howContact": "Contact_howContact__3aOxn",
	"whyContactUl": "Contact_whyContactUl__1WiS5",
	"howContactUl": "Contact_howContactUl__2NjRx"
};


/***/ }),

/***/ "SQJ2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("cDcd");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;


const SvgHolder = ({
  width = "300px",
  height = "300px",
  viewBox = "0 0 1000 600",
  fill = "none",
  className,
  children
}) => {
  return __jsx("svg", {
    width: width,
    height: height,
    viewBox: viewBox,
    fill: fill,
    xmlns: "http://www.w3.org/2000/svg"
  }, __jsx("g", {
    className: className
  }, children));
};

/* harmony default export */ __webpack_exports__["a"] = (Object(react__WEBPACK_IMPORTED_MODULE_0__["memo"])(SvgHolder));

/***/ }),

/***/ "TlNf":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#fbd9b8",
	"sectionOffering": "Offering_sectionOffering__2_Yyb",
	"servicesHead": "Offering_servicesHead__3PJ0L",
	"Services": "Offering_Services__3UGjI",
	"Service": "Offering_Service__3Nnw1",
	"typography": "Offering_typography__1rZL8"
};


/***/ }),

/***/ "TqRt":
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "Tu/p":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"bail": "Hero_bail__2IKDh",
	"calltoAction": "Hero_calltoAction__2RIvI",
	"bailHeading": "Hero_bailHeading__zw0zw",
	"letters1": "Hero_letters1__VKz--",
	"lightsOn": "Hero_lightsOn__23mVM",
	"letters2": "Hero_letters2__2kx0U",
	"letters3": "Hero_letters3__iah9k",
	"letters4": "Hero_letters4__2DNgE",
	"letters5": "Hero_letters5__1KJGl",
	"letters6": "Hero_letters6__1sV5Z",
	"letters7": "Hero_letters7__1_TaC",
	"letters8": "Hero_letters8__rt25E",
	"letters9": "Hero_letters9__11wJX",
	"letters10": "Hero_letters10__3sEkg",
	"letters11": "Hero_letters11__2D0Y9",
	"letters12": "Hero_letters12__1uFPk",
	"letters13": "Hero_letters13__3OwkR",
	"letters14": "Hero_letters14__1opeB",
	"letters15": "Hero_letters15__3LWWh",
	"letters16": "Hero_letters16__31LhX",
	"letters17": "Hero_letters17__3Yu_N",
	"letters18": "Hero_letters18__23FOb",
	"letters19": "Hero_letters19__1HNPx"
};


/***/ }),

/***/ "VuTL":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"cardImage": "Card_cardImage__dg14W",
	"cardText": "Card_cardText__DVNi8",
	"cardDescription": "Card_cardDescription__1iPit",
	"cardLink": "Card_cardLink__1DxPf"
};


/***/ }),

/***/ "Wkah":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"flipCard": "FlipCard_flipCard__SaJfS",
	"flipCardInner": "FlipCard_flipCardInner__Ys6r1",
	"flipCardFront": "FlipCard_flipCardFront__QEcNP",
	"flipCardBack": "FlipCard_flipCardBack__2izGB",
	"contactIcons": "FlipCard_contactIcons__3-vwn",
	"phoneItem": "FlipCard_phoneItem__uU1O-",
	"emailItem": "FlipCard_emailItem__IYQl9",
	"direction": "FlipCard_direction__2AtsX"
};


/***/ }),

/***/ "WuiG":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const carte = {
  minPrice: 249,
  values: {
    Taille: [{
      name: " ",
      value: " "
    }, {
      name: "8.5*5.5cm",
      value: "8.5*5.5cm"
    }, {
      name: "9*5.5cm",
      value: "9*5.5cm"
    }, {
      name: "9.5*5.5cm",
      value: "9.5*5.5cm"
    }],
    Quantité: [{
      name: " ",
      value: " "
    }, {
      name: "500",
      value: "500"
    }, {
      name: "1000",
      value: "1000"
    }, {
      name: "1500",
      value: "1500"
    }, {
      name: "2000",
      value: "2000"
    }],
    Conception: [{
      name: " ",
      value: " "
    }, {
      name: 'Oui',
      value: 'Oui'
    }, {
      name: 'Non',
      value: 'Non'
    }],
    Faces: [{
      name: " ",
      value: " "
    }, {
      name: "Recto",
      value: "Recto"
    }, {
      name: "Recto Verso",
      value: "Recto Verso"
    }],
    Pélliculage: [{
      name: " ",
      value: " "
    }, {
      name: 'mat',
      value: 'mat'
    }, {
      name: 'brillant',
      value: 'brillant'
    }],
    Papier: [{
      name: " ",
      value: " "
    }, {
      name: "300gr",
      value: "300gr"
    }]
  }
};
const flyer = {
  minPrice: 300,
  values: {
    Taille: [{
      name: " ",
      value: " "
    }, {
      name: "A6",
      value: "A6"
    }, {
      name: "A5",
      value: "A5"
    }, {
      name: "A4",
      value: "A4"
    }],
    Quantité: [{
      name: " ",
      value: " "
    }, {
      name: "500",
      value: "500"
    }, {
      name: "1000",
      value: "1000"
    }, {
      name: "1500",
      value: "1500"
    }, {
      name: "2000",
      value: "2000"
    }],
    Conception: [{
      name: " ",
      value: " "
    }, {
      name: 'Oui',
      value: 'Oui'
    }, {
      name: 'Non',
      value: 'Non'
    }],
    Papier: [{
      name: '',
      value: ''
    }, {
      name: '135g Brilant',
      value: '135g Brilant'
    }]
  }
};
const brochure = {
  minPrice: 100,
  values: {
    Taille: [{
      name: " ",
      value: " "
    }, {
      name: "A6",
      value: "A6"
    }, {
      name: "A5",
      value: "A5"
    }, {
      name: "A4",
      value: "A4"
    }],
    Quantité: [{
      name: " ",
      value: " "
    }, {
      name: "500",
      value: "500"
    }, {
      name: "1000",
      value: "1000"
    }, {
      name: "1500",
      value: "1500"
    }, {
      name: "2000",
      value: "2000"
    }],
    Conception: [{
      name: " ",
      value: " "
    }, {
      name: 'Oui',
      value: 'Oui'
    }, {
      name: 'Non',
      value: 'Non'
    }],
    Faces: [{
      name: " ",
      value: " "
    }, {
      name: "Recto",
      value: "Recto"
    }, {
      name: "Recto Verso",
      value: "Recto Verso"
    }]
  }
};
const poster = {
  minPrice: 299,
  values: {
    Taille: [{
      name: " ",
      value: " "
    }, {
      name: `15*15cm - Carré`,
      value: `15*15cm - Carré`
    }, {
      name: `20*20 cm - Carré`,
      value: `20*20 cm - Carré`
    }, {
      name: `30*30 cm - Carré`,
      value: `30*30 cm - Carré`
    }, {
      name: `40*50 cm - Rectangle`,
      value: `40*50 cm - Rectangle`
    }, {
      name: `50*75 cm - Rectangle`,
      value: `50*75 cm - Rectangle`
    }, {
      name: `70*100 cm - Rectangle`,
      value: `70*100 cm - Rectangle`
    }],
    Support: [{
      name: '',
      value: ''
    }, {
      name: 'Aliminium',
      value: 'Aliminium'
    }]
  }
};
const entete = {
  minPrice: 519,
  values: {
    Taille: [{
      name: " ",
      value: " "
    }, {
      name: "A4",
      value: "A4"
    }],
    Quantité: [{
      name: " ",
      value: " "
    }, {
      name: "500",
      value: "500"
    }, {
      name: "1000",
      value: "1000"
    }, {
      name: "1500",
      value: "1500"
    }, {
      name: "2000",
      value: "2000"
    }],
    Conception: [{
      name: " ",
      value: " "
    }, {
      name: 'Oui',
      value: 'Oui'
    }, {
      name: 'Non',
      value: 'Non'
    }],
    Faces: [{
      name: " ",
      value: " "
    }, {
      name: "Recto",
      value: "Recto"
    }, {
      name: "Recto Verso",
      value: "Recto Verso"
    }],
    Papier: [{
      name: " ",
      value: " "
    }, {
      name: "90gr",
      value: "90gr"
    }]
  }
};
const depliant = {
  minPrice: 100,
  values: {
    Taille: [{
      name: " ",
      value: " "
    }, {
      name: "A5",
      value: "A5"
    }, {
      name: "A4",
      value: "A4"
    }],
    Quantité: [{
      name: " ",
      value: " "
    }, {
      name: "25",
      value: "25"
    }, {
      name: "50",
      value: "50"
    }, {
      name: "100",
      value: "100"
    }, {
      name: "200",
      value: "200"
    }, {
      name: "500",
      value: "500"
    }, {
      name: "1000",
      value: "1000"
    }]
  }
};
const test = {
  minPrice: 100,
  values: {
    Taille: [{
      name: " ",
      value: " "
    }, {
      name: "A6",
      value: "A6"
    }, {
      name: "A5",
      value: "A5"
    }, {
      name: "A4",
      value: "A4"
    }, {
      name: "A4",
      value: "A4"
    }, {
      name: "A4",
      value: "A4"
    }]
  }
};
const details = [{
  name: `Sacs Publicitaire`,
  id: 0,
  src: '/assets/image11.webp',
  obj: test,
  content: {
    description: [`Parmi les nombreux objets promotionnels, le sac publicitaire est, aujourd’hui, un article incontournable pour mettre en avant votre communication. Sac en papier, en coton personnalisable, sac shopping ou cabas, le sac publicitaire est décliné dans de nombreux modèles et se retrouve dans tous les foyers. Offrant une grande surface de marquage, ce cadeau personnalisable pas cher est le moyen de se différencier auprès d’un large public à moindre coût.`],
    accordion: [{
      title: 'Modèle Classique',
      answer: 'Répondant à l’immense majorité des besoins, en polyester 175 µm de type bâche Blockout (qui enpêche la lumière de le traverser)',
      id: 0
    }, {
      title: 'Modèle XXL',
      answer: 'En tissu polyester Airtex, 330g/m2. Idéal pour un impact maximal et très pratique pour créer une séparation. Attention ce modèle grand format est beaucoup plus lourd et nécessite deux personnes pour le montage.',
      id: 1
    }, {
      title: 'Modèle Outdoor',
      answer: 'En tissus polyester 330g/m2. Prévu pour un usage en extérieur, imprimé sur deux faces. Ce Roll-up est montés sur un système à suspensions pour réduire la prise au vent.',
      id: 2
    }]
  }
}, {
  name: 'Cartes de Visite',
  id: 1,
  src: '/assets/image7.webp',
  obj: carte,
  content: {
    description: [` Element indispensable de votre communication personnelle ou professionnelle , votre carte de visite reflète votre personnalité ou l’image de votre entreprise.`, `Nous offrons un large éventail de possibilités pour produire une carte de visite à votre image : Carton jusqu’à 400g/m2, vernis UV, pelliculage mat, brillant ou soft touch (effet “peau de pêche”)`, `Le format 85×55 mm ne se limite pas à la simple carte de visite. Adoptez ce format pour tous vos besoins tels que l’impression de cartes
  de rendez-vous, cartes de fidélité ou tout autre élément de communication / marketing de votre activité professionnelle.`, `L’impression offset n’est pas recommandée pour les tirages inférieurs à 1’000 cartes de visite, optez plutôt pour l’impression numérique.
  C’est en revanche la solution idéale pour des tirages plus importants.`],
    accordion: [{
      title: 'Dans quels délais mes cartes seront-elles disponibles ?',
      answer: '<strong>Les impressions offset nécessitent un délai de production d’environ 10 jours</strong> (du jour de la commande à la mise à disposition). Pour des commandes plus urgentes nous vous proposons d’opter pour l’impression numérique.',
      id: 0
    }, {
      title: 'Quelle différence entre papier non couché et papier couché ?',
      answer: 'Notre papier offset non couché est un papier en cellulose sur lequel il est possible d’écrire et d’imprimer. Il est donc possible de le réutiliser dans les photocopieurs ou les imprimantes.<br> Le papier couché est recouvert d’une couche\n' + '                synthétique mate ou brillante qui permet d’obtenir une surface lisse et stable, plus élégante avec un rendu de qualité supérieure.',
      id: 1
    }, {
      title: "Proposez-vous d'autres types de papier ?",
      answer: 'Oui, nous proposons un choix important de papiers avec des aspects et des grammages différents. Des échantillons d’impressions sont disponibles dans nos succursales.',
      id: 2
    }, {
      title: 'Comment choisir entre numérique et offset ?',
      answer: 'De nombreux critères sont à prendre en compte. Nos collaborateurs sauront vous orienter vers de meilleur choix en fonction de vos besoins. Les critères principaux sont fonction du volume à imprimer (n fois la même page), du délai (environ\n' + '                    10 jours pour l’offset), du résultat attendu et des finitions souhaitées (échantillons avec l’ensemble des variantes disponibles dans nos succursales)<br>',
      id: 3
    }, {
      title: 'Quels formats de fichiers acceptez-vous ?',
      answer: 'Nous acceptons une grande variété de formats de fichiers, mais pour une impression offset réussie un certain nombre de paramètres doivent-être respectés. Consultez notre guide de préparation des documents dans la rubrique d’aide.',
      id: 4
    }, {
      title: "Peut-on imprimer dans d'autres dimensions ?",
      answer: 'Nos cartes de visite adoptent le format standard de 85 x 55 mm mais nous proposons de nombreuses alternatives en impression numérique ou impression offset.',
      id: 5
    }, {
      title: 'Proposez-vous des couleurs Pantone ?',
      answer: 'Oui, pour ce type de besoin veuillez demander un devis gratuit.',
      id: 6
    }]
  }
}, {
  name: 'Papier en-tête',
  id: 2,
  src: '/assets/image6.webp',
  obj: entete,
  content: {
    description: [`Vous devez imprimer plus d’une centaine de fois le même document A4 ? Papier à lettre, affichette, notice d’utilisation, courrier commercial, documentation interne ? La procédé d’impression offset est particulièrement recommandé pour allier qualité
  d’impression et maîtrise des coûts de production.`, `Nous imprimons vos documents en noir ou couleurs quadri, en recto ou recto/verso sur du papier offset jusqu’à 120g/m².`, `Pour des impressions à but marketing ou d’autres dimensions que le A4 nous vous recommandons de découvrir nos offres d’impression de  flyers et dépliants .`, `Pour vous permettre de comparer, nous tenons à votre disposition des échantillons d’impression dans chacune de nos filiales.`],
    accordion: [{
      title: 'Dans quels délais mes impressions seront-elles disponibles ?',
      answer: '<strong>Les impressions offset nécessitent un délai de production d’environ 8 à 10 jours</strong> (du jour de la commande à la mise à disposition). Pour des commandes plus urgentes nous vous proposons d’opter pour l’impression numérique.',
      id: 0
    }, {
      title: 'Quelle différence entre papier non couché et papier couché ?',
      answer: 'Notre papier offset non couché est un papier en cellulose sur lequel il est possible d’écrire et d’imprimer. Il est donc possible de le réutiliser dans les photocopieurs ou les imprimantes.<br> Le papier couché est recouvert d’une couche synthétique\n' + '                    mate ou brillante qui permet d’obtenir une surface lisse et stable, plus élégante avec un rendu de qualité supérieure.',
      id: 1
    }, {
      title: "Proposez-vous d'autres types de papier ?",
      answer: 'Oui, nous proposons un choix important de papiers avec des aspects et des grammages différents. Des échantillons d’impressions sont disponibles dans nos succursales.',
      id: 2
    }, {
      title: 'Comment choisir entre numérique et offset ?',
      answer: 'De nombreux critères sont à prendre en compte. Nos collaborateurs sauront vous orienter vers de meilleur choix en fonction de vos besoins. Les critères principaux sont fonction du volume à imprimer (n fois la même page), du délai (environ\n' + '                        10 jours pour l’offset), du résultat attendu et des finitions souhaitées (échantillons avec l’ensemble des variantes disponibles dans nos succursales)<br>',
      id: 3
    }, {
      title: 'Quels formats de fichiers acceptez-vous ?',
      answer: 'Nous acceptons une grande variété de formats de fichiers, mais pour une impression offset réussie un certain nombre de paramètres doivent-être respectés. Consultez notre guide de préparation des documents dans la rubrique d’aide.',
      id: 4
    }, {
      title: 'Peut-on imprimer sur un format autre que le A4 ?',
      answer: 'Oui, nous proposons de nombreux formats de papier, vous pouvez par exemple regarder les formats disponibles pour les flyers.',
      id: 5
    }, {
      title: 'Proposez-vous des couleurs Pantone ?',
      answer: 'Oui, pour ce type de besoin veuillez demander un devis gratuit.',
      id: 6
    }]
  }
}, {
  name: 'FLYERS',
  id: 3,
  src: '/assets/image8.webp',
  obj: flyer,
  content: {
    description: [`Vecteur de communication de main à main par excellence, le flyer est le moyen idéal pour annoncer un événement, promouvoir un service, mettre en lumière une activité.`, `Vos flyers véhiculent l’image de votre entreprise ou association, il est donc essentiel d’obtenir un résultat conforme à vos attentes.`, `Nous vous proposons une qualité d’impression premium tout en offrant un niveau de prix extrêmement attractif.`],
    accordion: [{
      title: 'Dans quels délais mes impressions seront-elles disponibles ?',
      answer: 'Les impressions offset nécessitent un délai de production de 10 jours (du jour de la commande à la mise à disposition). Pour des commandes plus urgentes nous vous proposons d’opter pour l’impression numérique.',
      id: 0
    }, {
      title: 'Quelle différence entre papier couché et non couché ?',
      answer: 'Notre papier offset non couché est un papier en cellulose sur lequel il est possible d’écrire et d’imprimer. Il est donc possible de le réutiliser dans les photocopieurs ou les imprimantes.<br> Le papier couché est recouvert d’une couche\n' + '                    synthétique mate ou brillante qui permet d’obtenir une surface lisse et stable, plus élégante avec un rendu de qualité supérieure.',
      id: 1
    }, {
      title: 'Comment choisir entre numérique et offset ?',
      answer: 'De nombreux critères sont à prendre en compte. Nos collaborateurs sauront vous orienter vers de meilleur choix en fonction de vos besoins. Les critères principaux sont fonction du volume à imprimer (n fois la même page), du délai (environ\n' + '                        10 jours pour l’offset), du résultat attendu et des finitions souhaitées (échantillons avec l’ensemble des variantes disponibles dans nos succursales)',
      id: 2
    }, {
      title: 'Quels formats de fichiers acceptez-vous ?',
      answer: 'Nous acceptons une grande variété de formats de fichiers, mais pour une impression offset réussie un certain nombre de paramètres doivent-être respectés. Consultez notre guide de préparation des documents dans la rubrique d’aide.',
      id: 3
    }, {
      title: "Peut-on imprimer sur d'autres formats de papier ?",
      answer: 'Oui, nous proposons un vaste choix de formats. Pour ces demandes spécifiques qui ne figurent pas sur le site vous pouvez demander un devis gratuit',
      id: 4
    }, {
      title: "Proposez-vous d'autres types de papier ?",
      answer: 'Oui, nous proposons un choix important de papiers avec des aspects et des grammages différents. Des échantillons d’impressions sont disponibles dans nos succursales.',
      id: 5
    }, {
      title: 'Proposez-vous des couleurs Pantone ?',
      answer: 'Oui, munissez vous de la référence de votre couleur et demandez un devis gratuit.',
      id: 6
    }]
  }
}, {
  name: 'DÉPLIANTS',
  id: 4,
  src: '/assets/image4.webp',
  obj: depliant,
  content: {
    description: [`Les dépliants sont le moyen idéal pour présenter les services de votre entreprise, le menu de votre restaurant, les tarifs de vos prestations, vos offres de voyages ou de croisières etc.`, `<b>Classiques dépliants </b>3 volets au format DL ou dépliants originaux carrés, nous proposons un vaste choix de formats et de finitions qui sauront s’adapter à vos exigences.`],
    accordion: [{
      title: "Qu'est-ce qu'un pli roulé ?",
      answer: 'Le document est plié sur lui même au tiers de sa longueur. C’est le format idéal pour l’ouverture progressive du document, afin que les pages soient lues dans un ordre précis.',
      id: 0
    }, {
      title: "Qu'est-ce qu'un pli accordéon ?",
      answer: 'C’est le pli en “Z” classique. Il est idéal pour que le contenu de la page soit lu “d’un bloc”',
      id: 1
    }, {
      title: 'Dans quels délais mes dépliants seront-ils disponibles ?',
      answer: '<strong>Les impressions offset nécessitent un délai de production d’environ 10 jours</strong> (du jour de la commande à la mise à disposition)',
      id: 2
    }, {
      title: 'Quelle différence entre papier non couché et papier couché ?',
      answer: 'Notre papier offset non couché est un papier en cellulose sur lequel il est possible d’écrire et d’imprimer. Il est donc possible de le réutiliser dans les photocopieurs ou les imprimantes.<br> Le papier couché est recouvert d’une couche\n' + '                    synthétique mate ou brillante qui permet d’obtenir une surface lisse et stable, plus élégante avec un rendu de qualité supérieure.',
      id: 3
    }, {
      title: "Proposez-vous d'autres types de papier ?",
      answer: 'Oui, nous proposons un choix important de papiers avec des aspects et des grammages différents. Des échantillons d’impressions sont disponibles dans nos succursales.',
      id: 4
    }, {
      title: 'Quels formats de fichiers acceptez-vous ?',
      answer: 'Nous acceptons une grande variété de formats de fichiers, mais pour une impression offset réussie un certain nombre de paramètres doivent-être respectés. Consultez notre guide de préparation des documents dans la rubrique d’aide.',
      id: 5
    }, {
      title: 'Proposez-vous des couleurs Pantone ?',
      answer: 'Oui, pour ce type de besoin veuillez demander un devis gratuit',
      id: 6
    }]
  }
}, {
  name: `BLOC-NOTES`,
  id: 5,
  obj: brochure,
  src: '/assets/image5.webp',
  content: {
    description: [`Prises de notes, prises de commande, objets publicitaires … Imprimez vos bloc-notes à l’image de votre entreprise, c’est le support idéal pour véhiculer votre image par le biais d’un objet utile. Nos tarifs sont particulièrement avantageux : Imprimez par exemple 100 bloc-notes A4 pour seulement CHF 4.54 / pièce TTC !`, `Les bloc-notes sont également indispensables en restauration. Pour la prise de vos commandes, vos 100 bloc-notes 105 x 210 mm ne vous coûteront que&nbsp;CHF 2.41 / pièce TTC !`],
    accordion: [{
      title: 'Dans quels délais mes bloc-notes seront-ils disponibles ?',
      answer: '<strong>Les impressions offset nécessitent un délai de production d’environ 10 jours</strong> (du jour de la commande à la mise à disposition). Pour des commandes plus urgentes nous vous proposons d’opter pour l’impression numérique.',
      id: 0
    }, {
      title: 'Le contenu des pages est-il libre ?',
      answer: 'Totalement. Comme pour des impressions classiques, nous imprimons exactement ce que vous désirez voir apparaître sur les pages.',
      id: 1
    }, {
      title: 'Quelle différence entre papier non couché et papier couché ?',
      answer: 'Notre papier offset non couché est un papier en cellulose sur lequel il est possible d’écrire et d’imprimer. Il est donc possible de le réutiliser dans les photocopieurs ou les imprimantes.<br> Le papier couché est recouvert d’une couche synthétique\n' + '                    mate ou brillante qui permet d’obtenir une surface lisse et stable, plus élégante avec un rendu de qualité supérieure.',
      id: 2
    }, {
      title: "Proposez-vous d'autres types de papier ?",
      answer: 'Tous les types de papiers disponibles pour l’impression de bloc-notes sont intégrés dans notre calculateur. Vous pouvez voir des échantillons dans chacune de nos succursales.',
      id: 3
    }, {
      title: 'Quels formats de fichiers acceptez-vous ?',
      answer: 'Nous acceptons une grande variété de formats de fichiers, mais pour une impression offset réussie un certain nombre de paramètres doivent-être respectés. Consultez notre guide de préparation des documents dans la rubrique d’aide.',
      id: 4
    }, {
      title: 'Proposez-vous des couleurs Pantone ?',
      answer: 'Nous ne proposons pas de couleur Pantone pour l’impression de bloc-notes',
      id: 5
    }]
  }
}, {
  name: `ROLL-UPS`,
  id: 6,
  src: '/assets/image10.webp',
  obj: brochure,
  content: {
    description: [`Conçu pour signaler efficacement votre activité, le roll-up est le support idéal pour toutes les manifestations, foires ou expositions. C’est aussi un allié publicitaire efficace pour un point de vente ou un restaurant si vous souhaitez attirer l’attention
  sur un élément particulier.`, `Facile à transporter et à monter, le roll-up vous accompagne partout.`, `Nous proposons divers formats adaptés à un usage en intérieur ou en extérieur.`, `Tous nos Roll-ups sont livrés prêts à être utilisés. L’étui de transport est inclus dans le prix de chaque modèle.`],
    accordion: [{
      title: 'Modèle Classique',
      answer: 'Répondant à l’immense majorité des besoins, en polyester 175 µm de type bâche Blockout (qui enpêche la lumière de le traverser)',
      id: 0
    }, {
      title: 'Modèle XXL',
      answer: 'En tissu polyester Airtex, 330g/m2. Idéal pour un impact maximal et très pratique pour créer une séparation. Attention ce modèle grand format est beaucoup plus lourd et nécessite deux personnes pour le montage.',
      id: 1
    }, {
      title: 'Modèle Outdoor',
      answer: 'En tissus polyester 330g/m2. Prévu pour un usage en extérieur, imprimé sur deux faces. Ce Roll-up est montés sur un système à suspensions pour réduire la prise au vent.',
      id: 2
    }]
  }
}, {
  name: `POSTERS`,
  id: 7,
  src: '/assets/image8.webp',
  obj: poster,
  content: {
    description: [`Exposition, séminaire, stand, affichage sur le lieu de vente ou toutes formes d’affichage commercial … L’affiche est un puissant vecteur de communication aux multiples déclinaisons.`, `Nous imprimons vos affiches sur de nombreux formats, du A3 au A0.`, `Le procédé d’impression offset est recommandé pour tous les tirages supérieurs à 10 affiches. Pour des petits tirages ( moins de 10 affiches ), privilégiez l’impression numérique`, `Il s’agit de la solution idéale pour allier rendu professionnel et maîtrise des coûts.`, `Pour vous permettre de comparer, nous tenons à votre disposition des échantillons d’impression dans chacune de nos filiales.`],
    accordion: [{
      title: 'Dans quels délais mes impressions seront-elles disponibles ?',
      answer: '<strong><strong>Les impressions offset nécessitent un délai de production d’environ 10 jours</strong> (du jour de la commande à la mise à disposition). Pour des commandes plus urgentes nous vous proposons d’opter pour l’impression numérique.</strong>',
      id: 0
    }, {
      title: 'Quelle différence entre papier non couché et papier couché ?',
      answer: '<strong>Notre papier offset non couché est un papier en cellulose sur lequel il est possible d’écrire et d’imprimer. Il est donc possible de le réutiliser dans les photocopieurs ou les imprimantes.<br>\n' + '                    Le papier couché est recouvert d’une couche synthétique mate ou brillante qui permet d’obtenir une surface lisse et stable, plus élégante avec un rendu de qualité supérieure.</strong>',
      id: 1
    }, {
      title: "Proposez-vous d'autres types de papier ?",
      answer: '<strong>Oui, nous proposons un choix important de papiers avec des aspects et des grammages différents. Des échantillons d’impressions sont disponibles dans nos succursales.</strong>',
      id: 2
    }, {
      title: 'Comment choisir entre numérique et offset ?',
      answer: '<strong>De nombreux critères sont à prendre en compte. Nos collaborateurs sauront vous orienter vers de meilleur choix en fonction de vos besoins. Les critères principaux sont fonction du volume à imprimer (n fois la même page), du délai (environ 10 jours pour l’offset), du résultat attendu et des finitions souhaitées (échantillons avec l’ensemble des variantes disponibles dans nos succursales)<br>\n' + '                    </strong>',
      id: 3
    }, {
      title: 'Quels formats de fichiers acceptez-vous ?',
      answer: '<strong>Nous acceptons une grande variété de formats de fichiers, mais pour une impression offset réussie un certain nombre de paramètres doivent-être respectés.  Consultez notre guide de préparation des documents dans la rubrique d’aide.</strong>',
      id: 4
    }, {
      title: 'Peut-on imprimer un format irrégulier ?',
      answer: '<strong>Pour continuer à appliquer un tarif très avantageux nous restreignons les formats disponibles aux standards usuels. Pour un format spécifique nous vous recommandons l’impression numérique.</strong>',
      id: 5
    }]
  }
}, {
  name: `Boite`,
  id: 8,
  src: '/assets/image12.webp',
  obj: poster,
  content: {
    description: [`description`],
    accordion: [{
      title: 'question ?',
      answer: '<strong>answer</strong>',
      id: 0
    }]
  }
}, {
  name: `Bonde`,
  id: 9,
  src: '/assets/image13.webp',
  obj: poster,
  content: {
    description: [`description`],
    accordion: [{
      title: 'question ?',
      answer: '<strong>answer</strong>',
      id: 0
    }]
  }
}];
/* harmony default export */ __webpack_exports__["a"] = (details);

/***/ }),

/***/ "X24+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.removePathTrailingSlash = removePathTrailingSlash;
exports.normalizePathTrailingSlash = void 0;
/**
* Removes the trailing slash of a path if there is one. Preserves the root path `/`.
*/

function removePathTrailingSlash(path) {
  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;
}
/**
* Normalizes the trailing slash of a path according to the `trailingSlash` option
* in `next.config.js`.
*/


const normalizePathTrailingSlash =  false ? undefined : removePathTrailingSlash;
exports.normalizePathTrailingSlash = normalizePathTrailingSlash;

/***/ }),

/***/ "YFqc":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("cTJO")


/***/ }),

/***/ "YTqd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
// to reduce bytes

function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}

function parseParameter(param) {
  const optional = param.startsWith('[') && param.endsWith(']');

  if (optional) {
    param = param.slice(1, -1);
  }

  const repeat = param.startsWith('...');

  if (repeat) {
    param = param.slice(3);
  }

  return {
    key: param,
    repeat,
    optional
  };
}

function getRouteRegex(normalizedRoute) {
  const segments = (normalizedRoute.replace(/\/$/, '') || '/').slice(1).split('/');
  const groups = {};
  let groupIndex = 1;
  const parameterizedRoute = segments.map(segment => {
    if (segment.startsWith('[') && segment.endsWith(']')) {
      const {
        key,
        optional,
        repeat
      } = parseParameter(segment.slice(1, -1));
      groups[key] = {
        pos: groupIndex++,
        repeat,
        optional
      };
      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
    } else {
      return `/${escapeRegex(segment)}`;
    }
  }).join(''); // dead code eliminate for browser since it's only needed
  // while generating routes-manifest

  if (true) {
    let routeKeyCharCode = 97;
    let routeKeyCharLength = 1; // builds a minimal routeKey using only a-z and minimal number of characters

    const getSafeRouteKey = () => {
      let routeKey = '';

      for (let i = 0; i < routeKeyCharLength; i++) {
        routeKey += String.fromCharCode(routeKeyCharCode);
        routeKeyCharCode++;

        if (routeKeyCharCode > 122) {
          routeKeyCharLength++;
          routeKeyCharCode = 97;
        }
      }

      return routeKey;
    };

    const routeKeys = {};
    let namedParameterizedRoute = segments.map(segment => {
      if (segment.startsWith('[') && segment.endsWith(']')) {
        const {
          key,
          optional,
          repeat
        } = parseParameter(segment.slice(1, -1)); // replace any non-word characters since they can break
        // the named regex

        let cleanedKey = key.replace(/\W/g, '');
        let invalidKey = false; // check if the key is still invalid and fallback to using a known
        // safe key

        if (cleanedKey.length === 0 || cleanedKey.length > 30) {
          invalidKey = true;
        }

        if (!isNaN(parseInt(cleanedKey.substr(0, 1)))) {
          invalidKey = true;
        }

        if (invalidKey) {
          cleanedKey = getSafeRouteKey();
        }

        routeKeys[cleanedKey] = key;
        return repeat ? optional ? `(?:/(?<${cleanedKey}>.+?))?` : `/(?<${cleanedKey}>.+?)` : `/(?<${cleanedKey}>[^/]+?)`;
      } else {
        return `/${escapeRegex(segment)}`;
      }
    }).join('');
    return {
      re: new RegExp(`^${parameterizedRoute}(?:/)?$`),
      groups,
      routeKeys,
      namedRegex: `^${namedParameterizedRoute}(?:/)?$`
    };
  }

  return {
    re: new RegExp(`^${parameterizedRoute}(?:/)?$`),
    groups
  };
}

/***/ }),

/***/ "a6wa":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"dropdown": "DropDown_dropdown__10rBW",
	"dropdownContent": "DropDown_dropdownContent__1w5NQ",
	"dropdownUl": "DropDown_dropdownUl__suYsj",
	"dropdownLi": "DropDown_dropdownLi__15nXw"
};


/***/ }),

/***/ "apO0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__("cDcd");
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "next/head"
var head_ = __webpack_require__("xnum");
var head_default = /*#__PURE__*/__webpack_require__.n(head_);

// EXTERNAL MODULE: ./components/Header/Header.module.scss
var Header_module = __webpack_require__("yzvi");
var Header_module_default = /*#__PURE__*/__webpack_require__.n(Header_module);

// CONCATENATED MODULE: ./components/Header/Logo.tsx
var __jsx = external_react_default.a.createElement;

const Logo = ({
  colors,
  width,
  height,
  className,
  viewBox = "0 0 240 50"
}) => {
  const {
    stroke,
    fill
  } = colors;
  return __jsx("svg", {
    width: width,
    height: height,
    viewBox: viewBox,
    className: className,
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink"
  }, __jsx("line", {
    className: "svg-line",
    stroke: stroke,
    y1: "-0.5",
    x2: "170.37",
    y2: "0.478023",
    transform: "matrix(0.999987 -0.00519196 0.00539179 0.999985 10 38.98)"
  }), __jsx("path", {
    className: "svg-circles",
    stroke: stroke,
    fill: fill,
    d: "M54.3323 40.2483C50.4144 44.2621 45.1028 47.0904 39.1774 48.3181C33.2519 49.5457 27.0247 49.1079 21.41 47.069C15.7952 45.0302 11.0888 41.4976 7.98152 36.9899C4.87428 32.4822 3.52995 27.237 4.1459 22.0241C4.76185 16.8113 7.30563 11.9055 11.4038 8.02701C15.5019 4.14852 20.9386 1.50163 26.9155 0.474941C32.8925 -0.551751 39.0949 0.095841 44.6122 2.32264C50.1295 4.54944 54.671 8.23815 57.57 12.8472L56.0658 13.5464C53.3407 9.21386 49.0717 5.74648 43.8855 3.65328C38.6992 1.56009 32.8689 0.951354 27.2506 1.91644C21.6323 2.88153 16.5218 5.36961 12.6696 9.01539C8.81729 12.6612 6.42614 17.2726 5.84715 22.1727C5.26815 27.0727 6.53182 32.0033 9.45263 36.2405C12.3734 40.4777 16.7975 43.7984 22.0754 45.7149C27.3532 47.6314 33.2068 48.0429 38.7767 46.889C44.3467 45.735 49.3395 43.0764 53.0223 39.3034L54.3323 40.2483Z"
  }), __jsx("g", {
    className: "express"
  }, __jsx("path", {
    className: "lettre letter-0",
    stroke: stroke,
    fill: fill,
    d: "M24.2656 28.9453L24.5 30C23.8906 30 22.7812 30.0234 21.1719 30.0703C19.5781 30.1328 18.4219 30.1641 17.7031 30.1641C16.5469 30.1641 15.7578 30.1094 15.3359 30C15.4922 28.2812 15.5859 25.4062 15.6172 21.375C15.6484 17.3438 15.75 14.5312 15.9219 12.9375C16.4531 12.9844 17.8594 13.0234 20.1406 13.0547C22.4375 13.0859 23.9375 13.1562 24.6406 13.2656L24.8984 14.3203C24.1953 14.4453 22.7891 14.5938 20.6797 14.7656C18.5703 14.9375 17.4609 15.0312 17.3516 15.0469C17.3672 15.4062 17.3984 16.1406 17.4453 17.25C17.5078 18.3594 17.5469 19.2734 17.5625 19.9922C18.0938 20.0547 19.0625 20.1484 20.4688 20.2734C21.875 20.3828 22.7656 20.4531 23.1406 20.4844L23.375 21.5625C20.0781 21.8594 18.1484 22.0156 17.5859 22.0312C17.5859 22.7188 17.5703 23.7656 17.5391 25.1719C17.5234 26.5625 17.5156 27.5859 17.5156 28.2422C21.0938 28.5703 23.3438 28.8047 24.2656 28.9453Z"
  }), __jsx("path", {
    className: "lettre letter-1",
    stroke: stroke,
    fill: fill,
    d: "M26.3516 30.5859L25.3438 30.0469C25.75 29.0312 26.8125 27.0625 28.5312 24.1406C27.625 22.9062 26.5938 20.8516 25.4375 17.9766H26.4688C27.0469 19.1953 28.0234 20.7812 29.3984 22.7344C29.6328 22.4062 29.9375 21.8984 30.3125 21.2109C30.7031 20.5234 31.0781 19.9297 31.4375 19.4297C31.8125 18.9297 32.2344 18.4922 32.7031 18.1172C33.2656 18.4297 33.5469 18.7969 33.5469 19.2188C33.5469 19.4531 33.4922 19.6797 33.3828 19.8984C32.9609 20.4141 32.4219 21.2266 31.7656 22.3359C31.1094 23.4453 30.7031 24.1172 30.5469 24.3516C32.2031 26.6641 33.3203 28.4062 33.8984 29.5781C33.8984 30.1719 33.6328 30.4688 33.1016 30.4688C32.5703 30.4688 32.1641 30.2109 31.8828 29.6953C31.6016 28.7578 30.8594 27.4297 29.6562 25.7109C29.3906 26.1484 28.8438 26.9453 28.0156 28.1016C27.2031 29.2422 26.6484 30.0703 26.3516 30.5859Z"
  }), __jsx("path", {
    className: "lettre letter-2",
    stroke: stroke,
    fill: fill,
    d: "M35.1172 17.6719L36.4297 17.9062C36.4297 18.2344 36.4375 18.4766 36.4531 18.6328C37.3125 18.0859 38.1797 17.8125 39.0547 17.8125C40.4766 17.8125 41.5859 18.4219 42.3828 19.6406C43.1797 20.8594 43.5781 22.2422 43.5781 23.7891C43.5781 24.5703 43.5156 25.3203 43.3906 26.0391C43.2812 26.7422 43.0781 27.4688 42.7812 28.2188C42.4844 28.9531 42.0234 29.5469 41.3984 30C40.7891 30.4375 40.0469 30.6562 39.1719 30.6562C38.3438 30.6562 37.5469 30.4375 36.7812 30C36.8438 32.7344 36.8984 34.7656 36.9453 36.0938C36.8047 36.5781 36.5312 36.8203 36.125 36.8203C35.8438 36.8203 35.5703 36.7031 35.3047 36.4688C35.0547 36.25 34.8984 35.9766 34.8359 35.6484L35.1172 17.6719ZM36.6406 20.1562L36.7109 27.7266C36.8984 28.1016 37.1875 28.4062 37.5781 28.6406C37.9688 28.8594 38.3984 28.9688 38.8672 28.9688C39.4766 28.9688 39.9922 28.7734 40.4141 28.3828C40.8516 27.9922 41.1562 27.4766 41.3281 26.8359C41.5156 26.1797 41.6406 25.5703 41.7031 25.0078C41.7812 24.4453 41.8203 23.8516 41.8203 23.2266C41.8203 20.5703 40.9219 19.2422 39.125 19.2422C38.5469 19.2422 38.0078 19.3281 37.5078 19.5C37.0234 19.6562 36.7344 19.875 36.6406 20.1562Z"
  }), __jsx("path", {
    className: "lettre letter-3",
    stroke: stroke,
    fill: fill,
    d: "M53.2109 21.0703L52.1797 21C51.8516 20.125 51.2969 19.6875 50.5156 19.6875C50.1719 19.6875 49.8047 19.7656 49.4141 19.9219C49.0391 20.0781 48.7266 20.2422 48.4766 20.4141C48.2266 20.5703 47.8984 20.8047 47.4922 21.1172C47.4922 21.3359 47.4844 22.0469 47.4688 23.25C47.4688 24.4531 47.4766 25.7891 47.4922 27.2578C47.5234 28.7266 47.5547 29.5156 47.5859 29.625C47.4453 30.0938 47.1719 30.3281 46.7656 30.3281C46.4844 30.3281 46.2109 30.2188 45.9453 30C45.6953 29.7656 45.5391 29.4844 45.4766 29.1562C45.7734 24.1406 46.0391 20.3516 46.2734 17.7891L47.3281 18.0234L47.3984 19.5938C48.4922 18.6875 49.4297 18.2344 50.2109 18.2344C51.0703 18.2344 51.7891 18.4297 52.3672 18.8203C52.9609 19.2109 53.2578 19.7812 53.2578 20.5312C53.2578 20.7656 53.2422 20.9453 53.2109 21.0703Z"
  }), __jsx("path", {
    className: "lettre letter-4",
    stroke: stroke,
    fill: fill,
    d: "M63.6406 27.7266L63.875 28.7578C63.1875 29.0078 62.1641 29.2891 60.8047 29.6016C59.4609 29.8984 58.4609 30.0469 57.8047 30.0469C57.1328 30.0469 56.5469 29.8281 56.0469 29.3906C55.5469 28.9375 55.1719 28.3672 54.9219 27.6797C54.6719 26.9766 54.4844 26.2891 54.3594 25.6172C54.25 24.9297 54.1953 24.2578 54.1953 23.6016C54.1953 19.6953 55.9609 17.7422 59.4922 17.7422C60.3359 17.7422 61.0781 18.0156 61.7188 18.5625C62.3594 19.0938 62.6797 19.7891 62.6797 20.6484C62.6797 21.1172 62.5469 21.5312 62.2812 21.8906C62.0312 22.25 61.7188 22.5391 61.3438 22.7578C60.9844 22.9609 60.5156 23.1484 59.9375 23.3203C59.375 23.4922 58.875 23.6172 58.4375 23.6953C58 23.7734 57.4766 23.8594 56.8672 23.9531C56.2578 24.0469 55.8359 24.1172 55.6016 24.1641C55.6172 24.6172 55.6406 25.0156 55.6719 25.3594C55.7188 25.7031 55.7969 26.0781 55.9062 26.4844C56.0312 26.875 56.1875 27.2031 56.375 27.4688C56.5781 27.7188 56.8516 27.9297 57.1953 28.1016C57.5391 28.2734 57.9453 28.3594 58.4141 28.3594C58.9766 28.3594 59.6641 28.3125 60.4766 28.2188C61.2891 28.1094 62.0078 28 62.6328 27.8906C63.2734 27.7812 63.6094 27.7266 63.6406 27.7266ZM55.6953 22.7109C57.8203 22.1016 59.5625 21.4609 60.9219 20.7891C60.8125 20.2734 60.6641 19.8984 60.4766 19.6641C60.2891 19.4297 60.0078 19.3125 59.6328 19.3125C58.6797 19.3125 57.8125 19.6406 57.0312 20.2969C56.2656 20.9531 55.8203 21.7578 55.6953 22.7109Z"
  }), __jsx("path", {
    className: "lettre letter-5",
    stroke: stroke,
    fill: fill,
    d: "M72.0312 18.7031L71.7969 19.6406C70.2812 19.0156 69.1016 18.7031 68.2578 18.7031C67.5078 18.7031 66.9766 18.8203 66.6641 19.0547C66.3672 19.2734 66.2188 19.75 66.2188 20.4844C66.2188 21.0781 66.4297 21.5703 66.8516 21.9609C67.2891 22.3516 67.8125 22.6641 68.4219 22.8984C69.0312 23.1172 69.6406 23.3594 70.25 23.625C70.875 23.875 71.3984 24.25 71.8203 24.75C72.2578 25.25 72.4766 25.8672 72.4766 26.6016C72.4766 27.6016 72.1094 28.4766 71.375 29.2266C70.6406 29.9766 69.6875 30.3594 68.5156 30.375C67.6562 30.375 66.8516 30.1953 66.1016 29.8359C65.3516 29.4766 64.7578 29.0234 64.3203 28.4766L65 27.7734C65.1875 27.8516 65.4609 27.9766 65.8203 28.1484C66.1953 28.3203 66.4609 28.4375 66.6172 28.5C66.7734 28.5469 67 28.6016 67.2969 28.6641C67.6094 28.7266 67.9375 28.7578 68.2812 28.7578C69.0156 28.7578 69.6172 28.5938 70.0859 28.2656C70.5547 27.9375 70.7891 27.4766 70.7891 26.8828C70.7891 26.4922 70.6797 26.1641 70.4609 25.8984C70.2422 25.6172 69.9531 25.3906 69.5938 25.2188C69.2344 25.0469 68.8359 24.8828 68.3984 24.7266C67.9766 24.5703 67.5469 24.3984 67.1094 24.2109C66.6875 24.0078 66.2969 23.7734 65.9375 23.5078C65.5781 23.2266 65.2891 22.8516 65.0703 22.3828C64.8516 21.9141 64.7422 21.3594 64.7422 20.7188C64.7422 19.7812 64.9922 19 65.4922 18.375C66.0078 17.7344 66.7266 17.4141 67.6484 17.4141C68.0078 17.4141 68.4141 17.4688 68.8672 17.5781C69.3203 17.6875 69.6797 17.7891 69.9453 17.8828C70.2109 17.9766 70.6016 18.1328 71.1172 18.3516C71.6484 18.5547 71.9531 18.6719 72.0312 18.7031Z"
  }), __jsx("path", {
    className: "lettre letter-6",
    stroke: stroke,
    fill: fill,
    d: "M81.125 18.7031L80.8906 19.6406C79.375 19.0156 78.1953 18.7031 77.3516 18.7031C76.6016 18.7031 76.0703 18.8203 75.7578 19.0547C75.4609 19.2734 75.3125 19.75 75.3125 20.4844C75.3125 21.0781 75.5234 21.5703 75.9453 21.9609C76.3828 22.3516 76.9062 22.6641 77.5156 22.8984C78.125 23.1172 78.7344 23.3594 79.3438 23.625C79.9688 23.875 80.4922 24.25 80.9141 24.75C81.3516 25.25 81.5703 25.8672 81.5703 26.6016C81.5703 27.6016 81.2031 28.4766 80.4688 29.2266C79.7344 29.9766 78.7812 30.3594 77.6094 30.375C76.75 30.375 75.9453 30.1953 75.1953 29.8359C74.4453 29.4766 73.8516 29.0234 73.4141 28.4766L74.0938 27.7734C74.2812 27.8516 74.5547 27.9766 74.9141 28.1484C75.2891 28.3203 75.5547 28.4375 75.7109 28.5C75.8672 28.5469 76.0938 28.6016 76.3906 28.6641C76.7031 28.7266 77.0312 28.7578 77.375 28.7578C78.1094 28.7578 78.7109 28.5938 79.1797 28.2656C79.6484 27.9375 79.8828 27.4766 79.8828 26.8828C79.8828 26.4922 79.7734 26.1641 79.5547 25.8984C79.3359 25.6172 79.0469 25.3906 78.6875 25.2188C78.3281 25.0469 77.9297 24.8828 77.4922 24.7266C77.0703 24.5703 76.6406 24.3984 76.2031 24.2109C75.7812 24.0078 75.3906 23.7734 75.0312 23.5078C74.6719 23.2266 74.3828 22.8516 74.1641 22.3828C73.9453 21.9141 73.8359 21.3594 73.8359 20.7188C73.8359 19.7812 74.0859 19 74.5859 18.375C75.1016 17.7344 75.8203 17.4141 76.7422 17.4141C77.1016 17.4141 77.5078 17.4688 77.9609 17.5781C78.4141 17.6875 78.7734 17.7891 79.0391 17.8828C79.3047 17.9766 79.6953 18.1328 80.2109 18.3516C80.7422 18.5547 81.0469 18.6719 81.125 18.7031Z"
  })), __jsx("g", {
    className: "imprimerie"
  }, __jsx("path", {
    className: "lettre letter-7",
    stroke: stroke,
    fill: fill,
    d: "M89.3047 30.0703L89.2578 28.9219C90.6953 28.6875 91.5859 28.5625 91.9297 28.5469C91.9453 28.0156 91.9531 27.2188 91.9531 26.1562C91.9531 24.75 91.9219 22.7266 91.8594 20.0859C91.7969 17.4297 91.7578 15.6719 91.7422 14.8125L89.375 14.6953L89.2109 13.3359C89.8516 13.3516 90.8438 13.3594 92.1875 13.3594C93.5625 13.3594 94.5859 13.3672 95.2578 13.3828L95.3281 14.5547C95.0625 14.6641 94.6875 14.7344 94.2031 14.7656C93.7188 14.7812 93.4141 14.7969 93.2891 14.8125C93.3359 15.25 93.3594 16.3516 93.3594 18.1172C93.375 19.8828 93.3828 21.8359 93.3828 23.9766C93.3828 26.1172 93.3984 27.6406 93.4297 28.5469C93.6797 28.5938 94.1562 28.6484 94.8594 28.7109C95.5625 28.7734 96 28.8203 96.1719 28.8516L96.125 30.0703C95.6562 30.0547 94.9141 30.0469 93.8984 30.0469C93.3672 30.0469 92.5781 30.0469 91.5312 30.0469C90.4844 30.0625 89.7422 30.0703 89.3047 30.0703Z"
  }), __jsx("path", {
    className: "lettre letter-8",
    stroke: stroke,
    fill: fill,
    d: "M104 20.7188C104.062 21.5938 104.109 22.6328 104.141 23.8359C104.172 25.0234 104.195 26.2266 104.211 27.4453C104.242 28.6641 104.266 29.4922 104.281 29.9297C103.938 30.0234 103.617 30.0703 103.32 30.0703C103.086 30.0703 102.867 30.0312 102.664 29.9531C102.617 29.3438 102.586 28.6484 102.57 27.8672C102.555 27.0859 102.547 26.3984 102.547 25.8047C102.547 25.1953 102.531 24.5625 102.5 23.9062C102.484 23.25 102.445 22.6875 102.383 22.2188C102.32 21.75 102.227 21.3203 102.102 20.9297C101.977 20.5234 101.797 20.2109 101.562 19.9922C101.344 19.7734 101.07 19.6562 100.742 19.6406C100.414 19.6406 100.148 19.7109 99.9453 19.8516C99.7422 19.9922 99.5234 20.25 99.2891 20.625V29.9062C99.0547 30.0312 98.7734 30.0938 98.4453 30.0938C98.1953 30.0938 97.9141 30.0547 97.6016 29.9766C97.6484 28.9922 97.6797 27.0547 97.6953 24.1641C97.7109 21.2734 97.7734 19.1328 97.8828 17.7422L98.9375 17.9766L99.0078 19.1719C99.4766 18.4375 100.07 18.0703 100.789 18.0703C101.852 18.0703 102.75 18.5391 103.484 19.4766C103.938 18.5391 104.672 18.0703 105.688 18.0703C106.094 18.0703 106.445 18.1172 106.742 18.2109C108.445 18.6953 109.297 20.875 109.297 24.75C109.297 25.3125 109.273 26.0703 109.227 27.0234C109.195 27.9609 109.18 28.5938 109.18 28.9219C109.18 29.3594 109.203 29.7188 109.25 30C108.438 30.2188 107.945 30.3281 107.773 30.3281C107.617 30.3281 107.508 30.3125 107.445 30.2812C107.383 30.0781 107.352 29.7031 107.352 29.1562C107.352 28.8125 107.375 28.1094 107.422 27.0469C107.469 25.9688 107.492 25.125 107.492 24.5156C107.492 21.2656 106.852 19.625 105.57 19.5938C105.273 19.6094 105.016 19.7031 104.797 19.875C104.578 20.0312 104.312 20.3125 104 20.7188Z"
  }), __jsx("path", {
    className: "lettre letter-9",
    stroke: stroke,
    fill: fill,
    d: "M111.477 17.6719L112.789 17.9062C112.789 18.2344 112.797 18.4766 112.812 18.6328C113.672 18.0859 114.539 17.8125 115.414 17.8125C116.836 17.8125 117.945 18.4219 118.742 19.6406C119.539 20.8594 119.938 22.2422 119.938 23.7891C119.938 24.5703 119.875 25.3203 119.75 26.0391C119.641 26.7422 119.438 27.4688 119.141 28.2188C118.844 28.9531 118.383 29.5469 117.758 30C117.148 30.4375 116.406 30.6562 115.531 30.6562C114.703 30.6562 113.906 30.4375 113.141 30C113.203 32.7344 113.258 34.7656 113.305 36.0938C113.164 36.5781 112.891 36.8203 112.484 36.8203C112.203 36.8203 111.93 36.7031 111.664 36.4688C111.414 36.25 111.258 35.9766 111.195 35.6484L111.477 17.6719ZM113 20.1562L113.07 27.7266C113.258 28.1016 113.547 28.4062 113.938 28.6406C114.328 28.8594 114.758 28.9688 115.227 28.9688C115.836 28.9688 116.352 28.7734 116.773 28.3828C117.211 27.9922 117.516 27.4766 117.688 26.8359C117.875 26.1797 118 25.5703 118.062 25.0078C118.141 24.4453 118.18 23.8516 118.18 23.2266C118.18 20.5703 117.281 19.2422 115.484 19.2422C114.906 19.2422 114.367 19.3281 113.867 19.5C113.383 19.6562 113.094 19.875 113 20.1562Z"
  }), __jsx("path", {
    className: "lettre letter-10",
    stroke: stroke,
    fill: fill,
    d: "M129.57 21.0703L128.539 21C128.211 20.125 127.656 19.6875 126.875 19.6875C126.531 19.6875 126.164 19.7656 125.773 19.9219C125.398 20.0781 125.086 20.2422 124.836 20.4141C124.586 20.5703 124.258 20.8047 123.852 21.1172C123.852 21.3359 123.844 22.0469 123.828 23.25C123.828 24.4531 123.836 25.7891 123.852 27.2578C123.883 28.7266 123.914 29.5156 123.945 29.625C123.805 30.0938 123.531 30.3281 123.125 30.3281C122.844 30.3281 122.57 30.2188 122.305 30C122.055 29.7656 121.898 29.4844 121.836 29.1562C122.133 24.1406 122.398 20.3516 122.633 17.7891L123.688 18.0234L123.758 19.5938C124.852 18.6875 125.789 18.2344 126.57 18.2344C127.43 18.2344 128.148 18.4297 128.727 18.8203C129.32 19.2109 129.617 19.7812 129.617 20.5312C129.617 20.7656 129.602 20.9453 129.57 21.0703Z"
  }), __jsx("path", {
    className: "lettre letter-11",
    stroke: stroke,
    fill: fill,
    d: "M131.07 17.9531L132.148 18.1875C132.273 19.4688 132.383 21.4844 132.477 24.2344C132.57 26.9688 132.633 28.6641 132.664 29.3203C132.523 29.8047 132.25 30.0469 131.844 30.0469C131.562 30.0469 131.289 29.9375 131.023 29.7188C130.773 29.4844 130.617 29.2031 130.555 28.875C130.586 28.2344 130.648 26.5703 130.742 23.8828C130.836 21.1797 130.945 19.2031 131.07 17.9531ZM131.398 13.7578C131.82 13.7578 132.172 13.9453 132.453 14.3203C132.734 14.6797 132.875 15.0938 132.875 15.5625C132.875 15.9062 132.789 16.1875 132.617 16.4062C132.461 16.6094 132.242 16.7109 131.961 16.7109C131.523 16.7109 131.18 16.5312 130.93 16.1719C130.68 15.8125 130.555 15.3906 130.555 14.9062C130.555 14.5625 130.625 14.2891 130.766 14.0859C130.922 13.8672 131.133 13.7578 131.398 13.7578Z"
  }), __jsx("path", {
    className: "lettre letter-12",
    stroke: stroke,
    fill: fill,
    d: "M141.195 20.7188C141.258 21.5938 141.305 22.6328 141.336 23.8359C141.367 25.0234 141.391 26.2266 141.406 27.4453C141.438 28.6641 141.461 29.4922 141.477 29.9297C141.133 30.0234 140.812 30.0703 140.516 30.0703C140.281 30.0703 140.062 30.0312 139.859 29.9531C139.812 29.3438 139.781 28.6484 139.766 27.8672C139.75 27.0859 139.742 26.3984 139.742 25.8047C139.742 25.1953 139.727 24.5625 139.695 23.9062C139.68 23.25 139.641 22.6875 139.578 22.2188C139.516 21.75 139.422 21.3203 139.297 20.9297C139.172 20.5234 138.992 20.2109 138.758 19.9922C138.539 19.7734 138.266 19.6562 137.938 19.6406C137.609 19.6406 137.344 19.7109 137.141 19.8516C136.938 19.9922 136.719 20.25 136.484 20.625V29.9062C136.25 30.0312 135.969 30.0938 135.641 30.0938C135.391 30.0938 135.109 30.0547 134.797 29.9766C134.844 28.9922 134.875 27.0547 134.891 24.1641C134.906 21.2734 134.969 19.1328 135.078 17.7422L136.133 17.9766L136.203 19.1719C136.672 18.4375 137.266 18.0703 137.984 18.0703C139.047 18.0703 139.945 18.5391 140.68 19.4766C141.133 18.5391 141.867 18.0703 142.883 18.0703C143.289 18.0703 143.641 18.1172 143.938 18.2109C145.641 18.6953 146.492 20.875 146.492 24.75C146.492 25.3125 146.469 26.0703 146.422 27.0234C146.391 27.9609 146.375 28.5938 146.375 28.9219C146.375 29.3594 146.398 29.7188 146.445 30C145.633 30.2188 145.141 30.3281 144.969 30.3281C144.812 30.3281 144.703 30.3125 144.641 30.2812C144.578 30.0781 144.547 29.7031 144.547 29.1562C144.547 28.8125 144.57 28.1094 144.617 27.0469C144.664 25.9688 144.688 25.125 144.688 24.5156C144.688 21.2656 144.047 19.625 142.766 19.5938C142.469 19.6094 142.211 19.7031 141.992 19.875C141.773 20.0312 141.508 20.3125 141.195 20.7188Z"
  }), __jsx("path", {
    className: "lettre letter-13",
    stroke: stroke,
    fill: fill,
    d: "M157.836 27.7266L158.07 28.7578C157.383 29.0078 156.359 29.2891 155 29.6016C153.656 29.8984 152.656 30.0469 152 30.0469C151.328 30.0469 150.742 29.8281 150.242 29.3906C149.742 28.9375 149.367 28.3672 149.117 27.6797C148.867 26.9766 148.68 26.2891 148.555 25.6172C148.445 24.9297 148.391 24.2578 148.391 23.6016C148.391 19.6953 150.156 17.7422 153.688 17.7422C154.531 17.7422 155.273 18.0156 155.914 18.5625C156.555 19.0938 156.875 19.7891 156.875 20.6484C156.875 21.1172 156.742 21.5312 156.477 21.8906C156.227 22.25 155.914 22.5391 155.539 22.7578C155.18 22.9609 154.711 23.1484 154.133 23.3203C153.57 23.4922 153.07 23.6172 152.633 23.6953C152.195 23.7734 151.672 23.8594 151.062 23.9531C150.453 24.0469 150.031 24.1172 149.797 24.1641C149.812 24.6172 149.836 25.0156 149.867 25.3594C149.914 25.7031 149.992 26.0781 150.102 26.4844C150.227 26.875 150.383 27.2031 150.57 27.4688C150.773 27.7188 151.047 27.9297 151.391 28.1016C151.734 28.2734 152.141 28.3594 152.609 28.3594C153.172 28.3594 153.859 28.3125 154.672 28.2188C155.484 28.1094 156.203 28 156.828 27.8906C157.469 27.7812 157.805 27.7266 157.836 27.7266ZM149.891 22.7109C152.016 22.1016 153.758 21.4609 155.117 20.7891C155.008 20.2734 154.859 19.8984 154.672 19.6641C154.484 19.4297 154.203 19.3125 153.828 19.3125C152.875 19.3125 152.008 19.6406 151.227 20.2969C150.461 20.9531 150.016 21.7578 149.891 22.7109Z"
  }), __jsx("path", {
    className: "lettre letter-14",
    stroke: stroke,
    fill: fill,
    d: "M166.742 21.0703L165.711 21C165.383 20.125 164.828 19.6875 164.047 19.6875C163.703 19.6875 163.336 19.7656 162.945 19.9219C162.57 20.0781 162.258 20.2422 162.008 20.4141C161.758 20.5703 161.43 20.8047 161.023 21.1172C161.023 21.3359 161.016 22.0469 161 23.25C161 24.4531 161.008 25.7891 161.023 27.2578C161.055 28.7266 161.086 29.5156 161.117 29.625C160.977 30.0938 160.703 30.3281 160.297 30.3281C160.016 30.3281 159.742 30.2188 159.477 30C159.227 29.7656 159.07 29.4844 159.008 29.1562C159.305 24.1406 159.57 20.3516 159.805 17.7891L160.859 18.0234L160.93 19.5938C162.023 18.6875 162.961 18.2344 163.742 18.2344C164.602 18.2344 165.32 18.4297 165.898 18.8203C166.492 19.2109 166.789 19.7812 166.789 20.5312C166.789 20.7656 166.773 20.9453 166.742 21.0703Z"
  }), __jsx("path", {
    className: "lettre letter-15",
    stroke: stroke,
    fill: fill,
    d: "M168.242 17.9531L169.32 18.1875C169.445 19.4688 169.555 21.4844 169.648 24.2344C169.742 26.9688 169.805 28.6641 169.836 29.3203C169.695 29.8047 169.422 30.0469 169.016 30.0469C168.734 30.0469 168.461 29.9375 168.195 29.7188C167.945 29.4844 167.789 29.2031 167.727 28.875C167.758 28.2344 167.82 26.5703 167.914 23.8828C168.008 21.1797 168.117 19.2031 168.242 17.9531ZM168.57 13.7578C168.992 13.7578 169.344 13.9453 169.625 14.3203C169.906 14.6797 170.047 15.0938 170.047 15.5625C170.047 15.9062 169.961 16.1875 169.789 16.4062C169.633 16.6094 169.414 16.7109 169.133 16.7109C168.695 16.7109 168.352 16.5312 168.102 16.1719C167.852 15.8125 167.727 15.3906 167.727 14.9062C167.727 14.5625 167.797 14.2891 167.938 14.0859C168.094 13.8672 168.305 13.7578 168.57 13.7578Z"
  }), __jsx("path", {
    className: "lettre letter-16",
    stroke: stroke,
    fill: fill,
    d: "M181.414 27.7266L181.648 28.7578C180.961 29.0078 179.938 29.2891 178.578 29.6016C177.234 29.8984 176.234 30.0469 175.578 30.0469C174.906 30.0469 174.32 29.8281 173.82 29.3906C173.32 28.9375 172.945 28.3672 172.695 27.6797C172.445 26.9766 172.258 26.2891 172.133 25.6172C172.023 24.9297 171.969 24.2578 171.969 23.6016C171.969 19.6953 173.734 17.7422 177.266 17.7422C178.109 17.7422 178.852 18.0156 179.492 18.5625C180.133 19.0938 180.453 19.7891 180.453 20.6484C180.453 21.1172 180.32 21.5312 180.055 21.8906C179.805 22.25 179.492 22.5391 179.117 22.7578C178.758 22.9609 178.289 23.1484 177.711 23.3203C177.148 23.4922 176.648 23.6172 176.211 23.6953C175.773 23.7734 175.25 23.8594 174.641 23.9531C174.031 24.0469 173.609 24.1172 173.375 24.1641C173.391 24.6172 173.414 25.0156 173.445 25.3594C173.492 25.7031 173.57 26.0781 173.68 26.4844C173.805 26.875 173.961 27.2031 174.148 27.4688C174.352 27.7188 174.625 27.9297 174.969 28.1016C175.312 28.2734 175.719 28.3594 176.188 28.3594C176.75 28.3594 177.438 28.3125 178.25 28.2188C179.062 28.1094 179.781 28 180.406 27.8906C181.047 27.7812 181.383 27.7266 181.414 27.7266ZM173.469 22.7109C175.594 22.1016 177.336 21.4609 178.695 20.7891C178.586 20.2734 178.438 19.8984 178.25 19.6641C178.062 19.4297 177.781 19.3125 177.406 19.3125C176.453 19.3125 175.586 19.6406 174.805 20.2969C174.039 20.9531 173.594 21.7578 173.469 22.7109Z"
  })));
};
// EXTERNAL MODULE: ./node_modules/next/link.js
var next_link = __webpack_require__("YFqc");
var link_default = /*#__PURE__*/__webpack_require__.n(next_link);

// EXTERNAL MODULE: ./components/DropDown/DropDown.module.scss
var DropDown_module = __webpack_require__("a6wa");
var DropDown_module_default = /*#__PURE__*/__webpack_require__.n(DropDown_module);

// CONCATENATED MODULE: ./components/DropDown/DropDown.tsx
var DropDown_jsx = external_react_default.a.createElement;



const DropDown = ({
  toggleDropDown,
  toggleNav,
  content
}) => {
  const {
    dropdownContent,
    dropdownUl,
    dropdownLi
  } = DropDown_module_default.a;
  return DropDown_jsx("div", {
    onMouseLeave: toggleDropDown,
    className: dropdownContent
  }, DropDown_jsx("ul", {
    className: dropdownUl
  }, content.map((ex, index) => {
    let url = `/services/${ex.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "")}`;
    return DropDown_jsx(link_default.a, {
      key: index,
      as: url,
      href: `/services/${ex}`
    }, DropDown_jsx("li", {
      className: dropdownLi,
      onClick: () => {
        toggleDropDown();
        toggleNav();
      }
    }, DropDown_jsx("a", null, ex)));
  })));
};
// EXTERNAL MODULE: ./utils/sample-data.ts
var sample_data = __webpack_require__("WuiG");

// EXTERNAL MODULE: external "react-transition-group"
var external_react_transition_group_ = __webpack_require__("CSOn");

// CONCATENATED MODULE: ./components/Header/Header.tsx
var Header_jsx = external_react_default.a.createElement;








const Burger = () => Header_jsx(external_react_default.a.Fragment, null, Header_jsx("div", null), Header_jsx("div", null), Header_jsx("div", null));

const {
  bubble,
  headerStyle,
  Nav,
  navbarContentList,
  navbarAnchor,
  dropdown,
  blue,
  orange,
  burger,
  burgerX
} = Header_module_default.a;
const Header = ({
  height
}) => {
  const {
    0: isNavVisible,
    1: setIsNavVisible
  } = Object(external_react_["useState"])(false);
  const {
    0: isSmallScreen,
    1: setisSmallScreen
  } = Object(external_react_["useState"])(false);
  const {
    0: isDropVisible,
    1: setisDropVisible
  } = Object(external_react_["useState"])(false); //change color on scroll

  Object(external_react_["useEffect"])(() => {
    if (height) {
      window.addEventListener("scroll", headerColorChange);
    }

    return function cleanup() {
      if (height) {
        window.removeEventListener("scroll", headerColorChange);
      }
    };
  });
  Object(external_react_["useEffect"])(() => {
    const mediaQuery = window.matchMedia("(max-width: 900px)");
    mediaQuery.addListener(handleMediaQueryChange);
    handleMediaQueryChange(mediaQuery);
    return () => {
      mediaQuery.removeEventListener("change", handleMediaQueryChange);
    };
  }, []);

  const handleMediaQueryChange = mediaQuery => {
    return mediaQuery.matches ? setisSmallScreen(false) : setisSmallScreen(true);
  };

  const headerColorChange = () => {
    const pageHeight = window.pageYOffset;
    const element = document.querySelector("header");

    if (pageHeight > height) {
      element.style.backgroundColor = blue;
    } else {
      element.style.backgroundColor = orange;
    }
  };

  const toggleNav = () => {
    setIsNavVisible(!isNavVisible);
  };

  const toggleDropDown = () => {
    // onOneHover(0)
    setisDropVisible(!isDropVisible);
  };

  const onOneHover = id => {
    const styl = document.querySelector(`.${bubble}`);

    if (id === 0) {
      styl.style.width = '0px';
      styl.style.height = '0px';
    } else {
      const elem = document.getElementsByClassName(`${navbarAnchor}`)[id];
      const firstElem = elem.getBoundingClientRect();
      const left = elem.offsetLeft;
      styl.style.left = `${left}px`;
      styl.style.width = `${firstElem.width}px`;
      styl.style.height = `${firstElem.height / 4}px`;
    }
  };

  const nameList = [];
  Object.values(sample_data["a" /* default */]).map(ex => nameList.push(ex.name));
  return Header_jsx("header", {
    className: headerStyle
  }, Header_jsx(link_default.a, {
    href: "/"
  }, Header_jsx("a", null, Header_jsx(Logo, {
    colors: {
      stroke: "#fdfffc",
      fill: "none"
    },
    width: "250",
    height: "60",
    className: "logo-svg"
  }))), Header_jsx(external_react_transition_group_["CSSTransition"], {
    in: isSmallScreen || isNavVisible,
    timeout: 350,
    classNames: "NavAnimation",
    unmountOnExit: true
  }, Header_jsx("nav", {
    className: Nav
  }, Header_jsx("ul", {
    className: navbarContentList
  }, Header_jsx("li", {
    onClick: () => isDropVisible ? null : toggleDropDown(),
    onMouseEnter: () => isDropVisible ? null : toggleDropDown(),
    className: dropdown
  }, Header_jsx("a", {
    onMouseOver: () => onOneHover(0),
    className: [navbarAnchor].join()
  }, "SERVICES"), Header_jsx(external_react_transition_group_["CSSTransition"], {
    in: isDropVisible,
    timeout: 350,
    classNames: "DropAnimation",
    unmountOnExit: true
  }, Header_jsx(DropDown, {
    toggleDropDown: toggleDropDown,
    toggleNav: toggleNav,
    content: nameList
  }))), Header_jsx("li", null, Header_jsx("a", {
    onMouseOver: () => onOneHover(1),
    className: navbarAnchor,
    href: "/#section-about"
  }, "Pourquoi Nous?")), Header_jsx("li", null, Header_jsx("a", {
    onMouseOver: () => onOneHover(2),
    className: navbarAnchor,
    href: "/#section-contact"
  }, "Contact")), Header_jsx("div", {
    className: bubble
  })))), Header_jsx("div", {
    onClick: toggleNav,
    className: !isNavVisible ? burger : [burger, burgerX].join(' ')
  }, Header_jsx(Burger, null)));
};
// EXTERNAL MODULE: ./components/Footer/Footer.module.scss
var Footer_module = __webpack_require__("kzqI");
var Footer_module_default = /*#__PURE__*/__webpack_require__.n(Footer_module);

// EXTERNAL MODULE: ./components/svg/Facebook.tsx
var Facebook = __webpack_require__("wUH0");

// EXTERNAL MODULE: ./components/svg/Instagram.tsx
var Instagram = __webpack_require__("ogQf");

// EXTERNAL MODULE: ./components/svg/WhatsApp.tsx
var WhatsApp = __webpack_require__("1N5A");

// CONCATENATED MODULE: ./components/Footer/Footer.tsx
var Footer_jsx = external_react_default.a.createElement;






const Footer = ({}) => {
  const {
    footer,
    content,
    aboutUs,
    socials,
    icons
  } = Footer_module_default.a;
  return Footer_jsx("footer", {
    className: footer
  }, Footer_jsx("div", {
    className: content
  }, Footer_jsx("nav", {
    className: aboutUs
  }, Footer_jsx("h1", null, "A Propos"), Footer_jsx("ul", null, Footer_jsx("li", null, Footer_jsx("a", {
    href: "#section-contact"
  }, " Contact")), Footer_jsx("li", null, " ", Footer_jsx("a", {
    href: "#section-about"
  }, "Pourqoui Nous?"), " "), Footer_jsx("li", null, Footer_jsx("a", {
    href: "#section-products"
  }, " Products")))), Footer_jsx("nav", {
    className: socials
  }, Footer_jsx("h1", null, "Socials"), Footer_jsx("ul", null, Footer_jsx("li", null, Footer_jsx(link_default.a, {
    href: "https://www.facebook.com/Limprimeur-107384444097355/?ref=bookmarks"
  }, Footer_jsx("a", {
    className: icons,
    target: "blank"
  }, Footer_jsx(Facebook["a" /* Facebook */], null)))), Footer_jsx("li", null, Footer_jsx(link_default.a, {
    href: "https://www.instagram.com/express.imprimerie/"
  }, Footer_jsx("a", {
    className: icons,
    target: "blank"
  }, Footer_jsx(Instagram["a" /* Instagram */], null)))), Footer_jsx("li", null, Footer_jsx(link_default.a, {
    href: "/"
  }, Footer_jsx("a", {
    className: icons
  }, Footer_jsx(WhatsApp["a" /* WhatsApp */], null))))))));
};
// EXTERNAL MODULE: ./components/Socials/Socials.module.scss
var Socials_module = __webpack_require__("q836");
var Socials_module_default = /*#__PURE__*/__webpack_require__.n(Socials_module);

// CONCATENATED MODULE: ./components/Socials/Socials.tsx
var Socials_jsx = external_react_default.a.createElement;





const Socials = ({}) => {
  const {
    container,
    ul
  } = Socials_module_default.a;
  return Socials_jsx("div", {
    className: container
  }, Socials_jsx("ul", {
    className: ul
  }, Socials_jsx("li", null, Socials_jsx("a", {
    target: "blank",
    href: "https://www.instagram.com/express.imprimerie/"
  }, Socials_jsx(Instagram["a" /* Instagram */], null))), Socials_jsx("li", null, Socials_jsx("a", {
    target: "blank",
    href: "https://www.facebook.com/Limprimeur-107384444097355/?ref=bookmarks"
  }, Socials_jsx(Facebook["a" /* Facebook */], null))), Socials_jsx("li", null, Socials_jsx("a", {
    href: "https://wa.me/212663152249"
  }, Socials_jsx(WhatsApp["a" /* WhatsApp */], null)))));
};
// CONCATENATED MODULE: ./components/Layout.tsx
var Layout_jsx = external_react_default.a.createElement;






const Layout = ({
  children,
  title = 'This is the default title'
}) => Layout_jsx("main", null, Layout_jsx(head_default.a, null, Layout_jsx("title", null, title), Layout_jsx("meta", {
  charSet: "utf-8"
}), Layout_jsx("meta", {
  name: "viewport",
  content: "initial-scale=1.0, width=device-width"
}), Layout_jsx("link", {
  rel: "apple-touch-icon",
  sizes: "180x180",
  href: "/apple-touch-icon.png"
}), Layout_jsx("link", {
  rel: "icon",
  type: "image/png",
  sizes: "32x32",
  href: "/favicon-32x32.png"
}), Layout_jsx("link", {
  rel: "icon",
  type: "image/png",
  sizes: "16x16",
  href: "/favicon-16x16.png"
}), Layout_jsx("link", {
  rel: "manifest",
  href: "/site.webmanifest"
}), Layout_jsx("link", {
  rel: "mask-icon",
  href: "/safari-pinned-tab.svg",
  color: "#5bbad5"
}), Layout_jsx("meta", {
  name: "msapplication-TileColor",
  content: "#da532c"
}), Layout_jsx("meta", {
  name: "theme-color",
  content: "#dcdada"
}), Layout_jsx("script", {
  defer: true,
  dangerouslySetInnerHTML: {
    __html: `
        var Tawk_API = Tawk_API || {}, Tawk_LoadStart = new Date();
        (function () {
            var s1 = document.createElement("script"), s0 = document.getElementsByTagName("script")[0];
            s1.async = true;
            s1.src = 'https://embed.tawk.to/5f07505b67771f3813c0be7d/default';
            s1.charset = 'UTF-8';
            s1.setAttribute('crossorigin', '*');
            s0.parentNode.insertBefore(s1, s0);
        })();
        `
  }
})), Layout_jsx(Header, {
  height: 400
}), Layout_jsx(Socials, null), children, Layout_jsx(Footer, null));

/* harmony default export */ var components_Layout = __webpack_exports__["a"] = (Layout);

/***/ }),

/***/ "cDcd":
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ "cDf5":
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "cTJO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__("284h");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(__webpack_require__("cDcd"));

var _router = __webpack_require__("elyg");

var _utils = __webpack_require__("kYf9");

var _router2 = __webpack_require__("nOHt");

let cachedObserver;
const listeners = new Map();
const IntersectionObserver = false ? undefined : null;
const prefetched = {};

function getObserver() {
  // Return shared instance of IntersectionObserver if already created
  if (cachedObserver) {
    return cachedObserver;
  } // Only create shared IntersectionObserver if supported in browser


  if (!IntersectionObserver) {
    return undefined;
  }

  return cachedObserver = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (!listeners.has(entry.target)) {
        return;
      }

      const cb = listeners.get(entry.target);

      if (entry.isIntersecting || entry.intersectionRatio > 0) {
        cachedObserver.unobserve(entry.target);
        listeners.delete(entry.target);
        cb();
      }
    });
  }, {
    rootMargin: '200px'
  });
}

const listenToIntersections = (el, cb) => {
  const observer = getObserver();

  if (!observer) {
    return () => {};
  }

  observer.observe(el);
  listeners.set(el, cb);
  return () => {
    try {
      observer.unobserve(el);
    } catch (err) {
      console.error(err);
    }

    listeners.delete(el);
  };
};

function prefetch(router, href, as, options) {
  if (true) return;
  if (!(0, _router.isLocalURL)(href)) return; // Prefetch the JSON page if asked (only in the client)
  // We need to handle a prefetch error here since we may be
  // loading with priority which can reject but we don't
  // want to force navigation since this is only a prefetch

  router.prefetch(href, as, options).catch(err => {
    if (false) {}
  }); // Join on an invalid URI character

  prefetched[href + '%' + as] = true;
}

function isModifiedEvent(event) {
  const {
    target
  } = event.currentTarget;
  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download
  event.nativeEvent && event.nativeEvent.which === 2;
}

function linkClicked(e, router, href, as, replace, shallow, scroll) {
  const {
    nodeName
  } = e.currentTarget;

  if (nodeName === 'A' && (isModifiedEvent(e) || !(0, _router.isLocalURL)(href))) {
    // ignore click for browser’s default behavior
    return;
  }

  e.preventDefault(); //  avoid scroll for urls with anchor refs

  if (scroll == null) {
    scroll = as.indexOf('#') < 0;
  } // replace state instead of push if prop is present


  router[replace ? 'replace' : 'push'](href, as, {
    shallow
  }).then(success => {
    if (!success) return;

    if (scroll) {
      window.scrollTo(0, 0);
      document.body.focus();
    }
  });
}

function Link(props) {
  if (false) {}

  const p = props.prefetch !== false;

  const [childElm, setChildElm] = _react.default.useState();

  const router = (0, _router2.useRouter)();
  const pathname = router && router.pathname || '/';

  const {
    href,
    as
  } = _react.default.useMemo(() => {
    const resolvedHref = (0, _router.resolveHref)(pathname, props.href);
    return {
      href: resolvedHref,
      as: props.as ? (0, _router.resolveHref)(pathname, props.as) : resolvedHref
    };
  }, [pathname, props.href, props.as]);

  _react.default.useEffect(() => {
    if (p && IntersectionObserver && childElm && childElm.tagName && (0, _router.isLocalURL)(href)) {
      // Join on an invalid URI character
      const isPrefetched = prefetched[href + '%' + as];

      if (!isPrefetched) {
        return listenToIntersections(childElm, () => {
          prefetch(router, href, as);
        });
      }
    }
  }, [p, childElm, href, as, router]);

  let {
    children,
    replace,
    shallow,
    scroll
  } = props; // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag

  if (typeof children === 'string') {
    children = /*#__PURE__*/_react.default.createElement("a", null, children);
  } // This will return the first child, if multiple are provided it will throw an error


  const child = _react.Children.only(children);

  const childProps = {
    ref: el => {
      if (el) setChildElm(el);

      if (child && typeof child === 'object' && child.ref) {
        if (typeof child.ref === 'function') child.ref(el);else if (typeof child.ref === 'object') {
          child.ref.current = el;
        }
      }
    },
    onClick: e => {
      if (child.props && typeof child.props.onClick === 'function') {
        child.props.onClick(e);
      }

      if (!e.defaultPrevented) {
        linkClicked(e, router, href, as, replace, shallow, scroll);
      }
    }
  };

  if (p) {
    childProps.onMouseEnter = e => {
      if (!(0, _router.isLocalURL)(href)) return;

      if (child.props && typeof child.props.onMouseEnter === 'function') {
        child.props.onMouseEnter(e);
      }

      prefetch(router, href, as, {
        priority: true
      });
    };
  } // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
  // defined, we specify the current 'href', so that repetition is not needed by the user


  if (props.passHref || child.type === 'a' && !('href' in child.props)) {
    childProps.href = (0, _router.addBasePath)(as);
  }

  return _react.default.cloneElement(child, childProps);
}

if (false) {}

var _default = Link;
exports.default = _default;

/***/ }),

/***/ "cYuJ":
/***/ (function(module, exports) {

module.exports = require("react-obfuscate");

/***/ }),

/***/ "dZ6Y":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = mitt;
/*
MIT License
Copyright (c) Jason Miller (https://jasonformat.com/)
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file

function mitt() {
  const all = Object.create(null);
  return {
    on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },

    off(type, handler) {
      if (all[type]) {
        // tslint:disable-next-line:no-bitwise
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },

    emit(type, ...evts) {
      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(handler => {
        handler(...evts);
      });
    }

  };
}

/***/ }),

/***/ "elyg":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.hasBasePath = hasBasePath;
exports.addBasePath = addBasePath;
exports.delBasePath = delBasePath;
exports.isLocalURL = isLocalURL;
exports.resolveHref = resolveHref;
exports.markLoadingError = markLoadingError;
exports.default = void 0;

var _mitt = _interopRequireDefault(__webpack_require__("dZ6Y"));

var _utils = __webpack_require__("g/15");

var _isDynamic = __webpack_require__("/jkW");

var _routeMatcher = __webpack_require__("gguc");

var _routeRegex = __webpack_require__("YTqd");

var _querystring = __webpack_require__("3WeD");

var _parseRelativeUrl = __webpack_require__("hS4m");

var _normalizeTrailingSlash = __webpack_require__("X24+");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/* global __NEXT_DATA__ */
// tslint:disable:no-console


const basePath =  false || '';

function buildCancellationError() {
  return Object.assign(new Error('Route Cancelled'), {
    cancelled: true
  });
}

function hasBasePath(path) {
  return path === basePath || path.startsWith(basePath + '/');
}

function addBasePath(path) {
  // we only add the basepath on relative urls
  return basePath && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(basePath) : basePath + path : path;
}

function delBasePath(path) {
  return path.slice(basePath.length) || '/';
}
/**
* Detects whether a given url is routable by the Next.js router (browser only).
*/


function isLocalURL(url) {
  if (url.startsWith('/')) return true;

  try {
    // absolute urls can be local if they are on the same origin
    const locationOrigin = (0, _utils.getLocationOrigin)();
    const resolved = new URL(url, locationOrigin);
    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);
  } catch (_) {
    return false;
  }
}
/**
* Resolves a given hyperlink with a certain router state (basePath not included).
* Preserves absolute urls.
*/


function resolveHref(currentPath, href) {
  // we use a dummy base url for relative urls
  const base = new URL(currentPath, 'http://n');
  const urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href);

  try {
    const finalUrl = new URL(urlAsString, base);
    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname); // if the origin didn't change, it means we received a relative href

    return finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
  } catch (_) {
    return urlAsString;
  }
}

const PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR');

function markLoadingError(err) {
  return Object.defineProperty(err, PAGE_LOAD_ERROR, {});
}

function prepareUrlAs(router, url, as) {
  // If url and as provided as an object representation,
  // we'll format them into the string version here.
  return {
    url: addBasePath(resolveHref(router.pathname, url)),
    as: as ? addBasePath(resolveHref(router.pathname, as)) : as
  };
}

function tryParseRelativeUrl(url) {
  try {
    return (0, _parseRelativeUrl.parseRelativeUrl)(url);
  } catch (err) {
    if (false) {}

    return null;
  }
}

const manualScrollRestoration =  false && false;

function fetchRetry(url, attempts) {
  return fetch(url, {
    // Cookies are required to be present for Next.js' SSG "Preview Mode".
    // Cookies may also be required for `getServerSideProps`.
    //
    // > `fetch` won’t send cookies, unless you set the credentials init
    // > option.
    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    //
    // > For maximum browser compatibility when it comes to sending &
    // > receiving cookies, always supply the `credentials: 'same-origin'`
    // > option instead of relying on the default.
    // https://github.com/github/fetch#caveats
    credentials: 'same-origin'
  }).then(res => {
    if (!res.ok) {
      if (attempts > 1 && res.status >= 500) {
        return fetchRetry(url, attempts - 1);
      }

      throw new Error(`Failed to load static props`);
    }

    return res.json();
  });
}

function fetchNextData(dataHref, isServerRender) {
  return fetchRetry(dataHref, isServerRender ? 3 : 1).catch(err => {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      markLoadingError(err);
    }

    throw err;
  });
}

class Router {
  /**
  * Map of all components loaded in `Router`
  */
  // Static Data Cache
  constructor(_pathname, _query, _as, {
    initialProps,
    pageLoader,
    App,
    wrapApp,
    Component,
    err,
    subscription,
    isFallback
  }) {
    this.route = void 0;
    this.pathname = void 0;
    this.query = void 0;
    this.asPath = void 0;
    this.basePath = void 0;
    this.components = void 0;
    this.sdc = {};
    this.sub = void 0;
    this.clc = void 0;
    this.pageLoader = void 0;
    this._bps = void 0;
    this.events = void 0;
    this._wrapApp = void 0;
    this.isSsr = void 0;
    this.isFallback = void 0;
    this._inFlightRoute = void 0;

    this.onPopState = e => {
      const state = e.state;

      if (!state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        const {
          pathname,
          query
        } = this;
        this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(pathname),
          query
        }), (0, _utils.getURL)());
        return;
      }

      if (!state.__N) {
        return;
      }

      const {
        url,
        as,
        options
      } = state;
      const {
        pathname
      } = (0, _parseRelativeUrl.parseRelativeUrl)(url); // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site

      if (this.isSsr && as === this.asPath && pathname === this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (this._bps && !this._bps(state)) {
        return;
      }

      this.change('replaceState', url, as, options);
    }; // represents the current component key


    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (_pathname !== '/_error') {
      this.components[this.route] = {
        Component,
        props: initialProps,
        err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }

    this.components['/_app'] = {
      Component: App
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented

    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = _pathname;
    this.query = _query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch

    this.asPath = // @ts-ignore this is temporarily global (attached to window)
    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site

    this.isSsr = true;
    this.isFallback = isFallback;

    if (false) {}
  }

  update(route, mod) {
    const Component = mod.default || mod;
    const data = this.components[route];

    if (!data) {
      throw new Error(`Cannot update unavailable route: ${route}`);
    }

    const newData = Object.assign({}, data, {
      Component,
      __N_SSG: mod.__N_SSG,
      __N_SSP: mod.__N_SSP
    });
    this.components[route] = newData; // pages/_app.js updated

    if (route === '/_app') {
      this.notify(this.components[this.route]);
      return;
    }

    if (route === this.route) {
      this.notify(newData);
    }
  }

  reload() {
    window.location.reload();
  }
  /**
  * Go back in history
  */


  back() {
    window.history.back();
  }
  /**
  * Performs a `pushState` with arguments
  * @param url of the route
  * @param as masks `url` for the browser
  * @param options object you can define `shallow` and other options
  */


  push(url, as = url, options = {}) {
    ;
    ({
      url,
      as
    } = prepareUrlAs(this, url, as));
    return this.change('pushState', url, as, options);
  }
  /**
  * Performs a `replaceState` with arguments
  * @param url of the route
  * @param as masks `url` for the browser
  * @param options object you can define `shallow` and other options
  */


  replace(url, as = url, options = {}) {
    ;
    ({
      url,
      as
    } = prepareUrlAs(this, url, as));
    return this.change('replaceState', url, as, options);
  }

  async change(method, url, as, options) {
    if (!isLocalURL(url)) {
      window.location.href = url;
      return false;
    }

    if (!options._h) {
      this.isSsr = false;
    } // marking route changes as a navigation start entry


    if (_utils.ST) {
      performance.mark('routeChange');
    }

    if (this._inFlightRoute) {
      this.abortComponentLoad(this._inFlightRoute);
    }

    const cleanedAs = hasBasePath(as) ? delBasePath(as) : as;
    this._inFlightRoute = as; // If the url change is only related to a hash change
    // We should not proceed. We should only change the state.
    // WARNING: `_h` is an internal option for handing Next.js client-side
    // hydration. Your app should _never_ use this property. It may change at
    // any time without notice.

    if (!options._h && this.onlyAHashChange(cleanedAs)) {
      this.asPath = cleanedAs;
      Router.events.emit('hashChangeStart', as);
      this.changeState(method, url, as, options);
      this.scrollToHash(cleanedAs);
      this.notify(this.components[this.route]);
      Router.events.emit('hashChangeComplete', as);
      return true;
    }

    const parsed = tryParseRelativeUrl(url);
    if (!parsed) return false;
    let {
      pathname,
      searchParams
    } = parsed;
    const query = (0, _querystring.searchParamsToUrlQuery)(searchParams); // url and as should always be prefixed with basePath by this
    // point by either next/link or router.push/replace so strip the
    // basePath from the pathname to match the pages dir 1-to-1

    pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page
    // (not location.reload() but reload getInitialProps and other Next.js stuffs)
    // We also need to set the method = replaceState always
    // as this should not go into the history (That's how browsers work)
    // We should compare the new asPath to the current asPath, not the url

    if (!this.urlIsNew(cleanedAs)) {
      method = 'replaceState';
    }

    const route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
    const {
      shallow = false
    } = options;

    if ((0, _isDynamic.isDynamicRoute)(route)) {
      const {
        pathname: asPathname
      } = (0, _parseRelativeUrl.parseRelativeUrl)(cleanedAs);
      const routeRegex = (0, _routeRegex.getRouteRegex)(route);
      const routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);

      if (!routeMatch) {
        const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);

        if (missingParams.length > 0) {
          if (false) {}

          throw new Error(`The provided \`as\` value (${asPathname}) is incompatible with the \`href\` value (${route}). ` + `Read more: https://err.sh/vercel/next.js/incompatible-href-as`);
        }
      } else {
        // Merge params into `query`, overwriting any specified in search
        Object.assign(query, routeMatch);
      }
    }

    Router.events.emit('routeChangeStart', as);

    try {
      const routeInfo = await this.getRouteInfo(route, pathname, query, as, shallow);
      const {
        error
      } = routeInfo;
      Router.events.emit('beforeHistoryChange', as);
      this.changeState(method, url, as, options);

      if (false) {}

      await this.set(route, pathname, query, cleanedAs, routeInfo);

      if (error) {
        Router.events.emit('routeChangeError', error, cleanedAs);
        throw error;
      }

      if (false) {}

      Router.events.emit('routeChangeComplete', as);
      return true;
    } catch (err) {
      if (err.cancelled) {
        return false;
      }

      throw err;
    }
  }

  changeState(method, url, as, options = {}) {
    if (false) {}

    if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
      window.history[method]({
        url,
        as,
        options,
        __N: true
      }, // Most browsers currently ignores this parameter, although they may use it in the future.
      // Passing the empty string here should be safe against future changes to the method.
      // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
      '', as);
    }
  }

  async handleRouteInfoError(err, pathname, query, as, loadErrorFail) {
    if (err.cancelled) {
      // bubble up cancellation errors
      throw err;
    }

    if (PAGE_LOAD_ERROR in err || loadErrorFail) {
      Router.events.emit('routeChangeError', err, as); // If we can't load the page it could be one of following reasons
      //  1. Page doesn't exists
      //  2. Page does exist in a different zone
      //  3. Internal error while loading the page
      // So, doing a hard reload is the proper way to deal with this.

      window.location.href = as; // Changing the URL doesn't block executing the current code path.
      // So let's throw a cancellation error stop the routing logic.

      throw buildCancellationError();
    }

    try {
      const {
        page: Component
      } = await this.fetchComponent('/_error');
      const routeInfo = {
        Component,
        err,
        error: err
      };

      try {
        routeInfo.props = await this.getInitialProps(Component, {
          err,
          pathname,
          query
        });
      } catch (gipErr) {
        console.error('Error in error page `getInitialProps`: ', gipErr);
        routeInfo.props = {};
      }

      return routeInfo;
    } catch (routeInfoErr) {
      return this.handleRouteInfoError(routeInfoErr, pathname, query, as, true);
    }
  }

  async getRouteInfo(route, pathname, query, as, shallow = false) {
    try {
      const cachedRouteInfo = this.components[route];

      if (shallow && cachedRouteInfo && this.route === route) {
        return cachedRouteInfo;
      }

      const routeInfo = cachedRouteInfo ? cachedRouteInfo : await this.fetchComponent(route).then(res => ({
        Component: res.page,
        __N_SSG: res.mod.__N_SSG,
        __N_SSP: res.mod.__N_SSP
      }));
      const {
        Component,
        __N_SSG,
        __N_SSP
      } = routeInfo;

      if (false) {}

      let dataHref;

      if (__N_SSG || __N_SSP) {
        dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({
          pathname,
          query
        }), as, __N_SSG);
      }

      const props = await this._getData(() => __N_SSG ? this._getStaticData(dataHref) : __N_SSP ? this._getServerData(dataHref) : this.getInitialProps(Component, // we provide AppTree later so this needs to be `any`
      {
        pathname,
        query,
        asPath: as
      }));
      routeInfo.props = props;
      this.components[route] = routeInfo;
      return routeInfo;
    } catch (err) {
      return this.handleRouteInfoError(err, pathname, query, as);
    }
  }

  set(route, pathname, query, as, data) {
    this.isFallback = false;
    this.route = route;
    this.pathname = pathname;
    this.query = query;
    this.asPath = as;
    return this.notify(data);
  }
  /**
  * Callback to execute before replacing router state
  * @param cb callback to be executed
  */


  beforePopState(cb) {
    this._bps = cb;
  }

  onlyAHashChange(as) {
    if (!this.asPath) return false;
    const [oldUrlNoHash, oldHash] = this.asPath.split('#');
    const [newUrlNoHash, newHash] = as.split('#'); // Makes sure we scroll to the provided hash if the url/hash are the same

    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
      return true;
    } // If the urls are change, there's more than a hash change


    if (oldUrlNoHash !== newUrlNoHash) {
      return false;
    } // If the hash has changed, then it's a hash only change.
    // This check is necessary to handle both the enter and
    // leave hash === '' cases. The identity case falls through
    // and is treated as a next reload.


    return oldHash !== newHash;
  }

  scrollToHash(as) {
    const [, hash] = as.split('#'); // Scroll to top if the hash is just `#` with no value

    if (hash === '') {
      window.scrollTo(0, 0);
      return;
    } // First we check if the element by id is found


    const idEl = document.getElementById(hash);

    if (idEl) {
      idEl.scrollIntoView();
      return;
    } // If there's no element with the id, we check the `name` property
    // To mirror browsers


    const nameEl = document.getElementsByName(hash)[0];

    if (nameEl) {
      nameEl.scrollIntoView();
    }
  }

  urlIsNew(asPath) {
    return this.asPath !== asPath;
  }
  /**
  * Prefetch page code, you may wait for the data during page rendering.
  * This feature only works in production!
  * @param url the href of prefetched page
  * @param asPath the as path of the prefetched page
  */


  async prefetch(url, asPath = url, options = {}) {
    const parsed = tryParseRelativeUrl(url);
    if (!parsed) return;
    const {
      pathname
    } = parsed; // Prefetch is not supported in development mode because it would trigger on-demand-entries

    if (false) {}

    const route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
    await Promise.all([this.pageLoader.prefetchData(url, asPath), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);
  }

  async fetchComponent(route) {
    let cancelled = false;

    const cancel = this.clc = () => {
      cancelled = true;
    };

    const componentResult = await this.pageLoader.loadPage(route);

    if (cancelled) {
      const error = new Error(`Abort fetching component for route: "${route}"`);
      error.cancelled = true;
      throw error;
    }

    if (cancel === this.clc) {
      this.clc = null;
    }

    return componentResult;
  }

  _getData(fn) {
    let cancelled = false;

    const cancel = () => {
      cancelled = true;
    };

    this.clc = cancel;
    return fn().then(data => {
      if (cancel === this.clc) {
        this.clc = null;
      }

      if (cancelled) {
        const err = new Error('Loading initial props cancelled');
        err.cancelled = true;
        throw err;
      }

      return data;
    });
  }

  _getStaticData(dataHref) {
    const {
      href: cacheKey
    } = new URL(dataHref, window.location.href);

    if ( true && this.sdc[cacheKey]) {
      return Promise.resolve(this.sdc[cacheKey]);
    }

    return fetchNextData(dataHref, this.isSsr).then(data => {
      this.sdc[cacheKey] = data;
      return data;
    });
  }

  _getServerData(dataHref) {
    return fetchNextData(dataHref, this.isSsr);
  }

  getInitialProps(Component, ctx) {
    const {
      Component: App
    } = this.components['/_app'];

    const AppTree = this._wrapApp(App);

    ctx.AppTree = AppTree;
    return (0, _utils.loadGetInitialProps)(App, {
      AppTree,
      Component,
      router: this,
      ctx
    });
  }

  abortComponentLoad(as) {
    if (this.clc) {
      Router.events.emit('routeChangeError', buildCancellationError(), as);
      this.clc();
      this.clc = null;
    }
  }

  notify(data) {
    return this.sub(data, this.components['/_app'].Component);
  }

}

exports.default = Router;
Router.events = (0, _mitt.default)();

/***/ }),

/***/ "ew1k":
/***/ (function(module, exports) {

// Exports
module.exports = {};


/***/ }),

/***/ "g/15":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.execOnce = execOnce;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.formatWithValidation = formatWithValidation;
exports.ST = exports.SP = exports.urlObjectKeys = void 0;

var _formatUrl = __webpack_require__("6D7l");
/**
* Utils
*/


function execOnce(fn) {
  let used = false;
  let result;
  return (...args) => {
    if (!used) {
      used = true;
      result = fn(...args);
    }

    return result;
  };
}

function getLocationOrigin() {
  const {
    protocol,
    hostname,
    port
  } = window.location;
  return `${protocol}//${hostname}${port ? ':' + port : ''}`;
}

function getURL() {
  const {
    href
  } = window.location;
  const origin = getLocationOrigin();
  return href.substring(origin.length);
}

function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}

function isResSent(res) {
  return res.finished || res.headersSent;
}

async function loadGetInitialProps(App, ctx) {
  if (false) { var _App$prototype; } // when called from _app `ctx` is nested in `ctx`


  const res = ctx.res || ctx.ctx && ctx.ctx.res;

  if (!App.getInitialProps) {
    if (ctx.ctx && ctx.Component) {
      // @ts-ignore pageProps default
      return {
        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
      };
    }

    return {};
  }

  const props = await App.getInitialProps(ctx);

  if (res && isResSent(res)) {
    return props;
  }

  if (!props) {
    const message = `"${getDisplayName(App)}.getInitialProps()" should resolve to an object. But found "${props}" instead.`;
    throw new Error(message);
  }

  if (false) {}

  return props;
}

const urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];
exports.urlObjectKeys = urlObjectKeys;

function formatWithValidation(url) {
  if (false) {}

  return (0, _formatUrl.formatUrl)(url);
}

const SP = typeof performance !== 'undefined';
exports.SP = SP;
const ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';
exports.ST = ST;

/***/ }),

/***/ "gguc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRouteMatcher = getRouteMatcher;

function getRouteMatcher(routeRegex) {
  const {
    re,
    groups
  } = routeRegex;
  return pathname => {
    const routeMatch = re.exec(pathname);

    if (!routeMatch) {
      return false;
    }

    const decode = param => {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        const err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };

    const params = {};
    Object.keys(groups).forEach(slugName => {
      const g = groups[slugName];
      const m = routeMatch[g.pos];

      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(entry => decode(entry)) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

/***/ }),

/***/ "hS4m":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseRelativeUrl = parseRelativeUrl;

var _utils = __webpack_require__("g/15");

const DUMMY_BASE = new URL(true ? 'http://n' : undefined);
/**
* Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative
* (e.g. `./hello`) then at least base must be.
* Absolute urls are rejected with one exception, in the browser, absolute urls that are on
* the current origin will be parsed as relative
*/

function parseRelativeUrl(url, base) {
  const resolvedBase = base ? new URL(base, DUMMY_BASE) : DUMMY_BASE;
  const {
    pathname,
    searchParams,
    search,
    hash,
    href,
    origin,
    protocol
  } = new URL(url, resolvedBase);

  if (origin !== DUMMY_BASE.origin || protocol !== 'http:' && protocol !== 'https:') {
    throw new Error('invariant: invalid relative URL');
  }

  return {
    pathname,
    searchParams,
    search,
    hash,
    href: href.slice(DUMMY_BASE.origin.length)
  };
}

/***/ }),

/***/ "jqOM":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export default */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("cDcd");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


function getWindowDimensions() {
  const {
    innerWidth: width
  } = window;
  return {
    width
  };
}

function useWindowDimensions() {
  const {
    0: windowDimensions,
    1: setWindowDimensions
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(getWindowDimensions());
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    function handleResize() {
      setWindowDimensions(getWindowDimensions());
    }

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);
  return windowDimensions;
}

/***/ }),

/***/ "kYf9":
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/utils.js");

/***/ }),

/***/ "kzqI":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"icons": "Footer_icons__1kJgl",
	"footer": "Footer_footer__3f33N",
	"content": "Footer_content__1bpu6",
	"aboutUs": "Footer_aboutUs__3IlbQ",
	"socials": "Footer_socials__3zRTC",
	"credit": "Footer_credit__3-qP8"
};


/***/ }),

/***/ "nOHt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__("284h");

var _interopRequireDefault = __webpack_require__("TqRt");

exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__("cDcd"));

var _router2 = _interopRequireWildcard(__webpack_require__("elyg"));

exports.Router = _router2.default;
exports.NextRouter = _router2.NextRouter;

var _routerContext = __webpack_require__("Osoz");

var _withRouter = _interopRequireDefault(__webpack_require__("0Bsm"));

exports.withRouter = _withRouter.default;
/* global window */

const singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],

  ready(cb) {
    if (this.router) return cb();

    if (false) {}
  }

}; // Create public properties and methods of the router in the singletonRouter

const urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath'];
const routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
const coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(singletonRouter, 'events', {
  get() {
    return _router2.default.events;
  }

});
urlPropertyFields.forEach(field => {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get() {
      const router = getRouter();
      return router[field];
    }

  });
});
coreMethodFields.forEach(field => {
  // We don't really know the types here, so we add them later instead
  ;

  singletonRouter[field] = (...args) => {
    const router = getRouter();
    return router[field](...args);
  };
});
routerEvents.forEach(event => {
  singletonRouter.ready(() => {
    _router2.default.events.on(event, (...args) => {
      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;
      const _singletonRouter = singletonRouter;

      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField](...args);
        } catch (err) {
          // tslint:disable-next-line:no-console
          console.error(`Error when running the Router event: ${eventField}`); // tslint:disable-next-line:no-console

          console.error(`${err.message}\n${err.stack}`);
        }
      }
    });
  });
});

function getRouter() {
  if (!singletonRouter.router) {
    const message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }

  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.


var _default = singletonRouter; // Reexport the withRoute HOC

exports.default = _default;

function useRouter() {
  return _react.default.useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.


const createRouter = (...args) => {
  singletonRouter.router = new _router2.default(...args);
  singletonRouter.readyCallbacks.forEach(cb => cb());
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance


exports.createRouter = createRouter;

function makePublicRouterInstance(router) {
  const _router = router;
  const instance = {};

  for (const property of urlPropertyFields) {
    if (typeof _router[property] === 'object') {
      instance[property] = Object.assign({}, _router[property]); // makes sure query is not stateful

      continue;
    }

    instance[property] = _router[property];
  } // Events is a static property on the router, the router doesn't have to be initialized to use it


  instance.events = _router2.default.events;
  coreMethodFields.forEach(field => {
    instance[field] = (...args) => {
      return _router[field](...args);
    };
  });
  return instance;
}

/***/ }),

/***/ "ogQf":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Instagram; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("cDcd");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _SvgHolder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("SQJ2");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;


const Instagram = () => {
  return __jsx(_SvgHolder__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"], {
    viewBox: "0 0 24 24",
    width: "20px",
    height: "20px"
  }, __jsx("path", {
    d: "M7.8 2h8.4C19.4 2 22 4.6 22 7.8v8.4a5.8 5.8 0 0 1-5.8 5.8H7.8C4.6 22 2 19.4 2 16.2V7.8A5.8 5.8 0 0 1 7.8 2m-.2 2A3.6 3.6 0 0 0 4 7.6v8.8C4 18.39 5.61 20 7.6 20h8.8a3.6 3.6 0 0 0 3.6-3.6V7.6C20 5.61 18.39 4 16.4 4H7.6m9.65 1.5a1.25 1.25 0 0 1 1.25 1.25A1.25 1.25 0 0 1 17.25 8 1.25 1.25 0 0 1 16 6.75a1.25 1.25 0 0 1 1.25-1.25M12 7a5 5 0 0 1 5 5 5 5 0 0 1-5 5 5 5 0 0 1-5-5 5 5 0 0 1 5-5m0 2a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3z"
  }));
};

/***/ }),

/***/ "q836":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"container": "Socials_container__2KFrR",
	"all": "Socials_all__3DjTr",
	"ul": "Socials_ul__snw5c"
};


/***/ }),

/***/ "wUH0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Facebook; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("cDcd");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _SvgHolder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("SQJ2");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;


const Facebook = () => {
  return __jsx(_SvgHolder__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"], {
    viewBox: "0 0 24 24",
    width: "20px",
    height: "20px"
  }, __jsx("path", {
    d: "M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2m13 2h-2.5A3.5 3.5 0 0 0 12 8.5V11h-2v3h2v7h3v-7h3v-3h-3V9a1 1 0 0 1 1-1h2V5z"
  }));
};

/***/ }),

/***/ "xnum":
/***/ (function(module, exports) {

module.exports = require("next/head");

/***/ }),

/***/ "yzvi":
/***/ (function(module, exports) {

// Exports
module.exports = {
	"blue": "#264653",
	"gray": "#4b595b",
	"orange": "#e76f51",
	"burger": "Header_burger__1XfcK",
	"BurgerX": "Header_BurgerX__15_6t",
	"dropdown": "Header_dropdown__2MFms",
	"headerStyle": "Header_headerStyle__3TpZw",
	"Nav": "Header_Nav__2cKO_",
	"navbarContentList": "Header_navbarContentList__3eucL",
	"Logo": "Header_Logo__39LML",
	"navbarAnchor": "Header_navbarAnchor__K6FI6",
	"dropbtn": "Header_dropbtn__3DX6k",
	"bubble": "Header_bubble__1ABrk"
};


/***/ })

/******/ });